// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ret_base.proto

#ifndef PROTOBUF_ret_5fbase_2eproto__INCLUDED
#define PROTOBUF_ret_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ret_5fbase_2eproto();
void protobuf_AssignDesc_ret_5fbase_2eproto();
void protobuf_ShutdownFile_ret_5fbase_2eproto();

class Ret;

// ===================================================================

class Ret : public ::google::protobuf::Message {
 public:
  Ret();
  virtual ~Ret();
  
  Ret(const Ret& from);
  
  inline Ret& operator=(const Ret& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Ret& default_instance();
  
  void Swap(Ret* other);
  
  // implements Message ----------------------------------------------
  
  Ret* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Ret& from);
  void MergeFrom(const Ret& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 err_code = 1;
  inline bool has_err_code() const;
  inline void clear_err_code();
  static const int kErrCodeFieldNumber = 1;
  inline ::google::protobuf::int32 err_code() const;
  inline void set_err_code(::google::protobuf::int32 value);
  
  // optional bytes err_msg = 2;
  inline bool has_err_msg() const;
  inline void clear_err_msg();
  static const int kErrMsgFieldNumber = 2;
  inline const ::std::string& err_msg() const;
  inline void set_err_msg(const ::std::string& value);
  inline void set_err_msg(const char* value);
  inline void set_err_msg(const void* value, size_t size);
  inline ::std::string* mutable_err_msg();
  inline ::std::string* release_err_msg();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.Ret)
 private:
  inline void set_has_err_code();
  inline void clear_has_err_code();
  inline void set_has_err_msg();
  inline void clear_has_err_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* err_msg_;
  ::google::protobuf::int32 err_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_ret_5fbase_2eproto();
  friend void protobuf_AssignDesc_ret_5fbase_2eproto();
  friend void protobuf_ShutdownFile_ret_5fbase_2eproto();
  
  void InitAsDefaultInstance();
  static Ret* default_instance_;
};
// ===================================================================


// ===================================================================

// Ret

// required int32 err_code = 1;
inline bool Ret::has_err_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Ret::set_has_err_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Ret::clear_has_err_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Ret::clear_err_code() {
  err_code_ = 0;
  clear_has_err_code();
}
inline ::google::protobuf::int32 Ret::err_code() const {
  return err_code_;
}
inline void Ret::set_err_code(::google::protobuf::int32 value) {
  set_has_err_code();
  err_code_ = value;
}

// optional bytes err_msg = 2;
inline bool Ret::has_err_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Ret::set_has_err_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Ret::clear_has_err_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Ret::clear_err_msg() {
  if (err_msg_ != &::google::protobuf::internal::kEmptyString) {
    err_msg_->clear();
  }
  clear_has_err_msg();
}
inline const ::std::string& Ret::err_msg() const {
  return *err_msg_;
}
inline void Ret::set_err_msg(const ::std::string& value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::kEmptyString) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
}
inline void Ret::set_err_msg(const char* value) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::kEmptyString) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(value);
}
inline void Ret::set_err_msg(const void* value, size_t size) {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::kEmptyString) {
    err_msg_ = new ::std::string;
  }
  err_msg_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Ret::mutable_err_msg() {
  set_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::kEmptyString) {
    err_msg_ = new ::std::string;
  }
  return err_msg_;
}
inline ::std::string* Ret::release_err_msg() {
  clear_has_err_msg();
  if (err_msg_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = err_msg_;
    err_msg_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ret_5fbase_2eproto__INCLUDED
