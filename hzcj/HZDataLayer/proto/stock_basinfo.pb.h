// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stock_basinfo.proto

#ifndef PROTOBUF_stock_5fbasinfo_2eproto__INCLUDED
#define PROTOBUF_stock_5fbasinfo_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();

class BatchGetStockRequest;
class BatchGetStockResponse;
class StockOptionalRequest;
class StockOptionalResponse;
class MoneyOptionalRequest;
class MoneyOptionalResponse;
class BatchGetMoneyRequest;
class BatchGetMoneyResponse;
class MoneyFieldLineRequest;
class MoneyFieldLineResponse;
class GetStockRiseFallInfoRequest;
class GetStockRiseFallInfoResponse;
class GetStocksOfBlockRequest;
class GetStocksOfBlockResponse;
class MoneyAbnormalOptionalRequest;
class MoneyAbnormalOptionalResponse;
class BatchGetMoneyAbnormalRequest;
class BatchGetMoneyAbnormalResponse;
class BlockMoneyAbnoramlRequest;
class BlockMoneyAbnoramlResponse;
class BlockMoneyAbnormalPCRequest;
class BlockMoneyAbnormalPCResponse;
class GetTimeRequest;
class GetTimeResponse;

enum SortType {
  highest_price = 1,
  lowest_price = 2,
  last_price = 3,
  averag_price = 4,
  rise_fall_price = 5,
  rise_fall_rate = 6,
  bid_price = 7,
  ask_price = 8,
  volume = 9,
  turnover = 10,
  cur_volume = 11,
  turnover_rate = 12,
  pre_close_price = 13,
  open_price = 14,
  pes = 15,
  np_volume = 16,
  wp_volume = 17,
  ratio = 18,
  committee = 19,
  buy_sell_buy = 20,
  pbv = 21,
  tot_stock = 22,
  cir_stock = 23,
  tot_value = 24,
  cir_value = 25,
  nwp_rate = 26,
  sa = 27,
  speed_rate = 28,
  three_rate = 29,
  three_tuv_rate = 31,
  five_tuv_rate = 32,
  ped = 33,
  five_rate = 34,
  security_name = 35,
  year_rate = 36,
  block_rate = 101,
  block_up_down_ratio = 102,
  block_turnover_rate = 103,
  block_turnover = 104,
  block_tot_value = 105,
  block_cir_value = 106,
  block_avg_stock = 107,
  block_volume = 108,
  block_upper = 109,
  block_down = 110,
  block_speed_rate = 111,
  block_three_rate = 112,
  block_three_tuv_rate = 114,
  block_five_tuv_rate = 115,
  block_rise_day_num = 116,
  block_five_rate = 117,
  block_block_name = 118,
  block_year_rate = 119,
  money_last_price = 201,
  money_rate = 202,
  money_auction_volume = 203,
  leader_money_input = 204,
  leader_money_output = 205,
  leader_money_netput = 206,
  leader_money_rate = 207,
  maxord_money_input = 208,
  maxord_money_output = 209,
  maxord_money_netput = 210,
  maxord_money_rate = 211,
  bigord_money_input = 212,
  bigord_money_output = 213,
  bigord_money_netput = 214,
  bigord_money_rate = 215,
  midord_money_input = 216,
  midord_money_output = 217,
  midord_money_netput = 218,
  midord_money_rate = 219,
  minord_money_input = 220,
  minord_money_output = 221,
  minord_money_netput = 222,
  minord_money_rate = 223,
  three_leader_money_netput = 224,
  five_leader_money_netput = 225,
  auction_turnover = 226,
  money_security_name = 227,
  money_up_down_price = 228
};
bool SortType_IsValid(int value);
const SortType SortType_MIN = highest_price;
const SortType SortType_MAX = money_up_down_price;
const int SortType_ARRAYSIZE = SortType_MAX + 1;

const ::google::protobuf::EnumDescriptor* SortType_descriptor();
inline const ::std::string& SortType_Name(SortType value) {
  return ::google::protobuf::internal::NameOfEnum(
    SortType_descriptor(), value);
}
inline bool SortType_Parse(
    const ::std::string& name, SortType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SortType>(
    SortType_descriptor(), name, value);
}
enum FASortType {
  fa_rate = 1,
  fa_thirty_rate = 2,
  fa_active_netput = 3,
  fa_thirty_active_netput = 4,
  fa_leader_netput = 5,
  fa_avtive_rate = 6,
  fa_leader_rate = 7,
  fa_turnover_rate = 8,
  fa_ratio = 9,
  fa_cir_value = 10,
  fa_ped = 11,
  fa_three_avtive_netput = 12,
  fa_three_rate = 13,
  fa_five_avtive_netput = 14,
  fa_five_rate = 15,
  fa_security_name = 16
};
bool FASortType_IsValid(int value);
const FASortType FASortType_MIN = fa_rate;
const FASortType FASortType_MAX = fa_security_name;
const int FASortType_ARRAYSIZE = FASortType_MAX + 1;

const ::google::protobuf::EnumDescriptor* FASortType_descriptor();
inline const ::std::string& FASortType_Name(FASortType value) {
  return ::google::protobuf::internal::NameOfEnum(
    FASortType_descriptor(), value);
}
inline bool FASortType_Parse(
    const ::std::string& name, FASortType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FASortType>(
    FASortType_descriptor(), name, value);
}
// ===================================================================

class BatchGetStockRequest : public ::google::protobuf::Message {
 public:
  BatchGetStockRequest();
  virtual ~BatchGetStockRequest();
  
  BatchGetStockRequest(const BatchGetStockRequest& from);
  
  inline BatchGetStockRequest& operator=(const BatchGetStockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetStockRequest& default_instance();
  
  void Swap(BatchGetStockRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetStockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetStockRequest& from);
  void MergeFrom(const BatchGetStockRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.QuoteFilterFlag filter = 1;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 1;
  inline QuoteProto::QuoteFilterFlag filter() const;
  inline void set_filter(QuoteProto::QuoteFilterFlag value);
  
  // required string filter_detail = 2;
  inline bool has_filter_detail() const;
  inline void clear_filter_detail();
  static const int kFilterDetailFieldNumber = 2;
  inline const ::std::string& filter_detail() const;
  inline void set_filter_detail(const ::std::string& value);
  inline void set_filter_detail(const char* value);
  inline void set_filter_detail(const char* value, size_t size);
  inline ::std::string* mutable_filter_detail();
  inline ::std::string* release_filter_detail();
  
  // required .QuoteProto.SortType sort_field = 3;
  inline bool has_sort_field() const;
  inline void clear_sort_field();
  static const int kSortFieldFieldNumber = 3;
  inline QuoteProto::SortType sort_field() const;
  inline void set_sort_field(QuoteProto::SortType value);
  
  // required bool is_desc = 4;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 4;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 6;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 6;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // optional .QuoteProto.MsgMask msg_mask = 7;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 7;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetStockRequest)
 private:
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_filter_detail();
  inline void clear_has_filter_detail();
  inline void set_has_sort_field();
  inline void clear_has_sort_field();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* filter_detail_;
  int filter_;
  int sort_field_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::QuoteProto::MsgMask* msg_mask_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetStockRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetStockResponse : public ::google::protobuf::Message {
 public:
  BatchGetStockResponse();
  virtual ~BatchGetStockResponse();
  
  BatchGetStockResponse(const BatchGetStockResponse& from);
  
  inline BatchGetStockResponse& operator=(const BatchGetStockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetStockResponse& default_instance();
  
  void Swap(BatchGetStockResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetStockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetStockResponse& from);
  void MergeFrom(const BatchGetStockResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.StockMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::StockMsg& stk(int index) const;
  inline ::QuoteProto::StockMsg* mutable_stk(int index);
  inline ::QuoteProto::StockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetStockResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetStockResponse* default_instance_;
};
// -------------------------------------------------------------------

class StockOptionalRequest : public ::google::protobuf::Message {
 public:
  StockOptionalRequest();
  virtual ~StockOptionalRequest();
  
  StockOptionalRequest(const StockOptionalRequest& from);
  
  inline StockOptionalRequest& operator=(const StockOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StockOptionalRequest& default_instance();
  
  void Swap(StockOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  StockOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockOptionalRequest& from);
  void MergeFrom(const StockOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 kline_type = 1;
  inline bool has_kline_type() const;
  inline void clear_kline_type();
  static const int kKlineTypeFieldNumber = 1;
  inline ::google::protobuf::int32 kline_type() const;
  inline void set_kline_type(::google::protobuf::int32 value);
  
  // repeated string stock_code = 2;
  inline int stock_code_size() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 2;
  inline const ::std::string& stock_code(int index) const;
  inline ::std::string* mutable_stock_code(int index);
  inline void set_stock_code(int index, const ::std::string& value);
  inline void set_stock_code(int index, const char* value);
  inline void set_stock_code(int index, const char* value, size_t size);
  inline ::std::string* add_stock_code();
  inline void add_stock_code(const ::std::string& value);
  inline void add_stock_code(const char* value);
  inline void add_stock_code(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_code() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_code();
  
  // optional .QuoteProto.MsgMask msg_mask = 3;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 3;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.StockOptionalRequest)
 private:
  inline void set_has_kline_type();
  inline void clear_has_kline_type();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_code_;
  ::QuoteProto::MsgMask* msg_mask_;
  ::google::protobuf::int32 kline_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static StockOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class StockOptionalResponse : public ::google::protobuf::Message {
 public:
  StockOptionalResponse();
  virtual ~StockOptionalResponse();
  
  StockOptionalResponse(const StockOptionalResponse& from);
  
  inline StockOptionalResponse& operator=(const StockOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const StockOptionalResponse& default_instance();
  
  void Swap(StockOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  StockOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StockOptionalResponse& from);
  void MergeFrom(const StockOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.StockMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::StockMsg& stk(int index) const;
  inline ::QuoteProto::StockMsg* mutable_stk(int index);
  inline ::QuoteProto::StockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
      mutable_stk();
  
  // repeated .QuoteProto.PeriodKLine kline_info = 3;
  inline int kline_info_size() const;
  inline void clear_kline_info();
  static const int kKlineInfoFieldNumber = 3;
  inline const ::QuoteProto::PeriodKLine& kline_info(int index) const;
  inline ::QuoteProto::PeriodKLine* mutable_kline_info(int index);
  inline ::QuoteProto::PeriodKLine* add_kline_info();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::PeriodKLine >&
      kline_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::PeriodKLine >*
      mutable_kline_info();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.StockOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg > stk_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::PeriodKLine > kline_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static StockOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoneyOptionalRequest : public ::google::protobuf::Message {
 public:
  MoneyOptionalRequest();
  virtual ~MoneyOptionalRequest();
  
  MoneyOptionalRequest(const MoneyOptionalRequest& from);
  
  inline MoneyOptionalRequest& operator=(const MoneyOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyOptionalRequest& default_instance();
  
  void Swap(MoneyOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  MoneyOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyOptionalRequest& from);
  void MergeFrom(const MoneyOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string stock_code = 1;
  inline int stock_code_size() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code(int index) const;
  inline ::std::string* mutable_stock_code(int index);
  inline void set_stock_code(int index, const ::std::string& value);
  inline void set_stock_code(int index, const char* value);
  inline void set_stock_code(int index, const char* value, size_t size);
  inline ::std::string* add_stock_code();
  inline void add_stock_code(const ::std::string& value);
  inline void add_stock_code(const char* value);
  inline void add_stock_code(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_code() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_code();
  
  // optional .QuoteProto.MsgMask msg_mask = 3;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 3;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyOptionalRequest)
 private:
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_code_;
  ::QuoteProto::MsgMask* msg_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoneyOptionalResponse : public ::google::protobuf::Message {
 public:
  MoneyOptionalResponse();
  virtual ~MoneyOptionalResponse();
  
  MoneyOptionalResponse(const MoneyOptionalResponse& from);
  
  inline MoneyOptionalResponse& operator=(const MoneyOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyOptionalResponse& default_instance();
  
  void Swap(MoneyOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  MoneyOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyOptionalResponse& from);
  void MergeFrom(const MoneyOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.MoneyMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::MoneyMsg& stk(int index) const;
  inline ::QuoteProto::MoneyMsg* mutable_stk(int index);
  inline ::QuoteProto::MoneyMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetMoneyRequest : public ::google::protobuf::Message {
 public:
  BatchGetMoneyRequest();
  virtual ~BatchGetMoneyRequest();
  
  BatchGetMoneyRequest(const BatchGetMoneyRequest& from);
  
  inline BatchGetMoneyRequest& operator=(const BatchGetMoneyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetMoneyRequest& default_instance();
  
  void Swap(BatchGetMoneyRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetMoneyRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetMoneyRequest& from);
  void MergeFrom(const BatchGetMoneyRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.QuoteFilterFlag filter = 1;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 1;
  inline QuoteProto::QuoteFilterFlag filter() const;
  inline void set_filter(QuoteProto::QuoteFilterFlag value);
  
  // required string filter_detail = 2;
  inline bool has_filter_detail() const;
  inline void clear_filter_detail();
  static const int kFilterDetailFieldNumber = 2;
  inline const ::std::string& filter_detail() const;
  inline void set_filter_detail(const ::std::string& value);
  inline void set_filter_detail(const char* value);
  inline void set_filter_detail(const char* value, size_t size);
  inline ::std::string* mutable_filter_detail();
  inline ::std::string* release_filter_detail();
  
  // required .QuoteProto.SortType sort_field = 3;
  inline bool has_sort_field() const;
  inline void clear_sort_field();
  static const int kSortFieldFieldNumber = 3;
  inline QuoteProto::SortType sort_field() const;
  inline void set_sort_field(QuoteProto::SortType value);
  
  // required bool is_desc = 4;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 4;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 5;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 5;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 6;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 6;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // optional .QuoteProto.MsgMask msg_mask = 7;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 7;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetMoneyRequest)
 private:
  inline void set_has_filter();
  inline void clear_has_filter();
  inline void set_has_filter_detail();
  inline void clear_has_filter_detail();
  inline void set_has_sort_field();
  inline void clear_has_sort_field();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* filter_detail_;
  int filter_;
  int sort_field_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::QuoteProto::MsgMask* msg_mask_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetMoneyRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetMoneyResponse : public ::google::protobuf::Message {
 public:
  BatchGetMoneyResponse();
  virtual ~BatchGetMoneyResponse();
  
  BatchGetMoneyResponse(const BatchGetMoneyResponse& from);
  
  inline BatchGetMoneyResponse& operator=(const BatchGetMoneyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetMoneyResponse& default_instance();
  
  void Swap(BatchGetMoneyResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetMoneyResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetMoneyResponse& from);
  void MergeFrom(const BatchGetMoneyResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.MoneyMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::MoneyMsg& stk(int index) const;
  inline ::QuoteProto::MoneyMsg* mutable_stk(int index);
  inline ::QuoteProto::MoneyMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetMoneyResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetMoneyResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoneyFieldLineRequest : public ::google::protobuf::Message {
 public:
  MoneyFieldLineRequest();
  virtual ~MoneyFieldLineRequest();
  
  MoneyFieldLineRequest(const MoneyFieldLineRequest& from);
  
  inline MoneyFieldLineRequest& operator=(const MoneyFieldLineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyFieldLineRequest& default_instance();
  
  void Swap(MoneyFieldLineRequest* other);
  
  // implements Message ----------------------------------------------
  
  MoneyFieldLineRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyFieldLineRequest& from);
  void MergeFrom(const MoneyFieldLineRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyFieldLineRequest)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyFieldLineRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoneyFieldLineResponse : public ::google::protobuf::Message {
 public:
  MoneyFieldLineResponse();
  virtual ~MoneyFieldLineResponse();
  
  MoneyFieldLineResponse(const MoneyFieldLineResponse& from);
  
  inline MoneyFieldLineResponse& operator=(const MoneyFieldLineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyFieldLineResponse& default_instance();
  
  void Swap(MoneyFieldLineResponse* other);
  
  // implements Message ----------------------------------------------
  
  MoneyFieldLineResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyFieldLineResponse& from);
  void MergeFrom(const MoneyFieldLineResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.MoneyFeild stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::MoneyFeild& stk(int index) const;
  inline ::QuoteProto::MoneyFeild* mutable_stk(int index);
  inline ::QuoteProto::MoneyFeild* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyFeild >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyFeild >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyFieldLineResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyFeild > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyFieldLineResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetStockRiseFallInfoRequest : public ::google::protobuf::Message {
 public:
  GetStockRiseFallInfoRequest();
  virtual ~GetStockRiseFallInfoRequest();
  
  GetStockRiseFallInfoRequest(const GetStockRiseFallInfoRequest& from);
  
  inline GetStockRiseFallInfoRequest& operator=(const GetStockRiseFallInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStockRiseFallInfoRequest& default_instance();
  
  void Swap(GetStockRiseFallInfoRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetStockRiseFallInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStockRiseFallInfoRequest& from);
  void MergeFrom(const GetStockRiseFallInfoRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetStockRiseFallInfoRequest)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetStockRiseFallInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetStockRiseFallInfoResponse : public ::google::protobuf::Message {
 public:
  GetStockRiseFallInfoResponse();
  virtual ~GetStockRiseFallInfoResponse();
  
  GetStockRiseFallInfoResponse(const GetStockRiseFallInfoResponse& from);
  
  inline GetStockRiseFallInfoResponse& operator=(const GetStockRiseFallInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStockRiseFallInfoResponse& default_instance();
  
  void Swap(GetStockRiseFallInfoResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetStockRiseFallInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStockRiseFallInfoResponse& from);
  void MergeFrom(const GetStockRiseFallInfoResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional .QuoteProto.StockRiseFallInfo info = 2;
  inline bool has_info() const;
  inline void clear_info();
  static const int kInfoFieldNumber = 2;
  inline const ::QuoteProto::StockRiseFallInfo& info() const;
  inline ::QuoteProto::StockRiseFallInfo* mutable_info();
  inline ::QuoteProto::StockRiseFallInfo* release_info();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetStockRiseFallInfoResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_info();
  inline void clear_has_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::QuoteProto::StockRiseFallInfo* info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetStockRiseFallInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetStocksOfBlockRequest : public ::google::protobuf::Message {
 public:
  GetStocksOfBlockRequest();
  virtual ~GetStocksOfBlockRequest();
  
  GetStocksOfBlockRequest(const GetStocksOfBlockRequest& from);
  
  inline GetStocksOfBlockRequest& operator=(const GetStocksOfBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStocksOfBlockRequest& default_instance();
  
  void Swap(GetStocksOfBlockRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetStocksOfBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStocksOfBlockRequest& from);
  void MergeFrom(const GetStocksOfBlockRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // required int32 index = 2;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 2;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 3;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 3;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // optional .QuoteProto.MsgMask msg_mask = 5;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 5;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetStocksOfBlockRequest)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 count_range_;
  ::QuoteProto::MsgMask* msg_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetStocksOfBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetStocksOfBlockResponse : public ::google::protobuf::Message {
 public:
  GetStocksOfBlockResponse();
  virtual ~GetStocksOfBlockResponse();
  
  GetStocksOfBlockResponse(const GetStocksOfBlockResponse& from);
  
  inline GetStocksOfBlockResponse& operator=(const GetStocksOfBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetStocksOfBlockResponse& default_instance();
  
  void Swap(GetStocksOfBlockResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetStocksOfBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetStocksOfBlockResponse& from);
  void MergeFrom(const GetStocksOfBlockResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.StockMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::StockMsg& stk(int index) const;
  inline ::QuoteProto::StockMsg* mutable_stk(int index);
  inline ::QuoteProto::StockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetStocksOfBlockResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetStocksOfBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class MoneyAbnormalOptionalRequest : public ::google::protobuf::Message {
 public:
  MoneyAbnormalOptionalRequest();
  virtual ~MoneyAbnormalOptionalRequest();
  
  MoneyAbnormalOptionalRequest(const MoneyAbnormalOptionalRequest& from);
  
  inline MoneyAbnormalOptionalRequest& operator=(const MoneyAbnormalOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyAbnormalOptionalRequest& default_instance();
  
  void Swap(MoneyAbnormalOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  MoneyAbnormalOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyAbnormalOptionalRequest& from);
  void MergeFrom(const MoneyAbnormalOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string stock_code = 1;
  inline int stock_code_size() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code(int index) const;
  inline ::std::string* mutable_stock_code(int index);
  inline void set_stock_code(int index, const ::std::string& value);
  inline void set_stock_code(int index, const char* value);
  inline void set_stock_code(int index, const char* value, size_t size);
  inline ::std::string* add_stock_code();
  inline void add_stock_code(const ::std::string& value);
  inline void add_stock_code(const char* value);
  inline void add_stock_code(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_code() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_code();
  
  // optional .QuoteProto.MsgMask msg_mask = 2;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 2;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyAbnormalOptionalRequest)
 private:
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_code_;
  ::QuoteProto::MsgMask* msg_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyAbnormalOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class MoneyAbnormalOptionalResponse : public ::google::protobuf::Message {
 public:
  MoneyAbnormalOptionalResponse();
  virtual ~MoneyAbnormalOptionalResponse();
  
  MoneyAbnormalOptionalResponse(const MoneyAbnormalOptionalResponse& from);
  
  inline MoneyAbnormalOptionalResponse& operator=(const MoneyAbnormalOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MoneyAbnormalOptionalResponse& default_instance();
  
  void Swap(MoneyAbnormalOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  MoneyAbnormalOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MoneyAbnormalOptionalResponse& from);
  void MergeFrom(const MoneyAbnormalOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.FundAbnormalMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::FundAbnormalMsg& stk(int index) const;
  inline ::QuoteProto::FundAbnormalMsg* mutable_stk(int index);
  inline ::QuoteProto::FundAbnormalMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MoneyAbnormalOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static MoneyAbnormalOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetMoneyAbnormalRequest : public ::google::protobuf::Message {
 public:
  BatchGetMoneyAbnormalRequest();
  virtual ~BatchGetMoneyAbnormalRequest();
  
  BatchGetMoneyAbnormalRequest(const BatchGetMoneyAbnormalRequest& from);
  
  inline BatchGetMoneyAbnormalRequest& operator=(const BatchGetMoneyAbnormalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetMoneyAbnormalRequest& default_instance();
  
  void Swap(BatchGetMoneyAbnormalRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetMoneyAbnormalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetMoneyAbnormalRequest& from);
  void MergeFrom(const BatchGetMoneyAbnormalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.FundAbnormalType type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline QuoteProto::FundAbnormalType type() const;
  inline void set_type(QuoteProto::FundAbnormalType value);
  
  // required .QuoteProto.FASortType sort_field = 2;
  inline bool has_sort_field() const;
  inline void clear_sort_field();
  static const int kSortFieldFieldNumber = 2;
  inline QuoteProto::FASortType sort_field() const;
  inline void set_sort_field(QuoteProto::FASortType value);
  
  // required bool is_desc = 3;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 3;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 5;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 5;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // optional .QuoteProto.MsgMask msg_mask = 6;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 6;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetMoneyAbnormalRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_sort_field();
  inline void clear_has_sort_field();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int type_;
  int sort_field_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::QuoteProto::MsgMask* msg_mask_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetMoneyAbnormalRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetMoneyAbnormalResponse : public ::google::protobuf::Message {
 public:
  BatchGetMoneyAbnormalResponse();
  virtual ~BatchGetMoneyAbnormalResponse();
  
  BatchGetMoneyAbnormalResponse(const BatchGetMoneyAbnormalResponse& from);
  
  inline BatchGetMoneyAbnormalResponse& operator=(const BatchGetMoneyAbnormalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetMoneyAbnormalResponse& default_instance();
  
  void Swap(BatchGetMoneyAbnormalResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetMoneyAbnormalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetMoneyAbnormalResponse& from);
  void MergeFrom(const BatchGetMoneyAbnormalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.FundAbnormalMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::FundAbnormalMsg& stk(int index) const;
  inline ::QuoteProto::FundAbnormalMsg* mutable_stk(int index);
  inline ::QuoteProto::FundAbnormalMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetMoneyAbnormalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetMoneyAbnormalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BlockMoneyAbnoramlRequest : public ::google::protobuf::Message {
 public:
  BlockMoneyAbnoramlRequest();
  virtual ~BlockMoneyAbnoramlRequest();
  
  BlockMoneyAbnoramlRequest(const BlockMoneyAbnoramlRequest& from);
  
  inline BlockMoneyAbnoramlRequest& operator=(const BlockMoneyAbnoramlRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockMoneyAbnoramlRequest& default_instance();
  
  void Swap(BlockMoneyAbnoramlRequest* other);
  
  // implements Message ----------------------------------------------
  
  BlockMoneyAbnoramlRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockMoneyAbnoramlRequest& from);
  void MergeFrom(const BlockMoneyAbnoramlRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string block_code = 1;
  inline bool has_block_code() const;
  inline void clear_block_code();
  static const int kBlockCodeFieldNumber = 1;
  inline const ::std::string& block_code() const;
  inline void set_block_code(const ::std::string& value);
  inline void set_block_code(const char* value);
  inline void set_block_code(const char* value, size_t size);
  inline ::std::string* mutable_block_code();
  inline ::std::string* release_block_code();
  
  // required uint32 update_time = 2;
  inline bool has_update_time() const;
  inline void clear_update_time();
  static const int kUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 update_time() const;
  inline void set_update_time(::google::protobuf::uint32 value);
  
  // required int32 count_range = 3;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 3;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // required bool is_desc = 4;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 4;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BlockMoneyAbnoramlRequest)
 private:
  inline void set_has_block_code();
  inline void clear_has_block_code();
  inline void set_has_update_time();
  inline void clear_has_update_time();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* block_code_;
  ::google::protobuf::uint32 update_time_;
  ::google::protobuf::int32 count_range_;
  bool is_desc_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BlockMoneyAbnoramlRequest* default_instance_;
};
// -------------------------------------------------------------------

class BlockMoneyAbnoramlResponse : public ::google::protobuf::Message {
 public:
  BlockMoneyAbnoramlResponse();
  virtual ~BlockMoneyAbnoramlResponse();
  
  BlockMoneyAbnoramlResponse(const BlockMoneyAbnoramlResponse& from);
  
  inline BlockMoneyAbnoramlResponse& operator=(const BlockMoneyAbnoramlResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockMoneyAbnoramlResponse& default_instance();
  
  void Swap(BlockMoneyAbnoramlResponse* other);
  
  // implements Message ----------------------------------------------
  
  BlockMoneyAbnoramlResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockMoneyAbnoramlResponse& from);
  void MergeFrom(const BlockMoneyAbnoramlResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.BlockFundAbnormalItem blocks = 2;
  inline int blocks_size() const;
  inline void clear_blocks();
  static const int kBlocksFieldNumber = 2;
  inline const ::QuoteProto::BlockFundAbnormalItem& blocks(int index) const;
  inline ::QuoteProto::BlockFundAbnormalItem* mutable_blocks(int index);
  inline ::QuoteProto::BlockFundAbnormalItem* add_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BlockFundAbnormalItem >&
      blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BlockFundAbnormalItem >*
      mutable_blocks();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BlockMoneyAbnoramlResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BlockFundAbnormalItem > blocks_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BlockMoneyAbnoramlResponse* default_instance_;
};
// -------------------------------------------------------------------

class BlockMoneyAbnormalPCRequest : public ::google::protobuf::Message {
 public:
  BlockMoneyAbnormalPCRequest();
  virtual ~BlockMoneyAbnormalPCRequest();
  
  BlockMoneyAbnormalPCRequest(const BlockMoneyAbnormalPCRequest& from);
  
  inline BlockMoneyAbnormalPCRequest& operator=(const BlockMoneyAbnormalPCRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockMoneyAbnormalPCRequest& default_instance();
  
  void Swap(BlockMoneyAbnormalPCRequest* other);
  
  // implements Message ----------------------------------------------
  
  BlockMoneyAbnormalPCRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockMoneyAbnormalPCRequest& from);
  void MergeFrom(const BlockMoneyAbnormalPCRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.QuoteFilterFlag filter = 1;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 1;
  inline QuoteProto::QuoteFilterFlag filter() const;
  inline void set_filter(QuoteProto::QuoteFilterFlag value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BlockMoneyAbnormalPCRequest)
 private:
  inline void set_has_filter();
  inline void clear_has_filter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int filter_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BlockMoneyAbnormalPCRequest* default_instance_;
};
// -------------------------------------------------------------------

class BlockMoneyAbnormalPCResponse : public ::google::protobuf::Message {
 public:
  BlockMoneyAbnormalPCResponse();
  virtual ~BlockMoneyAbnormalPCResponse();
  
  BlockMoneyAbnormalPCResponse(const BlockMoneyAbnormalPCResponse& from);
  
  inline BlockMoneyAbnormalPCResponse& operator=(const BlockMoneyAbnormalPCResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockMoneyAbnormalPCResponse& default_instance();
  
  void Swap(BlockMoneyAbnormalPCResponse* other);
  
  // implements Message ----------------------------------------------
  
  BlockMoneyAbnormalPCResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BlockMoneyAbnormalPCResponse& from);
  void MergeFrom(const BlockMoneyAbnormalPCResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.StockMsg blocks = 2;
  inline int blocks_size() const;
  inline void clear_blocks();
  static const int kBlocksFieldNumber = 2;
  inline const ::QuoteProto::StockMsg& blocks(int index) const;
  inline ::QuoteProto::StockMsg* mutable_blocks(int index);
  inline ::QuoteProto::StockMsg* add_blocks();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
      blocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
      mutable_blocks();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BlockMoneyAbnormalPCResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg > blocks_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static BlockMoneyAbnormalPCResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetTimeRequest : public ::google::protobuf::Message {
 public:
  GetTimeRequest();
  virtual ~GetTimeRequest();
  
  GetTimeRequest(const GetTimeRequest& from);
  
  inline GetTimeRequest& operator=(const GetTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTimeRequest& default_instance();
  
  void Swap(GetTimeRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTimeRequest& from);
  void MergeFrom(const GetTimeRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetTimeRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetTimeResponse : public ::google::protobuf::Message {
 public:
  GetTimeResponse();
  virtual ~GetTimeResponse();
  
  GetTimeResponse(const GetTimeResponse& from);
  
  inline GetTimeResponse& operator=(const GetTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetTimeResponse& default_instance();
  
  void Swap(GetTimeResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetTimeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetTimeResponse& from);
  void MergeFrom(const GetTimeResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional int32 cur_time = 2;
  inline bool has_cur_time() const;
  inline void clear_cur_time();
  static const int kCurTimeFieldNumber = 2;
  inline ::google::protobuf::int32 cur_time() const;
  inline void set_cur_time(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetTimeResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_cur_time();
  inline void clear_has_cur_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::int32 cur_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_AssignDesc_stock_5fbasinfo_2eproto();
  friend void protobuf_ShutdownFile_stock_5fbasinfo_2eproto();
  
  void InitAsDefaultInstance();
  static GetTimeResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BatchGetStockRequest

// required .QuoteProto.QuoteFilterFlag filter = 1;
inline bool BatchGetStockRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetStockRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetStockRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetStockRequest::clear_filter() {
  filter_ = 0;
  clear_has_filter();
}
inline QuoteProto::QuoteFilterFlag BatchGetStockRequest::filter() const {
  return static_cast< QuoteProto::QuoteFilterFlag >(filter_);
}
inline void BatchGetStockRequest::set_filter(QuoteProto::QuoteFilterFlag value) {
  GOOGLE_DCHECK(QuoteProto::QuoteFilterFlag_IsValid(value));
  set_has_filter();
  filter_ = value;
}

// required string filter_detail = 2;
inline bool BatchGetStockRequest::has_filter_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetStockRequest::set_has_filter_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetStockRequest::clear_has_filter_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetStockRequest::clear_filter_detail() {
  if (filter_detail_ != &::google::protobuf::internal::kEmptyString) {
    filter_detail_->clear();
  }
  clear_has_filter_detail();
}
inline const ::std::string& BatchGetStockRequest::filter_detail() const {
  return *filter_detail_;
}
inline void BatchGetStockRequest::set_filter_detail(const ::std::string& value) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(value);
}
inline void BatchGetStockRequest::set_filter_detail(const char* value) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(value);
}
inline void BatchGetStockRequest::set_filter_detail(const char* value, size_t size) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BatchGetStockRequest::mutable_filter_detail() {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  return filter_detail_;
}
inline ::std::string* BatchGetStockRequest::release_filter_detail() {
  clear_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filter_detail_;
    filter_detail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .QuoteProto.SortType sort_field = 3;
inline bool BatchGetStockRequest::has_sort_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetStockRequest::set_has_sort_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetStockRequest::clear_has_sort_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetStockRequest::clear_sort_field() {
  sort_field_ = 1;
  clear_has_sort_field();
}
inline QuoteProto::SortType BatchGetStockRequest::sort_field() const {
  return static_cast< QuoteProto::SortType >(sort_field_);
}
inline void BatchGetStockRequest::set_sort_field(QuoteProto::SortType value) {
  GOOGLE_DCHECK(QuoteProto::SortType_IsValid(value));
  set_has_sort_field();
  sort_field_ = value;
}

// required bool is_desc = 4;
inline bool BatchGetStockRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchGetStockRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchGetStockRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchGetStockRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchGetStockRequest::is_desc() const {
  return is_desc_;
}
inline void BatchGetStockRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 5;
inline bool BatchGetStockRequest::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchGetStockRequest::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BatchGetStockRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BatchGetStockRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchGetStockRequest::index() const {
  return index_;
}
inline void BatchGetStockRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 6;
inline bool BatchGetStockRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchGetStockRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BatchGetStockRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BatchGetStockRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchGetStockRequest::count_range() const {
  return count_range_;
}
inline void BatchGetStockRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// optional .QuoteProto.MsgMask msg_mask = 7;
inline bool BatchGetStockRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BatchGetStockRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BatchGetStockRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BatchGetStockRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& BatchGetStockRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetStockRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetStockRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BatchGetStockResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchGetStockResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetStockResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetStockResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetStockResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchGetStockResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchGetStockResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchGetStockResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.StockMsg stk = 2;
inline int BatchGetStockResponse::stk_size() const {
  return stk_.size();
}
inline void BatchGetStockResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::StockMsg& BatchGetStockResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::StockMsg* BatchGetStockResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::StockMsg* BatchGetStockResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
BatchGetStockResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
BatchGetStockResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchGetStockResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetStockResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetStockResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetStockResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchGetStockResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchGetStockResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// StockOptionalRequest

// optional int32 kline_type = 1;
inline bool StockOptionalRequest::has_kline_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockOptionalRequest::set_has_kline_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockOptionalRequest::clear_has_kline_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockOptionalRequest::clear_kline_type() {
  kline_type_ = 0;
  clear_has_kline_type();
}
inline ::google::protobuf::int32 StockOptionalRequest::kline_type() const {
  return kline_type_;
}
inline void StockOptionalRequest::set_kline_type(::google::protobuf::int32 value) {
  set_has_kline_type();
  kline_type_ = value;
}

// repeated string stock_code = 2;
inline int StockOptionalRequest::stock_code_size() const {
  return stock_code_.size();
}
inline void StockOptionalRequest::clear_stock_code() {
  stock_code_.Clear();
}
inline const ::std::string& StockOptionalRequest::stock_code(int index) const {
  return stock_code_.Get(index);
}
inline ::std::string* StockOptionalRequest::mutable_stock_code(int index) {
  return stock_code_.Mutable(index);
}
inline void StockOptionalRequest::set_stock_code(int index, const ::std::string& value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void StockOptionalRequest::set_stock_code(int index, const char* value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void StockOptionalRequest::set_stock_code(int index, const char* value, size_t size) {
  stock_code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StockOptionalRequest::add_stock_code() {
  return stock_code_.Add();
}
inline void StockOptionalRequest::add_stock_code(const ::std::string& value) {
  stock_code_.Add()->assign(value);
}
inline void StockOptionalRequest::add_stock_code(const char* value) {
  stock_code_.Add()->assign(value);
}
inline void StockOptionalRequest::add_stock_code(const char* value, size_t size) {
  stock_code_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StockOptionalRequest::stock_code() const {
  return stock_code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StockOptionalRequest::mutable_stock_code() {
  return &stock_code_;
}

// optional .QuoteProto.MsgMask msg_mask = 3;
inline bool StockOptionalRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StockOptionalRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StockOptionalRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StockOptionalRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& StockOptionalRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* StockOptionalRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* StockOptionalRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// StockOptionalResponse

// required .QuoteProto.Ret ret = 1;
inline bool StockOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StockOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StockOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StockOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& StockOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* StockOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* StockOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.StockMsg stk = 2;
inline int StockOptionalResponse::stk_size() const {
  return stk_.size();
}
inline void StockOptionalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::StockMsg& StockOptionalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::StockMsg* StockOptionalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::StockMsg* StockOptionalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
StockOptionalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
StockOptionalResponse::mutable_stk() {
  return &stk_;
}

// repeated .QuoteProto.PeriodKLine kline_info = 3;
inline int StockOptionalResponse::kline_info_size() const {
  return kline_info_.size();
}
inline void StockOptionalResponse::clear_kline_info() {
  kline_info_.Clear();
}
inline const ::QuoteProto::PeriodKLine& StockOptionalResponse::kline_info(int index) const {
  return kline_info_.Get(index);
}
inline ::QuoteProto::PeriodKLine* StockOptionalResponse::mutable_kline_info(int index) {
  return kline_info_.Mutable(index);
}
inline ::QuoteProto::PeriodKLine* StockOptionalResponse::add_kline_info() {
  return kline_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::PeriodKLine >&
StockOptionalResponse::kline_info() const {
  return kline_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::PeriodKLine >*
StockOptionalResponse::mutable_kline_info() {
  return &kline_info_;
}

// -------------------------------------------------------------------

// MoneyOptionalRequest

// repeated string stock_code = 1;
inline int MoneyOptionalRequest::stock_code_size() const {
  return stock_code_.size();
}
inline void MoneyOptionalRequest::clear_stock_code() {
  stock_code_.Clear();
}
inline const ::std::string& MoneyOptionalRequest::stock_code(int index) const {
  return stock_code_.Get(index);
}
inline ::std::string* MoneyOptionalRequest::mutable_stock_code(int index) {
  return stock_code_.Mutable(index);
}
inline void MoneyOptionalRequest::set_stock_code(int index, const ::std::string& value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void MoneyOptionalRequest::set_stock_code(int index, const char* value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void MoneyOptionalRequest::set_stock_code(int index, const char* value, size_t size) {
  stock_code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyOptionalRequest::add_stock_code() {
  return stock_code_.Add();
}
inline void MoneyOptionalRequest::add_stock_code(const ::std::string& value) {
  stock_code_.Add()->assign(value);
}
inline void MoneyOptionalRequest::add_stock_code(const char* value) {
  stock_code_.Add()->assign(value);
}
inline void MoneyOptionalRequest::add_stock_code(const char* value, size_t size) {
  stock_code_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MoneyOptionalRequest::stock_code() const {
  return stock_code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MoneyOptionalRequest::mutable_stock_code() {
  return &stock_code_;
}

// optional .QuoteProto.MsgMask msg_mask = 3;
inline bool MoneyOptionalRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyOptionalRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyOptionalRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyOptionalRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& MoneyOptionalRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* MoneyOptionalRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* MoneyOptionalRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MoneyOptionalResponse

// required .QuoteProto.Ret ret = 1;
inline bool MoneyOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& MoneyOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* MoneyOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* MoneyOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.MoneyMsg stk = 2;
inline int MoneyOptionalResponse::stk_size() const {
  return stk_.size();
}
inline void MoneyOptionalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::MoneyMsg& MoneyOptionalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::MoneyMsg* MoneyOptionalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::MoneyMsg* MoneyOptionalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
MoneyOptionalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
MoneyOptionalResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// BatchGetMoneyRequest

// required .QuoteProto.QuoteFilterFlag filter = 1;
inline bool BatchGetMoneyRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetMoneyRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetMoneyRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetMoneyRequest::clear_filter() {
  filter_ = 0;
  clear_has_filter();
}
inline QuoteProto::QuoteFilterFlag BatchGetMoneyRequest::filter() const {
  return static_cast< QuoteProto::QuoteFilterFlag >(filter_);
}
inline void BatchGetMoneyRequest::set_filter(QuoteProto::QuoteFilterFlag value) {
  GOOGLE_DCHECK(QuoteProto::QuoteFilterFlag_IsValid(value));
  set_has_filter();
  filter_ = value;
}

// required string filter_detail = 2;
inline bool BatchGetMoneyRequest::has_filter_detail() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetMoneyRequest::set_has_filter_detail() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetMoneyRequest::clear_has_filter_detail() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetMoneyRequest::clear_filter_detail() {
  if (filter_detail_ != &::google::protobuf::internal::kEmptyString) {
    filter_detail_->clear();
  }
  clear_has_filter_detail();
}
inline const ::std::string& BatchGetMoneyRequest::filter_detail() const {
  return *filter_detail_;
}
inline void BatchGetMoneyRequest::set_filter_detail(const ::std::string& value) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(value);
}
inline void BatchGetMoneyRequest::set_filter_detail(const char* value) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(value);
}
inline void BatchGetMoneyRequest::set_filter_detail(const char* value, size_t size) {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  filter_detail_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BatchGetMoneyRequest::mutable_filter_detail() {
  set_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    filter_detail_ = new ::std::string;
  }
  return filter_detail_;
}
inline ::std::string* BatchGetMoneyRequest::release_filter_detail() {
  clear_has_filter_detail();
  if (filter_detail_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = filter_detail_;
    filter_detail_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required .QuoteProto.SortType sort_field = 3;
inline bool BatchGetMoneyRequest::has_sort_field() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetMoneyRequest::set_has_sort_field() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetMoneyRequest::clear_has_sort_field() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetMoneyRequest::clear_sort_field() {
  sort_field_ = 1;
  clear_has_sort_field();
}
inline QuoteProto::SortType BatchGetMoneyRequest::sort_field() const {
  return static_cast< QuoteProto::SortType >(sort_field_);
}
inline void BatchGetMoneyRequest::set_sort_field(QuoteProto::SortType value) {
  GOOGLE_DCHECK(QuoteProto::SortType_IsValid(value));
  set_has_sort_field();
  sort_field_ = value;
}

// required bool is_desc = 4;
inline bool BatchGetMoneyRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchGetMoneyRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchGetMoneyRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchGetMoneyRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchGetMoneyRequest::is_desc() const {
  return is_desc_;
}
inline void BatchGetMoneyRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 5;
inline bool BatchGetMoneyRequest::has_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchGetMoneyRequest::set_has_index() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BatchGetMoneyRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BatchGetMoneyRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchGetMoneyRequest::index() const {
  return index_;
}
inline void BatchGetMoneyRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 6;
inline bool BatchGetMoneyRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchGetMoneyRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BatchGetMoneyRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BatchGetMoneyRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchGetMoneyRequest::count_range() const {
  return count_range_;
}
inline void BatchGetMoneyRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// optional .QuoteProto.MsgMask msg_mask = 7;
inline bool BatchGetMoneyRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void BatchGetMoneyRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000040u;
}
inline void BatchGetMoneyRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void BatchGetMoneyRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& BatchGetMoneyRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetMoneyRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetMoneyRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BatchGetMoneyResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchGetMoneyResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetMoneyResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetMoneyResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetMoneyResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchGetMoneyResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchGetMoneyResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchGetMoneyResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.MoneyMsg stk = 2;
inline int BatchGetMoneyResponse::stk_size() const {
  return stk_.size();
}
inline void BatchGetMoneyResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::MoneyMsg& BatchGetMoneyResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::MoneyMsg* BatchGetMoneyResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::MoneyMsg* BatchGetMoneyResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
BatchGetMoneyResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
BatchGetMoneyResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchGetMoneyResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetMoneyResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetMoneyResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetMoneyResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchGetMoneyResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchGetMoneyResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// MoneyFieldLineRequest

// optional string stock_code = 1;
inline bool MoneyFieldLineRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyFieldLineRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyFieldLineRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyFieldLineRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& MoneyFieldLineRequest::stock_code() const {
  return *stock_code_;
}
inline void MoneyFieldLineRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void MoneyFieldLineRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void MoneyFieldLineRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyFieldLineRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* MoneyFieldLineRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// MoneyFieldLineResponse

// required .QuoteProto.Ret ret = 1;
inline bool MoneyFieldLineResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyFieldLineResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyFieldLineResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyFieldLineResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& MoneyFieldLineResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* MoneyFieldLineResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* MoneyFieldLineResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.MoneyFeild stk = 2;
inline int MoneyFieldLineResponse::stk_size() const {
  return stk_.size();
}
inline void MoneyFieldLineResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::MoneyFeild& MoneyFieldLineResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::MoneyFeild* MoneyFieldLineResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::MoneyFeild* MoneyFieldLineResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyFeild >&
MoneyFieldLineResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyFeild >*
MoneyFieldLineResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// GetStockRiseFallInfoRequest

// required string stock_code = 1;
inline bool GetStockRiseFallInfoRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStockRiseFallInfoRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStockRiseFallInfoRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStockRiseFallInfoRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetStockRiseFallInfoRequest::stock_code() const {
  return *stock_code_;
}
inline void GetStockRiseFallInfoRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetStockRiseFallInfoRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetStockRiseFallInfoRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetStockRiseFallInfoRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetStockRiseFallInfoRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetStockRiseFallInfoResponse

// required .QuoteProto.Ret ret = 1;
inline bool GetStockRiseFallInfoResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStockRiseFallInfoResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStockRiseFallInfoResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStockRiseFallInfoResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& GetStockRiseFallInfoResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* GetStockRiseFallInfoResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* GetStockRiseFallInfoResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional .QuoteProto.StockRiseFallInfo info = 2;
inline bool GetStockRiseFallInfoResponse::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStockRiseFallInfoResponse::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStockRiseFallInfoResponse::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStockRiseFallInfoResponse::clear_info() {
  if (info_ != NULL) info_->::QuoteProto::StockRiseFallInfo::Clear();
  clear_has_info();
}
inline const ::QuoteProto::StockRiseFallInfo& GetStockRiseFallInfoResponse::info() const {
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
inline ::QuoteProto::StockRiseFallInfo* GetStockRiseFallInfoResponse::mutable_info() {
  set_has_info();
  if (info_ == NULL) info_ = new ::QuoteProto::StockRiseFallInfo;
  return info_;
}
inline ::QuoteProto::StockRiseFallInfo* GetStockRiseFallInfoResponse::release_info() {
  clear_has_info();
  ::QuoteProto::StockRiseFallInfo* temp = info_;
  info_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetStocksOfBlockRequest

// required string stock_code = 1;
inline bool GetStocksOfBlockRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStocksOfBlockRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStocksOfBlockRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStocksOfBlockRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetStocksOfBlockRequest::stock_code() const {
  return *stock_code_;
}
inline void GetStocksOfBlockRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetStocksOfBlockRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetStocksOfBlockRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetStocksOfBlockRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetStocksOfBlockRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 index = 2;
inline bool GetStocksOfBlockRequest::has_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetStocksOfBlockRequest::set_has_index() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetStocksOfBlockRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetStocksOfBlockRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 GetStocksOfBlockRequest::index() const {
  return index_;
}
inline void GetStocksOfBlockRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 3;
inline bool GetStocksOfBlockRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStocksOfBlockRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStocksOfBlockRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStocksOfBlockRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 GetStocksOfBlockRequest::count_range() const {
  return count_range_;
}
inline void GetStocksOfBlockRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// optional .QuoteProto.MsgMask msg_mask = 5;
inline bool GetStocksOfBlockRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetStocksOfBlockRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetStocksOfBlockRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetStocksOfBlockRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& GetStocksOfBlockRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* GetStocksOfBlockRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* GetStocksOfBlockRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// GetStocksOfBlockResponse

// required .QuoteProto.Ret ret = 1;
inline bool GetStocksOfBlockResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetStocksOfBlockResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetStocksOfBlockResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetStocksOfBlockResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& GetStocksOfBlockResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* GetStocksOfBlockResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* GetStocksOfBlockResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.StockMsg stk = 2;
inline int GetStocksOfBlockResponse::stk_size() const {
  return stk_.size();
}
inline void GetStocksOfBlockResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::StockMsg& GetStocksOfBlockResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::StockMsg* GetStocksOfBlockResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::StockMsg* GetStocksOfBlockResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
GetStocksOfBlockResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
GetStocksOfBlockResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool GetStocksOfBlockResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetStocksOfBlockResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetStocksOfBlockResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetStocksOfBlockResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 GetStocksOfBlockResponse::total_cnt() const {
  return total_cnt_;
}
inline void GetStocksOfBlockResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// MoneyAbnormalOptionalRequest

// repeated string stock_code = 1;
inline int MoneyAbnormalOptionalRequest::stock_code_size() const {
  return stock_code_.size();
}
inline void MoneyAbnormalOptionalRequest::clear_stock_code() {
  stock_code_.Clear();
}
inline const ::std::string& MoneyAbnormalOptionalRequest::stock_code(int index) const {
  return stock_code_.Get(index);
}
inline ::std::string* MoneyAbnormalOptionalRequest::mutable_stock_code(int index) {
  return stock_code_.Mutable(index);
}
inline void MoneyAbnormalOptionalRequest::set_stock_code(int index, const ::std::string& value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void MoneyAbnormalOptionalRequest::set_stock_code(int index, const char* value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void MoneyAbnormalOptionalRequest::set_stock_code(int index, const char* value, size_t size) {
  stock_code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MoneyAbnormalOptionalRequest::add_stock_code() {
  return stock_code_.Add();
}
inline void MoneyAbnormalOptionalRequest::add_stock_code(const ::std::string& value) {
  stock_code_.Add()->assign(value);
}
inline void MoneyAbnormalOptionalRequest::add_stock_code(const char* value) {
  stock_code_.Add()->assign(value);
}
inline void MoneyAbnormalOptionalRequest::add_stock_code(const char* value, size_t size) {
  stock_code_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MoneyAbnormalOptionalRequest::stock_code() const {
  return stock_code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MoneyAbnormalOptionalRequest::mutable_stock_code() {
  return &stock_code_;
}

// optional .QuoteProto.MsgMask msg_mask = 2;
inline bool MoneyAbnormalOptionalRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoneyAbnormalOptionalRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoneyAbnormalOptionalRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoneyAbnormalOptionalRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& MoneyAbnormalOptionalRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* MoneyAbnormalOptionalRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* MoneyAbnormalOptionalRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// MoneyAbnormalOptionalResponse

// required .QuoteProto.Ret ret = 1;
inline bool MoneyAbnormalOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoneyAbnormalOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoneyAbnormalOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoneyAbnormalOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& MoneyAbnormalOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* MoneyAbnormalOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* MoneyAbnormalOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.FundAbnormalMsg stk = 2;
inline int MoneyAbnormalOptionalResponse::stk_size() const {
  return stk_.size();
}
inline void MoneyAbnormalOptionalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::FundAbnormalMsg& MoneyAbnormalOptionalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::FundAbnormalMsg* MoneyAbnormalOptionalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::FundAbnormalMsg* MoneyAbnormalOptionalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >&
MoneyAbnormalOptionalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >*
MoneyAbnormalOptionalResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// BatchGetMoneyAbnormalRequest

// required .QuoteProto.FundAbnormalType type = 1;
inline bool BatchGetMoneyAbnormalRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetMoneyAbnormalRequest::clear_type() {
  type_ = 1;
  clear_has_type();
}
inline QuoteProto::FundAbnormalType BatchGetMoneyAbnormalRequest::type() const {
  return static_cast< QuoteProto::FundAbnormalType >(type_);
}
inline void BatchGetMoneyAbnormalRequest::set_type(QuoteProto::FundAbnormalType value) {
  GOOGLE_DCHECK(QuoteProto::FundAbnormalType_IsValid(value));
  set_has_type();
  type_ = value;
}

// required .QuoteProto.FASortType sort_field = 2;
inline bool BatchGetMoneyAbnormalRequest::has_sort_field() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_sort_field() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_sort_field() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetMoneyAbnormalRequest::clear_sort_field() {
  sort_field_ = 1;
  clear_has_sort_field();
}
inline QuoteProto::FASortType BatchGetMoneyAbnormalRequest::sort_field() const {
  return static_cast< QuoteProto::FASortType >(sort_field_);
}
inline void BatchGetMoneyAbnormalRequest::set_sort_field(QuoteProto::FASortType value) {
  GOOGLE_DCHECK(QuoteProto::FASortType_IsValid(value));
  set_has_sort_field();
  sort_field_ = value;
}

// required bool is_desc = 3;
inline bool BatchGetMoneyAbnormalRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetMoneyAbnormalRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchGetMoneyAbnormalRequest::is_desc() const {
  return is_desc_;
}
inline void BatchGetMoneyAbnormalRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 4;
inline bool BatchGetMoneyAbnormalRequest::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchGetMoneyAbnormalRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchGetMoneyAbnormalRequest::index() const {
  return index_;
}
inline void BatchGetMoneyAbnormalRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 5;
inline bool BatchGetMoneyAbnormalRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BatchGetMoneyAbnormalRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchGetMoneyAbnormalRequest::count_range() const {
  return count_range_;
}
inline void BatchGetMoneyAbnormalRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// optional .QuoteProto.MsgMask msg_mask = 6;
inline bool BatchGetMoneyAbnormalRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchGetMoneyAbnormalRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BatchGetMoneyAbnormalRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BatchGetMoneyAbnormalRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& BatchGetMoneyAbnormalRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetMoneyAbnormalRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchGetMoneyAbnormalRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BatchGetMoneyAbnormalResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchGetMoneyAbnormalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetMoneyAbnormalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetMoneyAbnormalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetMoneyAbnormalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchGetMoneyAbnormalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchGetMoneyAbnormalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchGetMoneyAbnormalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.FundAbnormalMsg stk = 2;
inline int BatchGetMoneyAbnormalResponse::stk_size() const {
  return stk_.size();
}
inline void BatchGetMoneyAbnormalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::FundAbnormalMsg& BatchGetMoneyAbnormalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::FundAbnormalMsg* BatchGetMoneyAbnormalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::FundAbnormalMsg* BatchGetMoneyAbnormalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >&
BatchGetMoneyAbnormalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::FundAbnormalMsg >*
BatchGetMoneyAbnormalResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchGetMoneyAbnormalResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetMoneyAbnormalResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetMoneyAbnormalResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetMoneyAbnormalResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchGetMoneyAbnormalResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchGetMoneyAbnormalResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// BlockMoneyAbnoramlRequest

// required string block_code = 1;
inline bool BlockMoneyAbnoramlRequest::has_block_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockMoneyAbnoramlRequest::set_has_block_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockMoneyAbnoramlRequest::clear_has_block_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockMoneyAbnoramlRequest::clear_block_code() {
  if (block_code_ != &::google::protobuf::internal::kEmptyString) {
    block_code_->clear();
  }
  clear_has_block_code();
}
inline const ::std::string& BlockMoneyAbnoramlRequest::block_code() const {
  return *block_code_;
}
inline void BlockMoneyAbnoramlRequest::set_block_code(const ::std::string& value) {
  set_has_block_code();
  if (block_code_ == &::google::protobuf::internal::kEmptyString) {
    block_code_ = new ::std::string;
  }
  block_code_->assign(value);
}
inline void BlockMoneyAbnoramlRequest::set_block_code(const char* value) {
  set_has_block_code();
  if (block_code_ == &::google::protobuf::internal::kEmptyString) {
    block_code_ = new ::std::string;
  }
  block_code_->assign(value);
}
inline void BlockMoneyAbnoramlRequest::set_block_code(const char* value, size_t size) {
  set_has_block_code();
  if (block_code_ == &::google::protobuf::internal::kEmptyString) {
    block_code_ = new ::std::string;
  }
  block_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BlockMoneyAbnoramlRequest::mutable_block_code() {
  set_has_block_code();
  if (block_code_ == &::google::protobuf::internal::kEmptyString) {
    block_code_ = new ::std::string;
  }
  return block_code_;
}
inline ::std::string* BlockMoneyAbnoramlRequest::release_block_code() {
  clear_has_block_code();
  if (block_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = block_code_;
    block_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required uint32 update_time = 2;
inline bool BlockMoneyAbnoramlRequest::has_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BlockMoneyAbnoramlRequest::set_has_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BlockMoneyAbnoramlRequest::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BlockMoneyAbnoramlRequest::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
inline ::google::protobuf::uint32 BlockMoneyAbnoramlRequest::update_time() const {
  return update_time_;
}
inline void BlockMoneyAbnoramlRequest::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
}

// required int32 count_range = 3;
inline bool BlockMoneyAbnoramlRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlockMoneyAbnoramlRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlockMoneyAbnoramlRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlockMoneyAbnoramlRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BlockMoneyAbnoramlRequest::count_range() const {
  return count_range_;
}
inline void BlockMoneyAbnoramlRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// required bool is_desc = 4;
inline bool BlockMoneyAbnoramlRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BlockMoneyAbnoramlRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BlockMoneyAbnoramlRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BlockMoneyAbnoramlRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BlockMoneyAbnoramlRequest::is_desc() const {
  return is_desc_;
}
inline void BlockMoneyAbnoramlRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// -------------------------------------------------------------------

// BlockMoneyAbnoramlResponse

// required .QuoteProto.Ret ret = 1;
inline bool BlockMoneyAbnoramlResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockMoneyAbnoramlResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockMoneyAbnoramlResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockMoneyAbnoramlResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BlockMoneyAbnoramlResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BlockMoneyAbnoramlResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BlockMoneyAbnoramlResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.BlockFundAbnormalItem blocks = 2;
inline int BlockMoneyAbnoramlResponse::blocks_size() const {
  return blocks_.size();
}
inline void BlockMoneyAbnoramlResponse::clear_blocks() {
  blocks_.Clear();
}
inline const ::QuoteProto::BlockFundAbnormalItem& BlockMoneyAbnoramlResponse::blocks(int index) const {
  return blocks_.Get(index);
}
inline ::QuoteProto::BlockFundAbnormalItem* BlockMoneyAbnoramlResponse::mutable_blocks(int index) {
  return blocks_.Mutable(index);
}
inline ::QuoteProto::BlockFundAbnormalItem* BlockMoneyAbnoramlResponse::add_blocks() {
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BlockFundAbnormalItem >&
BlockMoneyAbnoramlResponse::blocks() const {
  return blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BlockFundAbnormalItem >*
BlockMoneyAbnoramlResponse::mutable_blocks() {
  return &blocks_;
}

// optional int32 total_cnt = 3;
inline bool BlockMoneyAbnoramlResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BlockMoneyAbnoramlResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BlockMoneyAbnoramlResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BlockMoneyAbnoramlResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BlockMoneyAbnoramlResponse::total_cnt() const {
  return total_cnt_;
}
inline void BlockMoneyAbnoramlResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// BlockMoneyAbnormalPCRequest

// required .QuoteProto.QuoteFilterFlag filter = 1;
inline bool BlockMoneyAbnormalPCRequest::has_filter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockMoneyAbnormalPCRequest::set_has_filter() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockMoneyAbnormalPCRequest::clear_has_filter() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockMoneyAbnormalPCRequest::clear_filter() {
  filter_ = 0;
  clear_has_filter();
}
inline QuoteProto::QuoteFilterFlag BlockMoneyAbnormalPCRequest::filter() const {
  return static_cast< QuoteProto::QuoteFilterFlag >(filter_);
}
inline void BlockMoneyAbnormalPCRequest::set_filter(QuoteProto::QuoteFilterFlag value) {
  GOOGLE_DCHECK(QuoteProto::QuoteFilterFlag_IsValid(value));
  set_has_filter();
  filter_ = value;
}

// -------------------------------------------------------------------

// BlockMoneyAbnormalPCResponse

// required .QuoteProto.Ret ret = 1;
inline bool BlockMoneyAbnormalPCResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BlockMoneyAbnormalPCResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BlockMoneyAbnormalPCResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BlockMoneyAbnormalPCResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BlockMoneyAbnormalPCResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BlockMoneyAbnormalPCResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BlockMoneyAbnormalPCResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.StockMsg blocks = 2;
inline int BlockMoneyAbnormalPCResponse::blocks_size() const {
  return blocks_.size();
}
inline void BlockMoneyAbnormalPCResponse::clear_blocks() {
  blocks_.Clear();
}
inline const ::QuoteProto::StockMsg& BlockMoneyAbnormalPCResponse::blocks(int index) const {
  return blocks_.Get(index);
}
inline ::QuoteProto::StockMsg* BlockMoneyAbnormalPCResponse::mutable_blocks(int index) {
  return blocks_.Mutable(index);
}
inline ::QuoteProto::StockMsg* BlockMoneyAbnormalPCResponse::add_blocks() {
  return blocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
BlockMoneyAbnormalPCResponse::blocks() const {
  return blocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
BlockMoneyAbnormalPCResponse::mutable_blocks() {
  return &blocks_;
}

// -------------------------------------------------------------------

// GetTimeRequest

// -------------------------------------------------------------------

// GetTimeResponse

// required .QuoteProto.Ret ret = 1;
inline bool GetTimeResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetTimeResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetTimeResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetTimeResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& GetTimeResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* GetTimeResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* GetTimeResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional int32 cur_time = 2;
inline bool GetTimeResponse::has_cur_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetTimeResponse::set_has_cur_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetTimeResponse::clear_has_cur_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetTimeResponse::clear_cur_time() {
  cur_time_ = 0;
  clear_has_cur_time();
}
inline ::google::protobuf::int32 GetTimeResponse::cur_time() const {
  return cur_time_;
}
inline void GetTimeResponse::set_cur_time(::google::protobuf::int32 value) {
  set_has_cur_time();
  cur_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::SortType>() {
  return QuoteProto::SortType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::FASortType>() {
  return QuoteProto::FASortType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_stock_5fbasinfo_2eproto__INCLUDED
