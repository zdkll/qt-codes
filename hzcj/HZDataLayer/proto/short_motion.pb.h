// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: short_motion.proto

#ifndef PROTOBUF_short_5fmotion_2eproto__INCLUDED
#define PROTOBUF_short_5fmotion_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_short_5fmotion_2eproto();
void protobuf_AssignDesc_short_5fmotion_2eproto();
void protobuf_ShutdownFile_short_5fmotion_2eproto();

class BatchShortMotionRequest;
class BatchShortMotionResponse;

// ===================================================================

class BatchShortMotionRequest : public ::google::protobuf::Message {
 public:
  BatchShortMotionRequest();
  virtual ~BatchShortMotionRequest();
  
  BatchShortMotionRequest(const BatchShortMotionRequest& from);
  
  inline BatchShortMotionRequest& operator=(const BatchShortMotionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchShortMotionRequest& default_instance();
  
  void Swap(BatchShortMotionRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchShortMotionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchShortMotionRequest& from);
  void MergeFrom(const BatchShortMotionRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.ShortMotionClientType short_type = 1;
  inline bool has_short_type() const;
  inline void clear_short_type();
  static const int kShortTypeFieldNumber = 1;
  inline QuoteProto::ShortMotionClientType short_type() const;
  inline void set_short_type(QuoteProto::ShortMotionClientType value);
  
  // required bool is_desc = 2;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 2;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 4;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 4;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchShortMotionRequest)
 private:
  inline void set_has_short_type();
  inline void clear_has_short_type();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int short_type_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_short_5fmotion_2eproto();
  friend void protobuf_AssignDesc_short_5fmotion_2eproto();
  friend void protobuf_ShutdownFile_short_5fmotion_2eproto();
  
  void InitAsDefaultInstance();
  static BatchShortMotionRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchShortMotionResponse : public ::google::protobuf::Message {
 public:
  BatchShortMotionResponse();
  virtual ~BatchShortMotionResponse();
  
  BatchShortMotionResponse(const BatchShortMotionResponse& from);
  
  inline BatchShortMotionResponse& operator=(const BatchShortMotionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchShortMotionResponse& default_instance();
  
  void Swap(BatchShortMotionResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchShortMotionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchShortMotionResponse& from);
  void MergeFrom(const BatchShortMotionResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.ShortMotionMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::ShortMotionMsg& stk(int index) const;
  inline ::QuoteProto::ShortMotionMsg* mutable_stk(int index);
  inline ::QuoteProto::ShortMotionMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::ShortMotionMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::ShortMotionMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchShortMotionResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::ShortMotionMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_short_5fmotion_2eproto();
  friend void protobuf_AssignDesc_short_5fmotion_2eproto();
  friend void protobuf_ShutdownFile_short_5fmotion_2eproto();
  
  void InitAsDefaultInstance();
  static BatchShortMotionResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BatchShortMotionRequest

// required .QuoteProto.ShortMotionClientType short_type = 1;
inline bool BatchShortMotionRequest::has_short_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchShortMotionRequest::set_has_short_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchShortMotionRequest::clear_has_short_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchShortMotionRequest::clear_short_type() {
  short_type_ = 1;
  clear_has_short_type();
}
inline QuoteProto::ShortMotionClientType BatchShortMotionRequest::short_type() const {
  return static_cast< QuoteProto::ShortMotionClientType >(short_type_);
}
inline void BatchShortMotionRequest::set_short_type(QuoteProto::ShortMotionClientType value) {
  GOOGLE_DCHECK(QuoteProto::ShortMotionClientType_IsValid(value));
  set_has_short_type();
  short_type_ = value;
}

// required bool is_desc = 2;
inline bool BatchShortMotionRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchShortMotionRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchShortMotionRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchShortMotionRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchShortMotionRequest::is_desc() const {
  return is_desc_;
}
inline void BatchShortMotionRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 3;
inline bool BatchShortMotionRequest::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchShortMotionRequest::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchShortMotionRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchShortMotionRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchShortMotionRequest::index() const {
  return index_;
}
inline void BatchShortMotionRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 4;
inline bool BatchShortMotionRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchShortMotionRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchShortMotionRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchShortMotionRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchShortMotionRequest::count_range() const {
  return count_range_;
}
inline void BatchShortMotionRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// -------------------------------------------------------------------

// BatchShortMotionResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchShortMotionResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchShortMotionResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchShortMotionResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchShortMotionResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchShortMotionResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchShortMotionResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchShortMotionResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.ShortMotionMsg stk = 2;
inline int BatchShortMotionResponse::stk_size() const {
  return stk_.size();
}
inline void BatchShortMotionResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::ShortMotionMsg& BatchShortMotionResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::ShortMotionMsg* BatchShortMotionResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::ShortMotionMsg* BatchShortMotionResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::ShortMotionMsg >&
BatchShortMotionResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::ShortMotionMsg >*
BatchShortMotionResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchShortMotionResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchShortMotionResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchShortMotionResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchShortMotionResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchShortMotionResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchShortMotionResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_short_5fmotion_2eproto__INCLUDED
