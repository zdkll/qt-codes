// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bidding.proto

#ifndef PROTOBUF_bidding_2eproto__INCLUDED
#define PROTOBUF_bidding_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bidding_2eproto();
void protobuf_AssignDesc_bidding_2eproto();
void protobuf_ShutdownFile_bidding_2eproto();

class BatchGetBiddingRequest;
class BatchGetBiddingResponse;
class BiddingOptionalRequest;
class BiddingOptionalResponse;
class BatchGetBiddingBlockRequest;
class BatchGetBiddingBlockResponse;
class BiddingBlockOptionalRequest;
class BiddingBlockOptionalResponse;
class GetBiddingQuoteKlineRequest;
class GetBiddingQuoteKlineResponse;
class GetBiddingBlockKlineRequest;
class GetBiddingBlockKlineResponse;

enum BiddingSortType {
  bid_fund = 1,
  bid_quantity_than = 2,
  bid_bidding_rise = 3,
  bid_yesterday_rate = 4
};
bool BiddingSortType_IsValid(int value);
const BiddingSortType BiddingSortType_MIN = bid_fund;
const BiddingSortType BiddingSortType_MAX = bid_yesterday_rate;
const int BiddingSortType_ARRAYSIZE = BiddingSortType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BiddingSortType_descriptor();
inline const ::std::string& BiddingSortType_Name(BiddingSortType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BiddingSortType_descriptor(), value);
}
inline bool BiddingSortType_Parse(
    const ::std::string& name, BiddingSortType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BiddingSortType>(
    BiddingSortType_descriptor(), name, value);
}
enum BiddingBlockSortType {
  bid_block_rate = 1
};
bool BiddingBlockSortType_IsValid(int value);
const BiddingBlockSortType BiddingBlockSortType_MIN = bid_block_rate;
const BiddingBlockSortType BiddingBlockSortType_MAX = bid_block_rate;
const int BiddingBlockSortType_ARRAYSIZE = BiddingBlockSortType_MAX + 1;

const ::google::protobuf::EnumDescriptor* BiddingBlockSortType_descriptor();
inline const ::std::string& BiddingBlockSortType_Name(BiddingBlockSortType value) {
  return ::google::protobuf::internal::NameOfEnum(
    BiddingBlockSortType_descriptor(), value);
}
inline bool BiddingBlockSortType_Parse(
    const ::std::string& name, BiddingBlockSortType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<BiddingBlockSortType>(
    BiddingBlockSortType_descriptor(), name, value);
}
// ===================================================================

class BatchGetBiddingRequest : public ::google::protobuf::Message {
 public:
  BatchGetBiddingRequest();
  virtual ~BatchGetBiddingRequest();
  
  BatchGetBiddingRequest(const BatchGetBiddingRequest& from);
  
  inline BatchGetBiddingRequest& operator=(const BatchGetBiddingRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetBiddingRequest& default_instance();
  
  void Swap(BatchGetBiddingRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetBiddingRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetBiddingRequest& from);
  void MergeFrom(const BatchGetBiddingRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.BiddingSortType sort_field = 1;
  inline bool has_sort_field() const;
  inline void clear_sort_field();
  static const int kSortFieldFieldNumber = 1;
  inline QuoteProto::BiddingSortType sort_field() const;
  inline void set_sort_field(QuoteProto::BiddingSortType value);
  
  // required bool is_desc = 2;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 2;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 4;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 4;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetBiddingRequest)
 private:
  inline void set_has_sort_field();
  inline void clear_has_sort_field();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int sort_field_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetBiddingRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetBiddingResponse : public ::google::protobuf::Message {
 public:
  BatchGetBiddingResponse();
  virtual ~BatchGetBiddingResponse();
  
  BatchGetBiddingResponse(const BatchGetBiddingResponse& from);
  
  inline BatchGetBiddingResponse& operator=(const BatchGetBiddingResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetBiddingResponse& default_instance();
  
  void Swap(BatchGetBiddingResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetBiddingResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetBiddingResponse& from);
  void MergeFrom(const BatchGetBiddingResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.BidClientMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::BidClientMsg& stk(int index) const;
  inline ::QuoteProto::BidClientMsg* mutable_stk(int index);
  inline ::QuoteProto::BidClientMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetBiddingResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetBiddingResponse* default_instance_;
};
// -------------------------------------------------------------------

class BiddingOptionalRequest : public ::google::protobuf::Message {
 public:
  BiddingOptionalRequest();
  virtual ~BiddingOptionalRequest();
  
  BiddingOptionalRequest(const BiddingOptionalRequest& from);
  
  inline BiddingOptionalRequest& operator=(const BiddingOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BiddingOptionalRequest& default_instance();
  
  void Swap(BiddingOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  BiddingOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BiddingOptionalRequest& from);
  void MergeFrom(const BiddingOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string stock_code = 1;
  inline int stock_code_size() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code(int index) const;
  inline ::std::string* mutable_stock_code(int index);
  inline void set_stock_code(int index, const ::std::string& value);
  inline void set_stock_code(int index, const char* value);
  inline void set_stock_code(int index, const char* value, size_t size);
  inline ::std::string* add_stock_code();
  inline void add_stock_code(const ::std::string& value);
  inline void add_stock_code(const char* value);
  inline void add_stock_code(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_code() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BiddingOptionalRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BiddingOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class BiddingOptionalResponse : public ::google::protobuf::Message {
 public:
  BiddingOptionalResponse();
  virtual ~BiddingOptionalResponse();
  
  BiddingOptionalResponse(const BiddingOptionalResponse& from);
  
  inline BiddingOptionalResponse& operator=(const BiddingOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BiddingOptionalResponse& default_instance();
  
  void Swap(BiddingOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  BiddingOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BiddingOptionalResponse& from);
  void MergeFrom(const BiddingOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.BidClientMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::BidClientMsg& stk(int index) const;
  inline ::QuoteProto::BidClientMsg* mutable_stk(int index);
  inline ::QuoteProto::BidClientMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BiddingOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BiddingOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetBiddingBlockRequest : public ::google::protobuf::Message {
 public:
  BatchGetBiddingBlockRequest();
  virtual ~BatchGetBiddingBlockRequest();
  
  BatchGetBiddingBlockRequest(const BatchGetBiddingBlockRequest& from);
  
  inline BatchGetBiddingBlockRequest& operator=(const BatchGetBiddingBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetBiddingBlockRequest& default_instance();
  
  void Swap(BatchGetBiddingBlockRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetBiddingBlockRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetBiddingBlockRequest& from);
  void MergeFrom(const BatchGetBiddingBlockRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.BiddingBlockSortType sort_field = 1;
  inline bool has_sort_field() const;
  inline void clear_sort_field();
  static const int kSortFieldFieldNumber = 1;
  inline QuoteProto::BiddingBlockSortType sort_field() const;
  inline void set_sort_field(QuoteProto::BiddingBlockSortType value);
  
  // required bool is_desc = 2;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 2;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 4;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 4;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetBiddingBlockRequest)
 private:
  inline void set_has_sort_field();
  inline void clear_has_sort_field();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int sort_field_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetBiddingBlockRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchGetBiddingBlockResponse : public ::google::protobuf::Message {
 public:
  BatchGetBiddingBlockResponse();
  virtual ~BatchGetBiddingBlockResponse();
  
  BatchGetBiddingBlockResponse(const BatchGetBiddingBlockResponse& from);
  
  inline BatchGetBiddingBlockResponse& operator=(const BatchGetBiddingBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchGetBiddingBlockResponse& default_instance();
  
  void Swap(BatchGetBiddingBlockResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchGetBiddingBlockResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchGetBiddingBlockResponse& from);
  void MergeFrom(const BatchGetBiddingBlockResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.BidBlockMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::BidBlockMsg& stk(int index) const;
  inline ::QuoteProto::BidBlockMsg* mutable_stk(int index);
  inline ::QuoteProto::BidBlockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
      mutable_stk();
  
  // optional int32 total_cnt = 3;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 3;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchGetBiddingBlockResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BatchGetBiddingBlockResponse* default_instance_;
};
// -------------------------------------------------------------------

class BiddingBlockOptionalRequest : public ::google::protobuf::Message {
 public:
  BiddingBlockOptionalRequest();
  virtual ~BiddingBlockOptionalRequest();
  
  BiddingBlockOptionalRequest(const BiddingBlockOptionalRequest& from);
  
  inline BiddingBlockOptionalRequest& operator=(const BiddingBlockOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BiddingBlockOptionalRequest& default_instance();
  
  void Swap(BiddingBlockOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  BiddingBlockOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BiddingBlockOptionalRequest& from);
  void MergeFrom(const BiddingBlockOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated string stock_code = 1;
  inline int stock_code_size() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code(int index) const;
  inline ::std::string* mutable_stock_code(int index);
  inline void set_stock_code(int index, const ::std::string& value);
  inline void set_stock_code(int index, const char* value);
  inline void set_stock_code(int index, const char* value, size_t size);
  inline ::std::string* add_stock_code();
  inline void add_stock_code(const ::std::string& value);
  inline void add_stock_code(const char* value);
  inline void add_stock_code(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_code() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BiddingBlockOptionalRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BiddingBlockOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class BiddingBlockOptionalResponse : public ::google::protobuf::Message {
 public:
  BiddingBlockOptionalResponse();
  virtual ~BiddingBlockOptionalResponse();
  
  BiddingBlockOptionalResponse(const BiddingBlockOptionalResponse& from);
  
  inline BiddingBlockOptionalResponse& operator=(const BiddingBlockOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BiddingBlockOptionalResponse& default_instance();
  
  void Swap(BiddingBlockOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  BiddingBlockOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BiddingBlockOptionalResponse& from);
  void MergeFrom(const BiddingBlockOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.BidBlockMsg stk = 2;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 2;
  inline const ::QuoteProto::BidBlockMsg& stk(int index) const;
  inline ::QuoteProto::BidBlockMsg* mutable_stk(int index);
  inline ::QuoteProto::BidBlockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BiddingBlockOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static BiddingBlockOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetBiddingQuoteKlineRequest : public ::google::protobuf::Message {
 public:
  GetBiddingQuoteKlineRequest();
  virtual ~GetBiddingQuoteKlineRequest();
  
  GetBiddingQuoteKlineRequest(const GetBiddingQuoteKlineRequest& from);
  
  inline GetBiddingQuoteKlineRequest& operator=(const GetBiddingQuoteKlineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBiddingQuoteKlineRequest& default_instance();
  
  void Swap(GetBiddingQuoteKlineRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetBiddingQuoteKlineRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBiddingQuoteKlineRequest& from);
  void MergeFrom(const GetBiddingQuoteKlineRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetBiddingQuoteKlineRequest)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static GetBiddingQuoteKlineRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetBiddingQuoteKlineResponse : public ::google::protobuf::Message {
 public:
  GetBiddingQuoteKlineResponse();
  virtual ~GetBiddingQuoteKlineResponse();
  
  GetBiddingQuoteKlineResponse(const GetBiddingQuoteKlineResponse& from);
  
  inline GetBiddingQuoteKlineResponse& operator=(const GetBiddingQuoteKlineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBiddingQuoteKlineResponse& default_instance();
  
  void Swap(GetBiddingQuoteKlineResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetBiddingQuoteKlineResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBiddingQuoteKlineResponse& from);
  void MergeFrom(const GetBiddingQuoteKlineResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional string stock_code = 2;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 2;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // repeated .QuoteProto.BidClientMsg stk = 3;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 3;
  inline const ::QuoteProto::BidClientMsg& stk(int index) const;
  inline ::QuoteProto::BidClientMsg* mutable_stk(int index);
  inline ::QuoteProto::BidClientMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetBiddingQuoteKlineResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::std::string* stock_code_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static GetBiddingQuoteKlineResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetBiddingBlockKlineRequest : public ::google::protobuf::Message {
 public:
  GetBiddingBlockKlineRequest();
  virtual ~GetBiddingBlockKlineRequest();
  
  GetBiddingBlockKlineRequest(const GetBiddingBlockKlineRequest& from);
  
  inline GetBiddingBlockKlineRequest& operator=(const GetBiddingBlockKlineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBiddingBlockKlineRequest& default_instance();
  
  void Swap(GetBiddingBlockKlineRequest* other);
  
  // implements Message ----------------------------------------------
  
  GetBiddingBlockKlineRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBiddingBlockKlineRequest& from);
  void MergeFrom(const GetBiddingBlockKlineRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetBiddingBlockKlineRequest)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static GetBiddingBlockKlineRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetBiddingBlockKlineResponse : public ::google::protobuf::Message {
 public:
  GetBiddingBlockKlineResponse();
  virtual ~GetBiddingBlockKlineResponse();
  
  GetBiddingBlockKlineResponse(const GetBiddingBlockKlineResponse& from);
  
  inline GetBiddingBlockKlineResponse& operator=(const GetBiddingBlockKlineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBiddingBlockKlineResponse& default_instance();
  
  void Swap(GetBiddingBlockKlineResponse* other);
  
  // implements Message ----------------------------------------------
  
  GetBiddingBlockKlineResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBiddingBlockKlineResponse& from);
  void MergeFrom(const GetBiddingBlockKlineResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional string stock_code = 2;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 2;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // repeated .QuoteProto.BidBlockMsg stk = 3;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 3;
  inline const ::QuoteProto::BidBlockMsg& stk(int index) const;
  inline ::QuoteProto::BidBlockMsg* mutable_stk(int index);
  inline ::QuoteProto::BidBlockMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.GetBiddingBlockKlineResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::std::string* stock_code_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg > stk_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_bidding_2eproto();
  friend void protobuf_AssignDesc_bidding_2eproto();
  friend void protobuf_ShutdownFile_bidding_2eproto();
  
  void InitAsDefaultInstance();
  static GetBiddingBlockKlineResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// BatchGetBiddingRequest

// required .QuoteProto.BiddingSortType sort_field = 1;
inline bool BatchGetBiddingRequest::has_sort_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetBiddingRequest::set_has_sort_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetBiddingRequest::clear_has_sort_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetBiddingRequest::clear_sort_field() {
  sort_field_ = 1;
  clear_has_sort_field();
}
inline QuoteProto::BiddingSortType BatchGetBiddingRequest::sort_field() const {
  return static_cast< QuoteProto::BiddingSortType >(sort_field_);
}
inline void BatchGetBiddingRequest::set_sort_field(QuoteProto::BiddingSortType value) {
  GOOGLE_DCHECK(QuoteProto::BiddingSortType_IsValid(value));
  set_has_sort_field();
  sort_field_ = value;
}

// required bool is_desc = 2;
inline bool BatchGetBiddingRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetBiddingRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetBiddingRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetBiddingRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchGetBiddingRequest::is_desc() const {
  return is_desc_;
}
inline void BatchGetBiddingRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 3;
inline bool BatchGetBiddingRequest::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetBiddingRequest::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetBiddingRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetBiddingRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchGetBiddingRequest::index() const {
  return index_;
}
inline void BatchGetBiddingRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 4;
inline bool BatchGetBiddingRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchGetBiddingRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchGetBiddingRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchGetBiddingRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchGetBiddingRequest::count_range() const {
  return count_range_;
}
inline void BatchGetBiddingRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// -------------------------------------------------------------------

// BatchGetBiddingResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchGetBiddingResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetBiddingResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetBiddingResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetBiddingResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchGetBiddingResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchGetBiddingResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchGetBiddingResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.BidClientMsg stk = 2;
inline int BatchGetBiddingResponse::stk_size() const {
  return stk_.size();
}
inline void BatchGetBiddingResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidClientMsg& BatchGetBiddingResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidClientMsg* BatchGetBiddingResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidClientMsg* BatchGetBiddingResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
BatchGetBiddingResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
BatchGetBiddingResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchGetBiddingResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetBiddingResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetBiddingResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetBiddingResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchGetBiddingResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchGetBiddingResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// BiddingOptionalRequest

// repeated string stock_code = 1;
inline int BiddingOptionalRequest::stock_code_size() const {
  return stock_code_.size();
}
inline void BiddingOptionalRequest::clear_stock_code() {
  stock_code_.Clear();
}
inline const ::std::string& BiddingOptionalRequest::stock_code(int index) const {
  return stock_code_.Get(index);
}
inline ::std::string* BiddingOptionalRequest::mutable_stock_code(int index) {
  return stock_code_.Mutable(index);
}
inline void BiddingOptionalRequest::set_stock_code(int index, const ::std::string& value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void BiddingOptionalRequest::set_stock_code(int index, const char* value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void BiddingOptionalRequest::set_stock_code(int index, const char* value, size_t size) {
  stock_code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BiddingOptionalRequest::add_stock_code() {
  return stock_code_.Add();
}
inline void BiddingOptionalRequest::add_stock_code(const ::std::string& value) {
  stock_code_.Add()->assign(value);
}
inline void BiddingOptionalRequest::add_stock_code(const char* value) {
  stock_code_.Add()->assign(value);
}
inline void BiddingOptionalRequest::add_stock_code(const char* value, size_t size) {
  stock_code_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BiddingOptionalRequest::stock_code() const {
  return stock_code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BiddingOptionalRequest::mutable_stock_code() {
  return &stock_code_;
}

// -------------------------------------------------------------------

// BiddingOptionalResponse

// required .QuoteProto.Ret ret = 1;
inline bool BiddingOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BiddingOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BiddingOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BiddingOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BiddingOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BiddingOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BiddingOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.BidClientMsg stk = 2;
inline int BiddingOptionalResponse::stk_size() const {
  return stk_.size();
}
inline void BiddingOptionalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidClientMsg& BiddingOptionalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidClientMsg* BiddingOptionalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidClientMsg* BiddingOptionalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
BiddingOptionalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
BiddingOptionalResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// BatchGetBiddingBlockRequest

// required .QuoteProto.BiddingBlockSortType sort_field = 1;
inline bool BatchGetBiddingBlockRequest::has_sort_field() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetBiddingBlockRequest::set_has_sort_field() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetBiddingBlockRequest::clear_has_sort_field() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetBiddingBlockRequest::clear_sort_field() {
  sort_field_ = 1;
  clear_has_sort_field();
}
inline QuoteProto::BiddingBlockSortType BatchGetBiddingBlockRequest::sort_field() const {
  return static_cast< QuoteProto::BiddingBlockSortType >(sort_field_);
}
inline void BatchGetBiddingBlockRequest::set_sort_field(QuoteProto::BiddingBlockSortType value) {
  GOOGLE_DCHECK(QuoteProto::BiddingBlockSortType_IsValid(value));
  set_has_sort_field();
  sort_field_ = value;
}

// required bool is_desc = 2;
inline bool BatchGetBiddingBlockRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchGetBiddingBlockRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchGetBiddingBlockRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchGetBiddingBlockRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchGetBiddingBlockRequest::is_desc() const {
  return is_desc_;
}
inline void BatchGetBiddingBlockRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 3;
inline bool BatchGetBiddingBlockRequest::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetBiddingBlockRequest::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetBiddingBlockRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetBiddingBlockRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchGetBiddingBlockRequest::index() const {
  return index_;
}
inline void BatchGetBiddingBlockRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 4;
inline bool BatchGetBiddingBlockRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchGetBiddingBlockRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchGetBiddingBlockRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchGetBiddingBlockRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchGetBiddingBlockRequest::count_range() const {
  return count_range_;
}
inline void BatchGetBiddingBlockRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// -------------------------------------------------------------------

// BatchGetBiddingBlockResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchGetBiddingBlockResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchGetBiddingBlockResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchGetBiddingBlockResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchGetBiddingBlockResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchGetBiddingBlockResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchGetBiddingBlockResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchGetBiddingBlockResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.BidBlockMsg stk = 2;
inline int BatchGetBiddingBlockResponse::stk_size() const {
  return stk_.size();
}
inline void BatchGetBiddingBlockResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidBlockMsg& BatchGetBiddingBlockResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidBlockMsg* BatchGetBiddingBlockResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidBlockMsg* BatchGetBiddingBlockResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
BatchGetBiddingBlockResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
BatchGetBiddingBlockResponse::mutable_stk() {
  return &stk_;
}

// optional int32 total_cnt = 3;
inline bool BatchGetBiddingBlockResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchGetBiddingBlockResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchGetBiddingBlockResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchGetBiddingBlockResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchGetBiddingBlockResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchGetBiddingBlockResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// -------------------------------------------------------------------

// BiddingBlockOptionalRequest

// repeated string stock_code = 1;
inline int BiddingBlockOptionalRequest::stock_code_size() const {
  return stock_code_.size();
}
inline void BiddingBlockOptionalRequest::clear_stock_code() {
  stock_code_.Clear();
}
inline const ::std::string& BiddingBlockOptionalRequest::stock_code(int index) const {
  return stock_code_.Get(index);
}
inline ::std::string* BiddingBlockOptionalRequest::mutable_stock_code(int index) {
  return stock_code_.Mutable(index);
}
inline void BiddingBlockOptionalRequest::set_stock_code(int index, const ::std::string& value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void BiddingBlockOptionalRequest::set_stock_code(int index, const char* value) {
  stock_code_.Mutable(index)->assign(value);
}
inline void BiddingBlockOptionalRequest::set_stock_code(int index, const char* value, size_t size) {
  stock_code_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BiddingBlockOptionalRequest::add_stock_code() {
  return stock_code_.Add();
}
inline void BiddingBlockOptionalRequest::add_stock_code(const ::std::string& value) {
  stock_code_.Add()->assign(value);
}
inline void BiddingBlockOptionalRequest::add_stock_code(const char* value) {
  stock_code_.Add()->assign(value);
}
inline void BiddingBlockOptionalRequest::add_stock_code(const char* value, size_t size) {
  stock_code_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BiddingBlockOptionalRequest::stock_code() const {
  return stock_code_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BiddingBlockOptionalRequest::mutable_stock_code() {
  return &stock_code_;
}

// -------------------------------------------------------------------

// BiddingBlockOptionalResponse

// required .QuoteProto.Ret ret = 1;
inline bool BiddingBlockOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BiddingBlockOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BiddingBlockOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BiddingBlockOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BiddingBlockOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BiddingBlockOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BiddingBlockOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.BidBlockMsg stk = 2;
inline int BiddingBlockOptionalResponse::stk_size() const {
  return stk_.size();
}
inline void BiddingBlockOptionalResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidBlockMsg& BiddingBlockOptionalResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidBlockMsg* BiddingBlockOptionalResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidBlockMsg* BiddingBlockOptionalResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
BiddingBlockOptionalResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
BiddingBlockOptionalResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// GetBiddingQuoteKlineRequest

// required string stock_code = 1;
inline bool GetBiddingQuoteKlineRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBiddingQuoteKlineRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBiddingQuoteKlineRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBiddingQuoteKlineRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetBiddingQuoteKlineRequest::stock_code() const {
  return *stock_code_;
}
inline void GetBiddingQuoteKlineRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingQuoteKlineRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingQuoteKlineRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBiddingQuoteKlineRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetBiddingQuoteKlineRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetBiddingQuoteKlineResponse

// required .QuoteProto.Ret ret = 1;
inline bool GetBiddingQuoteKlineResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBiddingQuoteKlineResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBiddingQuoteKlineResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBiddingQuoteKlineResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& GetBiddingQuoteKlineResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* GetBiddingQuoteKlineResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* GetBiddingQuoteKlineResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional string stock_code = 2;
inline bool GetBiddingQuoteKlineResponse::has_stock_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBiddingQuoteKlineResponse::set_has_stock_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBiddingQuoteKlineResponse::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBiddingQuoteKlineResponse::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetBiddingQuoteKlineResponse::stock_code() const {
  return *stock_code_;
}
inline void GetBiddingQuoteKlineResponse::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingQuoteKlineResponse::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingQuoteKlineResponse::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBiddingQuoteKlineResponse::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetBiddingQuoteKlineResponse::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .QuoteProto.BidClientMsg stk = 3;
inline int GetBiddingQuoteKlineResponse::stk_size() const {
  return stk_.size();
}
inline void GetBiddingQuoteKlineResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidClientMsg& GetBiddingQuoteKlineResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidClientMsg* GetBiddingQuoteKlineResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidClientMsg* GetBiddingQuoteKlineResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >&
GetBiddingQuoteKlineResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidClientMsg >*
GetBiddingQuoteKlineResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// GetBiddingBlockKlineRequest

// required string stock_code = 1;
inline bool GetBiddingBlockKlineRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBiddingBlockKlineRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBiddingBlockKlineRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBiddingBlockKlineRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetBiddingBlockKlineRequest::stock_code() const {
  return *stock_code_;
}
inline void GetBiddingBlockKlineRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingBlockKlineRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingBlockKlineRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBiddingBlockKlineRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetBiddingBlockKlineRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// -------------------------------------------------------------------

// GetBiddingBlockKlineResponse

// required .QuoteProto.Ret ret = 1;
inline bool GetBiddingBlockKlineResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBiddingBlockKlineResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBiddingBlockKlineResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBiddingBlockKlineResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& GetBiddingBlockKlineResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* GetBiddingBlockKlineResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* GetBiddingBlockKlineResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional string stock_code = 2;
inline bool GetBiddingBlockKlineResponse::has_stock_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBiddingBlockKlineResponse::set_has_stock_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBiddingBlockKlineResponse::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBiddingBlockKlineResponse::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& GetBiddingBlockKlineResponse::stock_code() const {
  return *stock_code_;
}
inline void GetBiddingBlockKlineResponse::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingBlockKlineResponse::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void GetBiddingBlockKlineResponse::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* GetBiddingBlockKlineResponse::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* GetBiddingBlockKlineResponse::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// repeated .QuoteProto.BidBlockMsg stk = 3;
inline int GetBiddingBlockKlineResponse::stk_size() const {
  return stk_.size();
}
inline void GetBiddingBlockKlineResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::BidBlockMsg& GetBiddingBlockKlineResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::BidBlockMsg* GetBiddingBlockKlineResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::BidBlockMsg* GetBiddingBlockKlineResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >&
GetBiddingBlockKlineResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::BidBlockMsg >*
GetBiddingBlockKlineResponse::mutable_stk() {
  return &stk_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::BiddingSortType>() {
  return QuoteProto::BiddingSortType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::BiddingBlockSortType>() {
  return QuoteProto::BiddingBlockSortType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bidding_2eproto__INCLUDED
