// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rise_fall_monitor.proto

#ifndef PROTOBUF_rise_5ffall_5fmonitor_2eproto__INCLUDED
#define PROTOBUF_rise_5ffall_5fmonitor_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();

class RFMonitorNumInfoOptionalRequest;
class RFMonitorNumInfoOptionalResponse;
class BatchRFMonitorRequest;
class BatchRFMonitorResponse;
class RFMGropeTypesReqItem;
class RFMGroupTypesRequest;
class RFMGropeTypesResItem;
class RFMGroupTypesResponse;

enum RiseFallMSortType {
  rfm_sort_invalid = 0,
  rfm_sort_fb_rise = 1,
  rfm_sort_fb_time = 2,
  rfm_sort_zt_volume = 3,
  rfm_sort_dt_volumn = 4,
  rfm_sort_dt_time = 5,
  rfm_sort_zb_time = 6,
  rfm_sort_zb_num = 7,
  rfm_sort_main_funds = 8,
  rfm_sort_zt_open_time = 9,
  rfm_sort_dt_open_time = 10
};
bool RiseFallMSortType_IsValid(int value);
const RiseFallMSortType RiseFallMSortType_MIN = rfm_sort_invalid;
const RiseFallMSortType RiseFallMSortType_MAX = rfm_sort_dt_open_time;
const int RiseFallMSortType_ARRAYSIZE = RiseFallMSortType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RiseFallMSortType_descriptor();
inline const ::std::string& RiseFallMSortType_Name(RiseFallMSortType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RiseFallMSortType_descriptor(), value);
}
inline bool RiseFallMSortType_Parse(
    const ::std::string& name, RiseFallMSortType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RiseFallMSortType>(
    RiseFallMSortType_descriptor(), name, value);
}
// ===================================================================

class RFMonitorNumInfoOptionalRequest : public ::google::protobuf::Message {
 public:
  RFMonitorNumInfoOptionalRequest();
  virtual ~RFMonitorNumInfoOptionalRequest();
  
  RFMonitorNumInfoOptionalRequest(const RFMonitorNumInfoOptionalRequest& from);
  
  inline RFMonitorNumInfoOptionalRequest& operator=(const RFMonitorNumInfoOptionalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMonitorNumInfoOptionalRequest& default_instance();
  
  void Swap(RFMonitorNumInfoOptionalRequest* other);
  
  // implements Message ----------------------------------------------
  
  RFMonitorNumInfoOptionalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMonitorNumInfoOptionalRequest& from);
  void MergeFrom(const RFMonitorNumInfoOptionalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMonitorNumInfoOptionalRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMonitorNumInfoOptionalRequest* default_instance_;
};
// -------------------------------------------------------------------

class RFMonitorNumInfoOptionalResponse : public ::google::protobuf::Message {
 public:
  RFMonitorNumInfoOptionalResponse();
  virtual ~RFMonitorNumInfoOptionalResponse();
  
  RFMonitorNumInfoOptionalResponse(const RFMonitorNumInfoOptionalResponse& from);
  
  inline RFMonitorNumInfoOptionalResponse& operator=(const RFMonitorNumInfoOptionalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMonitorNumInfoOptionalResponse& default_instance();
  
  void Swap(RFMonitorNumInfoOptionalResponse* other);
  
  // implements Message ----------------------------------------------
  
  RFMonitorNumInfoOptionalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMonitorNumInfoOptionalResponse& from);
  void MergeFrom(const RFMonitorNumInfoOptionalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional .QuoteProto.RiseFallMonitorNumMsg msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::QuoteProto::RiseFallMonitorNumMsg& msg() const;
  inline ::QuoteProto::RiseFallMonitorNumMsg* mutable_msg();
  inline ::QuoteProto::RiseFallMonitorNumMsg* release_msg();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMonitorNumInfoOptionalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::QuoteProto::RiseFallMonitorNumMsg* msg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMonitorNumInfoOptionalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchRFMonitorRequest : public ::google::protobuf::Message {
 public:
  BatchRFMonitorRequest();
  virtual ~BatchRFMonitorRequest();
  
  BatchRFMonitorRequest(const BatchRFMonitorRequest& from);
  
  inline BatchRFMonitorRequest& operator=(const BatchRFMonitorRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchRFMonitorRequest& default_instance();
  
  void Swap(BatchRFMonitorRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchRFMonitorRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchRFMonitorRequest& from);
  void MergeFrom(const BatchRFMonitorRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.RFMonitorType m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline QuoteProto::RFMonitorType m_type() const;
  inline void set_m_type(QuoteProto::RFMonitorType value);
  
  // required .QuoteProto.RiseFallMSortType sort_type = 2;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 2;
  inline QuoteProto::RiseFallMSortType sort_type() const;
  inline void set_sort_type(QuoteProto::RiseFallMSortType value);
  
  // required bool is_desc = 3;
  inline bool has_is_desc() const;
  inline void clear_is_desc();
  static const int kIsDescFieldNumber = 3;
  inline bool is_desc() const;
  inline void set_is_desc(bool value);
  
  // required int32 index = 4;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 4;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required int32 count_range = 5;
  inline bool has_count_range() const;
  inline void clear_count_range();
  static const int kCountRangeFieldNumber = 5;
  inline ::google::protobuf::int32 count_range() const;
  inline void set_count_range(::google::protobuf::int32 value);
  
  // optional .QuoteProto.MsgMask msg_mask = 6;
  inline bool has_msg_mask() const;
  inline void clear_msg_mask();
  static const int kMsgMaskFieldNumber = 6;
  inline const ::QuoteProto::MsgMask& msg_mask() const;
  inline ::QuoteProto::MsgMask* mutable_msg_mask();
  inline ::QuoteProto::MsgMask* release_msg_mask();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchRFMonitorRequest)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  inline void set_has_is_desc();
  inline void clear_has_is_desc();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count_range();
  inline void clear_has_count_range();
  inline void set_has_msg_mask();
  inline void clear_has_msg_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int m_type_;
  int sort_type_;
  bool is_desc_;
  ::google::protobuf::int32 index_;
  ::QuoteProto::MsgMask* msg_mask_;
  ::google::protobuf::int32 count_range_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static BatchRFMonitorRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchRFMonitorResponse : public ::google::protobuf::Message {
 public:
  BatchRFMonitorResponse();
  virtual ~BatchRFMonitorResponse();
  
  BatchRFMonitorResponse(const BatchRFMonitorResponse& from);
  
  inline BatchRFMonitorResponse& operator=(const BatchRFMonitorResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchRFMonitorResponse& default_instance();
  
  void Swap(BatchRFMonitorResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchRFMonitorResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchRFMonitorResponse& from);
  void MergeFrom(const BatchRFMonitorResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // optional int32 total_cnt = 2;
  inline bool has_total_cnt() const;
  inline void clear_total_cnt();
  static const int kTotalCntFieldNumber = 2;
  inline ::google::protobuf::int32 total_cnt() const;
  inline void set_total_cnt(::google::protobuf::int32 value);
  
  // repeated .QuoteProto.RateMsg stk = 3;
  inline int stk_size() const;
  inline void clear_stk();
  static const int kStkFieldNumber = 3;
  inline const ::QuoteProto::RateMsg& stk(int index) const;
  inline ::QuoteProto::RateMsg* mutable_stk(int index);
  inline ::QuoteProto::RateMsg* add_stk();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RateMsg >&
      stk() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RateMsg >*
      mutable_stk();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchRFMonitorResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_cnt();
  inline void clear_has_total_cnt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::RateMsg > stk_;
  ::google::protobuf::int32 total_cnt_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static BatchRFMonitorResponse* default_instance_;
};
// -------------------------------------------------------------------

class RFMGropeTypesReqItem : public ::google::protobuf::Message {
 public:
  RFMGropeTypesReqItem();
  virtual ~RFMGropeTypesReqItem();
  
  RFMGropeTypesReqItem(const RFMGropeTypesReqItem& from);
  
  inline RFMGropeTypesReqItem& operator=(const RFMGropeTypesReqItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMGropeTypesReqItem& default_instance();
  
  void Swap(RFMGropeTypesReqItem* other);
  
  // implements Message ----------------------------------------------
  
  RFMGropeTypesReqItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMGropeTypesReqItem& from);
  void MergeFrom(const RFMGropeTypesReqItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.RFMonitorType m_type = 1;
  inline bool has_m_type() const;
  inline void clear_m_type();
  static const int kMTypeFieldNumber = 1;
  inline QuoteProto::RFMonitorType m_type() const;
  inline void set_m_type(QuoteProto::RFMonitorType value);
  
  // required .QuoteProto.RiseFallMSortType sort_type = 2;
  inline bool has_sort_type() const;
  inline void clear_sort_type();
  static const int kSortTypeFieldNumber = 2;
  inline QuoteProto::RiseFallMSortType sort_type() const;
  inline void set_sort_type(QuoteProto::RiseFallMSortType value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMGropeTypesReqItem)
 private:
  inline void set_has_m_type();
  inline void clear_has_m_type();
  inline void set_has_sort_type();
  inline void clear_has_sort_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int m_type_;
  int sort_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMGropeTypesReqItem* default_instance_;
};
// -------------------------------------------------------------------

class RFMGroupTypesRequest : public ::google::protobuf::Message {
 public:
  RFMGroupTypesRequest();
  virtual ~RFMGroupTypesRequest();
  
  RFMGroupTypesRequest(const RFMGroupTypesRequest& from);
  
  inline RFMGroupTypesRequest& operator=(const RFMGroupTypesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMGroupTypesRequest& default_instance();
  
  void Swap(RFMGroupTypesRequest* other);
  
  // implements Message ----------------------------------------------
  
  RFMGroupTypesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMGroupTypesRequest& from);
  void MergeFrom(const RFMGroupTypesRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .QuoteProto.RFMGropeTypesReqItem item_types = 1;
  inline int item_types_size() const;
  inline void clear_item_types();
  static const int kItemTypesFieldNumber = 1;
  inline const ::QuoteProto::RFMGropeTypesReqItem& item_types(int index) const;
  inline ::QuoteProto::RFMGropeTypesReqItem* mutable_item_types(int index);
  inline ::QuoteProto::RFMGropeTypesReqItem* add_item_types();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesReqItem >&
      item_types() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesReqItem >*
      mutable_item_types();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMGroupTypesRequest)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesReqItem > item_types_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMGroupTypesRequest* default_instance_;
};
// -------------------------------------------------------------------

class RFMGropeTypesResItem : public ::google::protobuf::Message {
 public:
  RFMGropeTypesResItem();
  virtual ~RFMGropeTypesResItem();
  
  RFMGropeTypesResItem(const RFMGropeTypesResItem& from);
  
  inline RFMGropeTypesResItem& operator=(const RFMGropeTypesResItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMGropeTypesResItem& default_instance();
  
  void Swap(RFMGropeTypesResItem* other);
  
  // implements Message ----------------------------------------------
  
  RFMGropeTypesResItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMGropeTypesResItem& from);
  void MergeFrom(const RFMGropeTypesResItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.RFMGropeTypesReqItem item_type = 1;
  inline bool has_item_type() const;
  inline void clear_item_type();
  static const int kItemTypeFieldNumber = 1;
  inline const ::QuoteProto::RFMGropeTypesReqItem& item_type() const;
  inline ::QuoteProto::RFMGropeTypesReqItem* mutable_item_type();
  inline ::QuoteProto::RFMGropeTypesReqItem* release_item_type();
  
  // required .QuoteProto.RateMsg msg = 2;
  inline bool has_msg() const;
  inline void clear_msg();
  static const int kMsgFieldNumber = 2;
  inline const ::QuoteProto::RateMsg& msg() const;
  inline ::QuoteProto::RateMsg* mutable_msg();
  inline ::QuoteProto::RateMsg* release_msg();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMGropeTypesResItem)
 private:
  inline void set_has_item_type();
  inline void clear_has_item_type();
  inline void set_has_msg();
  inline void clear_has_msg();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::RFMGropeTypesReqItem* item_type_;
  ::QuoteProto::RateMsg* msg_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMGropeTypesResItem* default_instance_;
};
// -------------------------------------------------------------------

class RFMGroupTypesResponse : public ::google::protobuf::Message {
 public:
  RFMGroupTypesResponse();
  virtual ~RFMGroupTypesResponse();
  
  RFMGroupTypesResponse(const RFMGroupTypesResponse& from);
  
  inline RFMGroupTypesResponse& operator=(const RFMGroupTypesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RFMGroupTypesResponse& default_instance();
  
  void Swap(RFMGroupTypesResponse* other);
  
  // implements Message ----------------------------------------------
  
  RFMGroupTypesResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RFMGroupTypesResponse& from);
  void MergeFrom(const RFMGroupTypesResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.RFMGropeTypesResItem items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::QuoteProto::RFMGropeTypesResItem& items(int index) const;
  inline ::QuoteProto::RFMGropeTypesResItem* mutable_items(int index);
  inline ::QuoteProto::RFMGropeTypesResItem* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesResItem >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesResItem >*
      mutable_items();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.RFMGroupTypesResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesResItem > items_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_AssignDesc_rise_5ffall_5fmonitor_2eproto();
  friend void protobuf_ShutdownFile_rise_5ffall_5fmonitor_2eproto();
  
  void InitAsDefaultInstance();
  static RFMGroupTypesResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// RFMonitorNumInfoOptionalRequest

// -------------------------------------------------------------------

// RFMonitorNumInfoOptionalResponse

// optional .QuoteProto.Ret ret = 1;
inline bool RFMonitorNumInfoOptionalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RFMonitorNumInfoOptionalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RFMonitorNumInfoOptionalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RFMonitorNumInfoOptionalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& RFMonitorNumInfoOptionalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* RFMonitorNumInfoOptionalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* RFMonitorNumInfoOptionalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional .QuoteProto.RiseFallMonitorNumMsg msg = 2;
inline bool RFMonitorNumInfoOptionalResponse::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RFMonitorNumInfoOptionalResponse::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RFMonitorNumInfoOptionalResponse::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RFMonitorNumInfoOptionalResponse::clear_msg() {
  if (msg_ != NULL) msg_->::QuoteProto::RiseFallMonitorNumMsg::Clear();
  clear_has_msg();
}
inline const ::QuoteProto::RiseFallMonitorNumMsg& RFMonitorNumInfoOptionalResponse::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::QuoteProto::RiseFallMonitorNumMsg* RFMonitorNumInfoOptionalResponse::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::QuoteProto::RiseFallMonitorNumMsg;
  return msg_;
}
inline ::QuoteProto::RiseFallMonitorNumMsg* RFMonitorNumInfoOptionalResponse::release_msg() {
  clear_has_msg();
  ::QuoteProto::RiseFallMonitorNumMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BatchRFMonitorRequest

// required .QuoteProto.RFMonitorType m_type = 1;
inline bool BatchRFMonitorRequest::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchRFMonitorRequest::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchRFMonitorRequest::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchRFMonitorRequest::clear_m_type() {
  m_type_ = 1;
  clear_has_m_type();
}
inline QuoteProto::RFMonitorType BatchRFMonitorRequest::m_type() const {
  return static_cast< QuoteProto::RFMonitorType >(m_type_);
}
inline void BatchRFMonitorRequest::set_m_type(QuoteProto::RFMonitorType value) {
  GOOGLE_DCHECK(QuoteProto::RFMonitorType_IsValid(value));
  set_has_m_type();
  m_type_ = value;
}

// required .QuoteProto.RiseFallMSortType sort_type = 2;
inline bool BatchRFMonitorRequest::has_sort_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchRFMonitorRequest::set_has_sort_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchRFMonitorRequest::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchRFMonitorRequest::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline QuoteProto::RiseFallMSortType BatchRFMonitorRequest::sort_type() const {
  return static_cast< QuoteProto::RiseFallMSortType >(sort_type_);
}
inline void BatchRFMonitorRequest::set_sort_type(QuoteProto::RiseFallMSortType value) {
  GOOGLE_DCHECK(QuoteProto::RiseFallMSortType_IsValid(value));
  set_has_sort_type();
  sort_type_ = value;
}

// required bool is_desc = 3;
inline bool BatchRFMonitorRequest::has_is_desc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void BatchRFMonitorRequest::set_has_is_desc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void BatchRFMonitorRequest::clear_has_is_desc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void BatchRFMonitorRequest::clear_is_desc() {
  is_desc_ = false;
  clear_has_is_desc();
}
inline bool BatchRFMonitorRequest::is_desc() const {
  return is_desc_;
}
inline void BatchRFMonitorRequest::set_is_desc(bool value) {
  set_has_is_desc();
  is_desc_ = value;
}

// required int32 index = 4;
inline bool BatchRFMonitorRequest::has_index() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void BatchRFMonitorRequest::set_has_index() {
  _has_bits_[0] |= 0x00000008u;
}
inline void BatchRFMonitorRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void BatchRFMonitorRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 BatchRFMonitorRequest::index() const {
  return index_;
}
inline void BatchRFMonitorRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required int32 count_range = 5;
inline bool BatchRFMonitorRequest::has_count_range() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void BatchRFMonitorRequest::set_has_count_range() {
  _has_bits_[0] |= 0x00000010u;
}
inline void BatchRFMonitorRequest::clear_has_count_range() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void BatchRFMonitorRequest::clear_count_range() {
  count_range_ = 0;
  clear_has_count_range();
}
inline ::google::protobuf::int32 BatchRFMonitorRequest::count_range() const {
  return count_range_;
}
inline void BatchRFMonitorRequest::set_count_range(::google::protobuf::int32 value) {
  set_has_count_range();
  count_range_ = value;
}

// optional .QuoteProto.MsgMask msg_mask = 6;
inline bool BatchRFMonitorRequest::has_msg_mask() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void BatchRFMonitorRequest::set_has_msg_mask() {
  _has_bits_[0] |= 0x00000020u;
}
inline void BatchRFMonitorRequest::clear_has_msg_mask() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void BatchRFMonitorRequest::clear_msg_mask() {
  if (msg_mask_ != NULL) msg_mask_->::QuoteProto::MsgMask::Clear();
  clear_has_msg_mask();
}
inline const ::QuoteProto::MsgMask& BatchRFMonitorRequest::msg_mask() const {
  return msg_mask_ != NULL ? *msg_mask_ : *default_instance_->msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchRFMonitorRequest::mutable_msg_mask() {
  set_has_msg_mask();
  if (msg_mask_ == NULL) msg_mask_ = new ::QuoteProto::MsgMask;
  return msg_mask_;
}
inline ::QuoteProto::MsgMask* BatchRFMonitorRequest::release_msg_mask() {
  clear_has_msg_mask();
  ::QuoteProto::MsgMask* temp = msg_mask_;
  msg_mask_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// BatchRFMonitorResponse

// optional .QuoteProto.Ret ret = 1;
inline bool BatchRFMonitorResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchRFMonitorResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchRFMonitorResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchRFMonitorResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchRFMonitorResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchRFMonitorResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchRFMonitorResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// optional int32 total_cnt = 2;
inline bool BatchRFMonitorResponse::has_total_cnt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchRFMonitorResponse::set_has_total_cnt() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchRFMonitorResponse::clear_has_total_cnt() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchRFMonitorResponse::clear_total_cnt() {
  total_cnt_ = 0;
  clear_has_total_cnt();
}
inline ::google::protobuf::int32 BatchRFMonitorResponse::total_cnt() const {
  return total_cnt_;
}
inline void BatchRFMonitorResponse::set_total_cnt(::google::protobuf::int32 value) {
  set_has_total_cnt();
  total_cnt_ = value;
}

// repeated .QuoteProto.RateMsg stk = 3;
inline int BatchRFMonitorResponse::stk_size() const {
  return stk_.size();
}
inline void BatchRFMonitorResponse::clear_stk() {
  stk_.Clear();
}
inline const ::QuoteProto::RateMsg& BatchRFMonitorResponse::stk(int index) const {
  return stk_.Get(index);
}
inline ::QuoteProto::RateMsg* BatchRFMonitorResponse::mutable_stk(int index) {
  return stk_.Mutable(index);
}
inline ::QuoteProto::RateMsg* BatchRFMonitorResponse::add_stk() {
  return stk_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RateMsg >&
BatchRFMonitorResponse::stk() const {
  return stk_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RateMsg >*
BatchRFMonitorResponse::mutable_stk() {
  return &stk_;
}

// -------------------------------------------------------------------

// RFMGropeTypesReqItem

// required .QuoteProto.RFMonitorType m_type = 1;
inline bool RFMGropeTypesReqItem::has_m_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RFMGropeTypesReqItem::set_has_m_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RFMGropeTypesReqItem::clear_has_m_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RFMGropeTypesReqItem::clear_m_type() {
  m_type_ = 1;
  clear_has_m_type();
}
inline QuoteProto::RFMonitorType RFMGropeTypesReqItem::m_type() const {
  return static_cast< QuoteProto::RFMonitorType >(m_type_);
}
inline void RFMGropeTypesReqItem::set_m_type(QuoteProto::RFMonitorType value) {
  GOOGLE_DCHECK(QuoteProto::RFMonitorType_IsValid(value));
  set_has_m_type();
  m_type_ = value;
}

// required .QuoteProto.RiseFallMSortType sort_type = 2;
inline bool RFMGropeTypesReqItem::has_sort_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RFMGropeTypesReqItem::set_has_sort_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RFMGropeTypesReqItem::clear_has_sort_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RFMGropeTypesReqItem::clear_sort_type() {
  sort_type_ = 0;
  clear_has_sort_type();
}
inline QuoteProto::RiseFallMSortType RFMGropeTypesReqItem::sort_type() const {
  return static_cast< QuoteProto::RiseFallMSortType >(sort_type_);
}
inline void RFMGropeTypesReqItem::set_sort_type(QuoteProto::RiseFallMSortType value) {
  GOOGLE_DCHECK(QuoteProto::RiseFallMSortType_IsValid(value));
  set_has_sort_type();
  sort_type_ = value;
}

// -------------------------------------------------------------------

// RFMGroupTypesRequest

// repeated .QuoteProto.RFMGropeTypesReqItem item_types = 1;
inline int RFMGroupTypesRequest::item_types_size() const {
  return item_types_.size();
}
inline void RFMGroupTypesRequest::clear_item_types() {
  item_types_.Clear();
}
inline const ::QuoteProto::RFMGropeTypesReqItem& RFMGroupTypesRequest::item_types(int index) const {
  return item_types_.Get(index);
}
inline ::QuoteProto::RFMGropeTypesReqItem* RFMGroupTypesRequest::mutable_item_types(int index) {
  return item_types_.Mutable(index);
}
inline ::QuoteProto::RFMGropeTypesReqItem* RFMGroupTypesRequest::add_item_types() {
  return item_types_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesReqItem >&
RFMGroupTypesRequest::item_types() const {
  return item_types_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesReqItem >*
RFMGroupTypesRequest::mutable_item_types() {
  return &item_types_;
}

// -------------------------------------------------------------------

// RFMGropeTypesResItem

// required .QuoteProto.RFMGropeTypesReqItem item_type = 1;
inline bool RFMGropeTypesResItem::has_item_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RFMGropeTypesResItem::set_has_item_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RFMGropeTypesResItem::clear_has_item_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RFMGropeTypesResItem::clear_item_type() {
  if (item_type_ != NULL) item_type_->::QuoteProto::RFMGropeTypesReqItem::Clear();
  clear_has_item_type();
}
inline const ::QuoteProto::RFMGropeTypesReqItem& RFMGropeTypesResItem::item_type() const {
  return item_type_ != NULL ? *item_type_ : *default_instance_->item_type_;
}
inline ::QuoteProto::RFMGropeTypesReqItem* RFMGropeTypesResItem::mutable_item_type() {
  set_has_item_type();
  if (item_type_ == NULL) item_type_ = new ::QuoteProto::RFMGropeTypesReqItem;
  return item_type_;
}
inline ::QuoteProto::RFMGropeTypesReqItem* RFMGropeTypesResItem::release_item_type() {
  clear_has_item_type();
  ::QuoteProto::RFMGropeTypesReqItem* temp = item_type_;
  item_type_ = NULL;
  return temp;
}

// required .QuoteProto.RateMsg msg = 2;
inline bool RFMGropeTypesResItem::has_msg() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RFMGropeTypesResItem::set_has_msg() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RFMGropeTypesResItem::clear_has_msg() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RFMGropeTypesResItem::clear_msg() {
  if (msg_ != NULL) msg_->::QuoteProto::RateMsg::Clear();
  clear_has_msg();
}
inline const ::QuoteProto::RateMsg& RFMGropeTypesResItem::msg() const {
  return msg_ != NULL ? *msg_ : *default_instance_->msg_;
}
inline ::QuoteProto::RateMsg* RFMGropeTypesResItem::mutable_msg() {
  set_has_msg();
  if (msg_ == NULL) msg_ = new ::QuoteProto::RateMsg;
  return msg_;
}
inline ::QuoteProto::RateMsg* RFMGropeTypesResItem::release_msg() {
  clear_has_msg();
  ::QuoteProto::RateMsg* temp = msg_;
  msg_ = NULL;
  return temp;
}

// -------------------------------------------------------------------

// RFMGroupTypesResponse

// optional .QuoteProto.Ret ret = 1;
inline bool RFMGroupTypesResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RFMGroupTypesResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RFMGroupTypesResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RFMGroupTypesResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& RFMGroupTypesResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* RFMGroupTypesResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* RFMGroupTypesResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.RFMGropeTypesResItem items = 2;
inline int RFMGroupTypesResponse::items_size() const {
  return items_.size();
}
inline void RFMGroupTypesResponse::clear_items() {
  items_.Clear();
}
inline const ::QuoteProto::RFMGropeTypesResItem& RFMGroupTypesResponse::items(int index) const {
  return items_.Get(index);
}
inline ::QuoteProto::RFMGropeTypesResItem* RFMGroupTypesResponse::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::QuoteProto::RFMGropeTypesResItem* RFMGroupTypesResponse::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesResItem >&
RFMGroupTypesResponse::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::RFMGropeTypesResItem >*
RFMGroupTypesResponse::mutable_items() {
  return &items_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::RiseFallMSortType>() {
  return QuoteProto::RiseFallMSortType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rise_5ffall_5fmonitor_2eproto__INCLUDED
