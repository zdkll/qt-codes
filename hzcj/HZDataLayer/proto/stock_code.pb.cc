// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "stock_code.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QuoteProto {

namespace {

const ::google::protobuf::Descriptor* GetStockCodeRequest_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStockCodeRequest_reflection_ = NULL;
const ::google::protobuf::Descriptor* GetStockCodeResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  GetStockCodeResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_stock_5fcode_2eproto() {
  protobuf_AddDesc_stock_5fcode_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "stock_code.proto");
  GOOGLE_CHECK(file != NULL);
  GetStockCodeRequest_descriptor_ = file->message_type(0);
  static const int GetStockCodeRequest_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeRequest, markets_code_),
  };
  GetStockCodeRequest_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStockCodeRequest_descriptor_,
      GetStockCodeRequest::default_instance_,
      GetStockCodeRequest_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeRequest, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeRequest, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStockCodeRequest));
  GetStockCodeResponse_descriptor_ = file->message_type(1);
  static const int GetStockCodeResponse_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeResponse, ret_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeResponse, codes_table_),
  };
  GetStockCodeResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      GetStockCodeResponse_descriptor_,
      GetStockCodeResponse::default_instance_,
      GetStockCodeResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GetStockCodeResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(GetStockCodeResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_stock_5fcode_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStockCodeRequest_descriptor_, &GetStockCodeRequest::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    GetStockCodeResponse_descriptor_, &GetStockCodeResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_stock_5fcode_2eproto() {
  delete GetStockCodeRequest::default_instance_;
  delete GetStockCodeRequest_reflection_;
  delete GetStockCodeResponse::default_instance_;
  delete GetStockCodeResponse_reflection_;
}

void protobuf_AddDesc_stock_5fcode_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::QuoteProto::protobuf_AddDesc_ret_5fbase_2eproto();
  ::QuoteProto::protobuf_AddDesc_public_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020stock_code.proto\022\nQuoteProto\032\016ret_base"
    ".proto\032\024public_message.proto\"+\n\023GetStock"
    "CodeRequest\022\024\n\014markets_code\030\001 \002(\t\"e\n\024Get"
    "StockCodeResponse\022\034\n\003ret\030\001 \002(\0132\017.QuotePr"
    "oto.Ret\022/\n\013codes_table\030\003 \003(\0132\032.QuoteProt"
    "o.StockCodeTable", 216);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stock_code.proto", &protobuf_RegisterTypes);
  GetStockCodeRequest::default_instance_ = new GetStockCodeRequest();
  GetStockCodeResponse::default_instance_ = new GetStockCodeResponse();
  GetStockCodeRequest::default_instance_->InitAsDefaultInstance();
  GetStockCodeResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_stock_5fcode_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_stock_5fcode_2eproto {
  StaticDescriptorInitializer_stock_5fcode_2eproto() {
    protobuf_AddDesc_stock_5fcode_2eproto();
  }
} static_descriptor_initializer_stock_5fcode_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int GetStockCodeRequest::kMarketsCodeFieldNumber;
#endif  // !_MSC_VER

GetStockCodeRequest::GetStockCodeRequest()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetStockCodeRequest::InitAsDefaultInstance() {
}

GetStockCodeRequest::GetStockCodeRequest(const GetStockCodeRequest& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetStockCodeRequest::SharedCtor() {
  _cached_size_ = 0;
  markets_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStockCodeRequest::~GetStockCodeRequest() {
  SharedDtor();
}

void GetStockCodeRequest::SharedDtor() {
  if (markets_code_ != &::google::protobuf::internal::kEmptyString) {
    delete markets_code_;
  }
  if (this != default_instance_) {
  }
}

void GetStockCodeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStockCodeRequest::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStockCodeRequest_descriptor_;
}

const GetStockCodeRequest& GetStockCodeRequest::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stock_5fcode_2eproto();  return *default_instance_;
}

GetStockCodeRequest* GetStockCodeRequest::default_instance_ = NULL;

GetStockCodeRequest* GetStockCodeRequest::New() const {
  return new GetStockCodeRequest;
}

void GetStockCodeRequest::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_markets_code()) {
      if (markets_code_ != &::google::protobuf::internal::kEmptyString) {
        markets_code_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStockCodeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string markets_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_markets_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->markets_code().data(), this->markets_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetStockCodeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string markets_code = 1;
  if (has_markets_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->markets_code().data(), this->markets_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->markets_code(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetStockCodeRequest::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string markets_code = 1;
  if (has_markets_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->markets_code().data(), this->markets_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->markets_code(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetStockCodeRequest::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string markets_code = 1;
    if (has_markets_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->markets_code());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStockCodeRequest::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStockCodeRequest* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStockCodeRequest*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStockCodeRequest::MergeFrom(const GetStockCodeRequest& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_markets_code()) {
      set_markets_code(from.markets_code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStockCodeRequest::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStockCodeRequest::CopyFrom(const GetStockCodeRequest& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStockCodeRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void GetStockCodeRequest::Swap(GetStockCodeRequest* other) {
  if (other != this) {
    std::swap(markets_code_, other->markets_code_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStockCodeRequest::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStockCodeRequest_descriptor_;
  metadata.reflection = GetStockCodeRequest_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int GetStockCodeResponse::kRetFieldNumber;
const int GetStockCodeResponse::kCodesTableFieldNumber;
#endif  // !_MSC_VER

GetStockCodeResponse::GetStockCodeResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void GetStockCodeResponse::InitAsDefaultInstance() {
  ret_ = const_cast< ::QuoteProto::Ret*>(&::QuoteProto::Ret::default_instance());
}

GetStockCodeResponse::GetStockCodeResponse(const GetStockCodeResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void GetStockCodeResponse::SharedCtor() {
  _cached_size_ = 0;
  ret_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

GetStockCodeResponse::~GetStockCodeResponse() {
  SharedDtor();
}

void GetStockCodeResponse::SharedDtor() {
  if (this != default_instance_) {
    delete ret_;
  }
}

void GetStockCodeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GetStockCodeResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return GetStockCodeResponse_descriptor_;
}

const GetStockCodeResponse& GetStockCodeResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_stock_5fcode_2eproto();  return *default_instance_;
}

GetStockCodeResponse* GetStockCodeResponse::default_instance_ = NULL;

GetStockCodeResponse* GetStockCodeResponse::New() const {
  return new GetStockCodeResponse;
}

void GetStockCodeResponse::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_ret()) {
      if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
    }
  }
  codes_table_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool GetStockCodeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .QuoteProto.Ret ret = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ret()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_codes_table;
        break;
      }
      
      // repeated .QuoteProto.StockCodeTable codes_table = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_codes_table:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_codes_table()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_codes_table;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void GetStockCodeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .QuoteProto.Ret ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ret(), output);
  }
  
  // repeated .QuoteProto.StockCodeTable codes_table = 3;
  for (int i = 0; i < this->codes_table_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->codes_table(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* GetStockCodeResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .QuoteProto.Ret ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ret(), target);
  }
  
  // repeated .QuoteProto.StockCodeTable codes_table = 3;
  for (int i = 0; i < this->codes_table_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->codes_table(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int GetStockCodeResponse::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .QuoteProto.Ret ret = 1;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->ret());
    }
    
  }
  // repeated .QuoteProto.StockCodeTable codes_table = 3;
  total_size += 1 * this->codes_table_size();
  for (int i = 0; i < this->codes_table_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->codes_table(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GetStockCodeResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const GetStockCodeResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const GetStockCodeResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void GetStockCodeResponse::MergeFrom(const GetStockCodeResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  codes_table_.MergeFrom(from.codes_table_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ret()) {
      mutable_ret()->::QuoteProto::Ret::MergeFrom(from.ret());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void GetStockCodeResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStockCodeResponse::CopyFrom(const GetStockCodeResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStockCodeResponse::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_ret()) {
    if (!this->ret().IsInitialized()) return false;
  }
  for (int i = 0; i < codes_table_size(); i++) {
    if (!this->codes_table(i).IsInitialized()) return false;
  }
  return true;
}

void GetStockCodeResponse::Swap(GetStockCodeResponse* other) {
  if (other != this) {
    std::swap(ret_, other->ret_);
    codes_table_.Swap(&other->codes_table_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata GetStockCodeResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = GetStockCodeResponse_descriptor_;
  metadata.reflection = GetStockCodeResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

// @@protoc_insertion_point(global_scope)
