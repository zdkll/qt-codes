// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mid_abnormal.proto

#ifndef PROTOBUF_mid_5fabnormal_2eproto__INCLUDED
#define PROTOBUF_mid_5fabnormal_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mid_5fabnormal_2eproto();
void protobuf_AssignDesc_mid_5fabnormal_2eproto();
void protobuf_ShutdownFile_mid_5fabnormal_2eproto();

class MidAbnormalRequest;
class MidAbnormalResponse;
class BatchMidAbnormalRequest;
class BatchMidAbnormalResponse;

// ===================================================================

class MidAbnormalRequest : public ::google::protobuf::Message {
 public:
  MidAbnormalRequest();
  virtual ~MidAbnormalRequest();
  
  MidAbnormalRequest(const MidAbnormalRequest& from);
  
  inline MidAbnormalRequest& operator=(const MidAbnormalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MidAbnormalRequest& default_instance();
  
  void Swap(MidAbnormalRequest* other);
  
  // implements Message ----------------------------------------------
  
  MidAbnormalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MidAbnormalRequest& from);
  void MergeFrom(const MidAbnormalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required string stock_code = 2;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 2;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // required uint32 count = 4;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 4;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // optional uint32 direction = 5;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 5;
  inline ::google::protobuf::uint32 direction() const;
  inline void set_direction(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MidAbnormalRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_direction();
  inline void clear_has_direction();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::uint32 direction_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void  protobuf_AddDesc_mid_5fabnormal_2eproto();
  friend void protobuf_AssignDesc_mid_5fabnormal_2eproto();
  friend void protobuf_ShutdownFile_mid_5fabnormal_2eproto();
  
  void InitAsDefaultInstance();
  static MidAbnormalRequest* default_instance_;
};
// -------------------------------------------------------------------

class MidAbnormalResponse : public ::google::protobuf::Message {
 public:
  MidAbnormalResponse();
  virtual ~MidAbnormalResponse();
  
  MidAbnormalResponse(const MidAbnormalResponse& from);
  
  inline MidAbnormalResponse& operator=(const MidAbnormalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MidAbnormalResponse& default_instance();
  
  void Swap(MidAbnormalResponse* other);
  
  // implements Message ----------------------------------------------
  
  MidAbnormalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MidAbnormalResponse& from);
  void MergeFrom(const MidAbnormalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.MidAbnormalMsg ab_infos = 2;
  inline int ab_infos_size() const;
  inline void clear_ab_infos();
  static const int kAbInfosFieldNumber = 2;
  inline const ::QuoteProto::MidAbnormalMsg& ab_infos(int index) const;
  inline ::QuoteProto::MidAbnormalMsg* mutable_ab_infos(int index);
  inline ::QuoteProto::MidAbnormalMsg* add_ab_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >&
      ab_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >*
      mutable_ab_infos();
  
  // required uint32 total_count = 3;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 3;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.MidAbnormalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg > ab_infos_;
  ::google::protobuf::uint32 total_count_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_mid_5fabnormal_2eproto();
  friend void protobuf_AssignDesc_mid_5fabnormal_2eproto();
  friend void protobuf_ShutdownFile_mid_5fabnormal_2eproto();
  
  void InitAsDefaultInstance();
  static MidAbnormalResponse* default_instance_;
};
// -------------------------------------------------------------------

class BatchMidAbnormalRequest : public ::google::protobuf::Message {
 public:
  BatchMidAbnormalRequest();
  virtual ~BatchMidAbnormalRequest();
  
  BatchMidAbnormalRequest(const BatchMidAbnormalRequest& from);
  
  inline BatchMidAbnormalRequest& operator=(const BatchMidAbnormalRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchMidAbnormalRequest& default_instance();
  
  void Swap(BatchMidAbnormalRequest* other);
  
  // implements Message ----------------------------------------------
  
  BatchMidAbnormalRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchMidAbnormalRequest& from);
  void MergeFrom(const BatchMidAbnormalRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // required uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);
  
  // repeated string stock_codes = 3;
  inline int stock_codes_size() const;
  inline void clear_stock_codes();
  static const int kStockCodesFieldNumber = 3;
  inline const ::std::string& stock_codes(int index) const;
  inline ::std::string* mutable_stock_codes(int index);
  inline void set_stock_codes(int index, const ::std::string& value);
  inline void set_stock_codes(int index, const char* value);
  inline void set_stock_codes(int index, const char* value, size_t size);
  inline ::std::string* add_stock_codes();
  inline void add_stock_codes(const ::std::string& value);
  inline void add_stock_codes(const char* value);
  inline void add_stock_codes(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& stock_codes() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_stock_codes();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchMidAbnormalRequest)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_count();
  inline void clear_has_count();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 count_;
  ::google::protobuf::RepeatedPtrField< ::std::string> stock_codes_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_mid_5fabnormal_2eproto();
  friend void protobuf_AssignDesc_mid_5fabnormal_2eproto();
  friend void protobuf_ShutdownFile_mid_5fabnormal_2eproto();
  
  void InitAsDefaultInstance();
  static BatchMidAbnormalRequest* default_instance_;
};
// -------------------------------------------------------------------

class BatchMidAbnormalResponse : public ::google::protobuf::Message {
 public:
  BatchMidAbnormalResponse();
  virtual ~BatchMidAbnormalResponse();
  
  BatchMidAbnormalResponse(const BatchMidAbnormalResponse& from);
  
  inline BatchMidAbnormalResponse& operator=(const BatchMidAbnormalResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchMidAbnormalResponse& default_instance();
  
  void Swap(BatchMidAbnormalResponse* other);
  
  // implements Message ----------------------------------------------
  
  BatchMidAbnormalResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const BatchMidAbnormalResponse& from);
  void MergeFrom(const BatchMidAbnormalResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.MidAbnormalMsg ab_infos = 2;
  inline int ab_infos_size() const;
  inline void clear_ab_infos();
  static const int kAbInfosFieldNumber = 2;
  inline const ::QuoteProto::MidAbnormalMsg& ab_infos(int index) const;
  inline ::QuoteProto::MidAbnormalMsg* mutable_ab_infos(int index);
  inline ::QuoteProto::MidAbnormalMsg* add_ab_infos();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >&
      ab_infos() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >*
      mutable_ab_infos();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.BatchMidAbnormalResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg > ab_infos_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_mid_5fabnormal_2eproto();
  friend void protobuf_AssignDesc_mid_5fabnormal_2eproto();
  friend void protobuf_ShutdownFile_mid_5fabnormal_2eproto();
  
  void InitAsDefaultInstance();
  static BatchMidAbnormalResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MidAbnormalRequest

// required uint32 type = 1;
inline bool MidAbnormalRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MidAbnormalRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MidAbnormalRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MidAbnormalRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 MidAbnormalRequest::type() const {
  return type_;
}
inline void MidAbnormalRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required string stock_code = 2;
inline bool MidAbnormalRequest::has_stock_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MidAbnormalRequest::set_has_stock_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MidAbnormalRequest::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MidAbnormalRequest::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& MidAbnormalRequest::stock_code() const {
  return *stock_code_;
}
inline void MidAbnormalRequest::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void MidAbnormalRequest::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void MidAbnormalRequest::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* MidAbnormalRequest::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* MidAbnormalRequest::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// required int32 index = 3;
inline bool MidAbnormalRequest::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MidAbnormalRequest::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MidAbnormalRequest::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MidAbnormalRequest::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 MidAbnormalRequest::index() const {
  return index_;
}
inline void MidAbnormalRequest::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
}

// required uint32 count = 4;
inline bool MidAbnormalRequest::has_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MidAbnormalRequest::set_has_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MidAbnormalRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MidAbnormalRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 MidAbnormalRequest::count() const {
  return count_;
}
inline void MidAbnormalRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// optional uint32 direction = 5;
inline bool MidAbnormalRequest::has_direction() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MidAbnormalRequest::set_has_direction() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MidAbnormalRequest::clear_has_direction() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MidAbnormalRequest::clear_direction() {
  direction_ = 0u;
  clear_has_direction();
}
inline ::google::protobuf::uint32 MidAbnormalRequest::direction() const {
  return direction_;
}
inline void MidAbnormalRequest::set_direction(::google::protobuf::uint32 value) {
  set_has_direction();
  direction_ = value;
}

// -------------------------------------------------------------------

// MidAbnormalResponse

// required .QuoteProto.Ret ret = 1;
inline bool MidAbnormalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MidAbnormalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MidAbnormalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MidAbnormalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& MidAbnormalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* MidAbnormalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* MidAbnormalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.MidAbnormalMsg ab_infos = 2;
inline int MidAbnormalResponse::ab_infos_size() const {
  return ab_infos_.size();
}
inline void MidAbnormalResponse::clear_ab_infos() {
  ab_infos_.Clear();
}
inline const ::QuoteProto::MidAbnormalMsg& MidAbnormalResponse::ab_infos(int index) const {
  return ab_infos_.Get(index);
}
inline ::QuoteProto::MidAbnormalMsg* MidAbnormalResponse::mutable_ab_infos(int index) {
  return ab_infos_.Mutable(index);
}
inline ::QuoteProto::MidAbnormalMsg* MidAbnormalResponse::add_ab_infos() {
  return ab_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >&
MidAbnormalResponse::ab_infos() const {
  return ab_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >*
MidAbnormalResponse::mutable_ab_infos() {
  return &ab_infos_;
}

// required uint32 total_count = 3;
inline bool MidAbnormalResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MidAbnormalResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MidAbnormalResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MidAbnormalResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 MidAbnormalResponse::total_count() const {
  return total_count_;
}
inline void MidAbnormalResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
}

// -------------------------------------------------------------------

// BatchMidAbnormalRequest

// required uint32 type = 1;
inline bool BatchMidAbnormalRequest::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchMidAbnormalRequest::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchMidAbnormalRequest::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchMidAbnormalRequest::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 BatchMidAbnormalRequest::type() const {
  return type_;
}
inline void BatchMidAbnormalRequest::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
}

// required uint32 count = 2;
inline bool BatchMidAbnormalRequest::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchMidAbnormalRequest::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchMidAbnormalRequest::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchMidAbnormalRequest::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 BatchMidAbnormalRequest::count() const {
  return count_;
}
inline void BatchMidAbnormalRequest::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
}

// repeated string stock_codes = 3;
inline int BatchMidAbnormalRequest::stock_codes_size() const {
  return stock_codes_.size();
}
inline void BatchMidAbnormalRequest::clear_stock_codes() {
  stock_codes_.Clear();
}
inline const ::std::string& BatchMidAbnormalRequest::stock_codes(int index) const {
  return stock_codes_.Get(index);
}
inline ::std::string* BatchMidAbnormalRequest::mutable_stock_codes(int index) {
  return stock_codes_.Mutable(index);
}
inline void BatchMidAbnormalRequest::set_stock_codes(int index, const ::std::string& value) {
  stock_codes_.Mutable(index)->assign(value);
}
inline void BatchMidAbnormalRequest::set_stock_codes(int index, const char* value) {
  stock_codes_.Mutable(index)->assign(value);
}
inline void BatchMidAbnormalRequest::set_stock_codes(int index, const char* value, size_t size) {
  stock_codes_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* BatchMidAbnormalRequest::add_stock_codes() {
  return stock_codes_.Add();
}
inline void BatchMidAbnormalRequest::add_stock_codes(const ::std::string& value) {
  stock_codes_.Add()->assign(value);
}
inline void BatchMidAbnormalRequest::add_stock_codes(const char* value) {
  stock_codes_.Add()->assign(value);
}
inline void BatchMidAbnormalRequest::add_stock_codes(const char* value, size_t size) {
  stock_codes_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
BatchMidAbnormalRequest::stock_codes() const {
  return stock_codes_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
BatchMidAbnormalRequest::mutable_stock_codes() {
  return &stock_codes_;
}

// -------------------------------------------------------------------

// BatchMidAbnormalResponse

// required .QuoteProto.Ret ret = 1;
inline bool BatchMidAbnormalResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchMidAbnormalResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchMidAbnormalResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchMidAbnormalResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& BatchMidAbnormalResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* BatchMidAbnormalResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* BatchMidAbnormalResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.MidAbnormalMsg ab_infos = 2;
inline int BatchMidAbnormalResponse::ab_infos_size() const {
  return ab_infos_.size();
}
inline void BatchMidAbnormalResponse::clear_ab_infos() {
  ab_infos_.Clear();
}
inline const ::QuoteProto::MidAbnormalMsg& BatchMidAbnormalResponse::ab_infos(int index) const {
  return ab_infos_.Get(index);
}
inline ::QuoteProto::MidAbnormalMsg* BatchMidAbnormalResponse::mutable_ab_infos(int index) {
  return ab_infos_.Mutable(index);
}
inline ::QuoteProto::MidAbnormalMsg* BatchMidAbnormalResponse::add_ab_infos() {
  return ab_infos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >&
BatchMidAbnormalResponse::ab_infos() const {
  return ab_infos_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MidAbnormalMsg >*
BatchMidAbnormalResponse::mutable_ab_infos() {
  return &ab_infos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mid_5fabnormal_2eproto__INCLUDED
