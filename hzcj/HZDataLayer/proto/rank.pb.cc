// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rank.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace QuoteProto {

namespace {

const ::google::protobuf::Descriptor* RankFeild_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RankFeild_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockFeild_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockFeild_reflection_ = NULL;
const ::google::protobuf::Descriptor* StockInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StockInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BlockInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BlockInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FundInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FundInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* BidBlockInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  BidBlockInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* FundAbnormalInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FundAbnormalInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* RateInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  RateInfo_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_rank_2eproto() {
  protobuf_AddDesc_rank_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "rank.proto");
  GOOGLE_CHECK(file != NULL);
  RankFeild_descriptor_ = file->message_type(0);
  static const int RankFeild_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankFeild, security_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankFeild, number_),
  };
  RankFeild_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RankFeild_descriptor_,
      RankFeild::default_instance_,
      RankFeild_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankFeild, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RankFeild, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RankFeild));
  BlockFeild_descriptor_ = file->message_type(1);
  static const int BlockFeild_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockFeild, block_code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockFeild, number_),
  };
  BlockFeild_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockFeild_descriptor_,
      BlockFeild::default_instance_,
      BlockFeild_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockFeild, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockFeild, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockFeild));
  StockInfo_descriptor_ = file->message_type(2);
  static const int StockInfo_offsets_[37] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, quote_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, highest_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, lowest_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, last_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, averag_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, rise_fall_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, rise_fall_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, bid_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, ask_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, cur_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, turnover_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, pre_close_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, open_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, pes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, np_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, wp_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, committee_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, buy_sell_buy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, pbv_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, tot_stock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, cir_stock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, tot_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, cir_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, nwp_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, sa_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, speed_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, three_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, five_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, three_tuv_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, five_tuv_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, ped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, rise_fall_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, security_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, year_rate_),
  };
  StockInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StockInfo_descriptor_,
      StockInfo::default_instance_,
      StockInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StockInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StockInfo));
  BlockInfo_descriptor_ = file->message_type(3);
  static const int BlockInfo_offsets_[19] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, quote_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, block_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, up_down_ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, turnover_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, tot_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, cir_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, avg_stock_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, rise_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, fall_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, speed_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, three_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, five_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, three_tuv_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, five_tuv_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, rise_day_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, block_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, year_rate_),
  };
  BlockInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BlockInfo_descriptor_,
      BlockInfo::default_instance_,
      BlockInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BlockInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BlockInfo));
  FundInfo_descriptor_ = file->message_type(4);
  static const int FundInfo_offsets_[29] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, money_info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, last_price_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, auction_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, leader_money_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, leader_money_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, leader_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, leader_money_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, maxord_money_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, maxord_money_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, maxord_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, maxord_money_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, bigord_money_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, bigord_money_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, bigord_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, bigord_money_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, midord_money_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, midord_money_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, midord_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, midord_money_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, minord_money_input_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, minord_money_output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, minord_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, minord_money_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, three_leader_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, five_leader_money_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, auction_turnover_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, security_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, up_down_price_),
  };
  FundInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FundInfo_descriptor_,
      FundInfo::default_instance_,
      FundInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FundInfo));
  BidInfo_descriptor_ = file->message_type(5);
  static const int BidInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, bid_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, fund_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, quantity_than_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, bidding_rise_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, yesterday_rate_),
  };
  BidInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidInfo_descriptor_,
      BidInfo::default_instance_,
      BidInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidInfo));
  BidBlockInfo_descriptor_ = file->message_type(6);
  static const int BidBlockInfo_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidBlockInfo, bid_block_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidBlockInfo, rate_),
  };
  BidBlockInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      BidBlockInfo_descriptor_,
      BidBlockInfo::default_instance_,
      BidBlockInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidBlockInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BidBlockInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(BidBlockInfo));
  FundAbnormalInfo_descriptor_ = file->message_type(7);
  static const int FundAbnormalInfo_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, abnormal_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, thirty_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, active_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, thirty_active_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, leader_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, avtive_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, leader_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, turnover_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, ratio_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, cir_value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, ped_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, three_avtive_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, three_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, five_avtive_netput_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, five_rate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, security_name_),
  };
  FundAbnormalInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FundAbnormalInfo_descriptor_,
      FundAbnormalInfo::default_instance_,
      FundAbnormalInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FundAbnormalInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FundAbnormalInfo));
  RateInfo_descriptor_ = file->message_type(8);
  static const int RateInfo_offsets_[12] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, rate_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, rise_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, up_limit_rate_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, up_limit_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, lower_limit_volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, lower_limit_rate_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, fried_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, fried_num_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, main_funds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, to_up_limit_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, to_lower_limit_time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, last_price_),
  };
  RateInfo_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      RateInfo_descriptor_,
      RateInfo::default_instance_,
      RateInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RateInfo, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(RateInfo));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_rank_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RankFeild_descriptor_, &RankFeild::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockFeild_descriptor_, &BlockFeild::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StockInfo_descriptor_, &StockInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BlockInfo_descriptor_, &BlockInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FundInfo_descriptor_, &FundInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidInfo_descriptor_, &BidInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    BidBlockInfo_descriptor_, &BidBlockInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FundAbnormalInfo_descriptor_, &FundAbnormalInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    RateInfo_descriptor_, &RateInfo::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_rank_2eproto() {
  delete RankFeild::default_instance_;
  delete RankFeild_reflection_;
  delete BlockFeild::default_instance_;
  delete BlockFeild_reflection_;
  delete StockInfo::default_instance_;
  delete StockInfo_reflection_;
  delete BlockInfo::default_instance_;
  delete BlockInfo_reflection_;
  delete FundInfo::default_instance_;
  delete FundInfo_reflection_;
  delete BidInfo::default_instance_;
  delete BidInfo_reflection_;
  delete BidBlockInfo::default_instance_;
  delete BidBlockInfo_reflection_;
  delete FundAbnormalInfo::default_instance_;
  delete FundAbnormalInfo_reflection_;
  delete RateInfo::default_instance_;
  delete RateInfo_reflection_;
}

void protobuf_AddDesc_rank_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::QuoteProto::protobuf_AddDesc_public_5fmessage_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nrank.proto\022\nQuoteProto\032\024public_message"
    ".proto\"2\n\tRankFeild\022\025\n\rsecurity_code\030\001 \002"
    "(\t\022\016\n\006number\030\002 \002(\003\"0\n\nBlockFeild\022\022\n\nbloc"
    "k_code\030\001 \002(\t\022\016\n\006number\030\003 \002(\003\"\274\014\n\tStockIn"
    "fo\022(\n\nquote_info\030\001 \003(\0132\024.QuoteProto.Stoc"
    "kMsg\022,\n\rhighest_price\030\002 \003(\0132\025.QuoteProto"
    ".RankFeild\022+\n\014lowest_price\030\003 \003(\0132\025.Quote"
    "Proto.RankFeild\022)\n\nlast_price\030\004 \003(\0132\025.Qu"
    "oteProto.RankFeild\022+\n\014averag_price\030\005 \003(\013"
    "2\025.QuoteProto.RankFeild\022.\n\017rise_fall_pri"
    "ce\030\006 \003(\0132\025.QuoteProto.RankFeild\022-\n\016rise_"
    "fall_rate\030\007 \003(\0132\025.QuoteProto.RankFeild\022("
    "\n\tbid_price\030\010 \003(\0132\025.QuoteProto.RankFeild"
    "\022(\n\task_price\030\t \003(\0132\025.QuoteProto.RankFei"
    "ld\022%\n\006volume\030\n \003(\0132\025.QuoteProto.RankFeil"
    "d\022\'\n\010turnover\030\013 \003(\0132\025.QuoteProto.RankFei"
    "ld\022)\n\ncur_volume\030\014 \003(\0132\025.QuoteProto.Rank"
    "Feild\022,\n\rturnover_rate\030\r \003(\0132\025.QuoteProt"
    "o.RankFeild\022.\n\017pre_close_price\030\016 \003(\0132\025.Q"
    "uoteProto.RankFeild\022)\n\nopen_price\030\017 \003(\0132"
    "\025.QuoteProto.RankFeild\022\"\n\003pes\030\020 \003(\0132\025.Qu"
    "oteProto.RankFeild\022(\n\tnp_volume\030\021 \003(\0132\025."
    "QuoteProto.RankFeild\022(\n\twp_volume\030\022 \003(\0132"
    "\025.QuoteProto.RankFeild\022$\n\005ratio\030\023 \003(\0132\025."
    "QuoteProto.RankFeild\022(\n\tcommittee\030\024 \003(\0132"
    "\025.QuoteProto.RankFeild\022+\n\014buy_sell_buy\030\025"
    " \003(\0132\025.QuoteProto.RankFeild\022\"\n\003pbv\030\026 \003(\013"
    "2\025.QuoteProto.RankFeild\022(\n\ttot_stock\030\027 \003"
    "(\0132\025.QuoteProto.RankFeild\022(\n\tcir_stock\030\030"
    " \003(\0132\025.QuoteProto.RankFeild\022(\n\ttot_value"
    "\030\031 \003(\0132\025.QuoteProto.RankFeild\022(\n\tcir_val"
    "ue\030\032 \003(\0132\025.QuoteProto.RankFeild\022\'\n\010nwp_r"
    "ate\030\033 \003(\0132\025.QuoteProto.RankFeild\022!\n\002sa\030\034"
    " \003(\0132\025.QuoteProto.RankFeild\022)\n\nspeed_rat"
    "e\030\035 \003(\0132\025.QuoteProto.RankFeild\022)\n\nthree_"
    "rate\030\036 \003(\0132\025.QuoteProto.RankFeild\022(\n\tfiv"
    "e_rate\030\037 \003(\0132\025.QuoteProto.RankFeild\022-\n\016t"
    "hree_tuv_rate\030  \003(\0132\025.QuoteProto.RankFei"
    "ld\022,\n\rfive_tuv_rate\030! \003(\0132\025.QuoteProto.R"
    "ankFeild\022\"\n\003ped\030\" \003(\0132\025.QuoteProto.RankF"
    "eild\0225\n\016rise_fall_info\030# \003(\0132\035.QuoteProt"
    "o.StockRiseFallInfo\022,\n\rsecurity_name\030$ \003"
    "(\0132\025.QuoteProto.RankFeild\022(\n\tyear_rate\030%"
    " \003(\0132\025.QuoteProto.RankFeild\"\305\006\n\tBlockInf"
    "o\022(\n\nquote_info\030\001 \003(\0132\024.QuoteProto.Block"
    "Msg\022*\n\nblock_rate\030\002 \003(\0132\026.QuoteProto.Blo"
    "ckFeild\022-\n\rup_down_ratio\030\003 \003(\0132\026.QuotePr"
    "oto.BlockFeild\022-\n\rturnover_rate\030\004 \003(\0132\026."
    "QuoteProto.BlockFeild\022(\n\010turnover\030\005 \003(\0132"
    "\026.QuoteProto.BlockFeild\022)\n\ttot_value\030\006 \003"
    "(\0132\026.QuoteProto.BlockFeild\022)\n\tcir_value\030"
    "\007 \003(\0132\026.QuoteProto.BlockFeild\022)\n\tavg_sto"
    "ck\030\010 \003(\0132\026.QuoteProto.BlockFeild\022&\n\006volu"
    "me\030\t \003(\0132\026.QuoteProto.BlockFeild\022$\n\004rise"
    "\030\n \003(\0132\026.QuoteProto.BlockFeild\022$\n\004fall\030\013"
    " \003(\0132\026.QuoteProto.BlockFeild\022*\n\nspeed_ra"
    "te\030\014 \003(\0132\026.QuoteProto.BlockFeild\022*\n\nthre"
    "e_rate\030\r \003(\0132\026.QuoteProto.BlockFeild\022)\n\t"
    "five_rate\030\016 \003(\0132\026.QuoteProto.BlockFeild\022"
    ".\n\016three_tuv_rate\030\017 \003(\0132\026.QuoteProto.Blo"
    "ckFeild\022-\n\rfive_tuv_rate\030\020 \003(\0132\026.QuotePr"
    "oto.BlockFeild\022,\n\014rise_day_num\030\021 \003(\0132\026.Q"
    "uoteProto.BlockFeild\022*\n\nblock_name\030\022 \003(\013"
    "2\026.QuoteProto.BlockFeild\022)\n\tyear_rate\030\023 "
    "\003(\0132\026.QuoteProto.BlockFeild\"\264\013\n\010FundInfo"
    "\022(\n\nmoney_info\030\001 \003(\0132\024.QuoteProto.MoneyM"
    "sg\022)\n\nlast_price\030\002 \003(\0132\025.QuoteProto.Rank"
    "Feild\022#\n\004rate\030\003 \003(\0132\025.QuoteProto.RankFei"
    "ld\022-\n\016auction_volume\030\004 \003(\0132\025.QuoteProto."
    "RankFeild\0221\n\022leader_money_input\030\005 \003(\0132\025."
    "QuoteProto.RankFeild\0222\n\023leader_money_out"
    "put\030\006 \003(\0132\025.QuoteProto.RankFeild\0222\n\023lead"
    "er_money_netput\030\007 \003(\0132\025.QuoteProto.RankF"
    "eild\0220\n\021leader_money_rate\030\010 \003(\0132\025.QuoteP"
    "roto.RankFeild\0221\n\022maxord_money_input\030\t \003"
    "(\0132\025.QuoteProto.RankFeild\0222\n\023maxord_mone"
    "y_output\030\n \003(\0132\025.QuoteProto.RankFeild\0222\n"
    "\023maxord_money_netput\030\013 \003(\0132\025.QuoteProto."
    "RankFeild\0220\n\021maxord_money_rate\030\014 \003(\0132\025.Q"
    "uoteProto.RankFeild\0221\n\022bigord_money_inpu"
    "t\030\r \003(\0132\025.QuoteProto.RankFeild\0222\n\023bigord"
    "_money_output\030\016 \003(\0132\025.QuoteProto.RankFei"
    "ld\0222\n\023bigord_money_netput\030\017 \003(\0132\025.QuoteP"
    "roto.RankFeild\0220\n\021bigord_money_rate\030\020 \003("
    "\0132\025.QuoteProto.RankFeild\0221\n\022midord_money"
    "_input\030\021 \003(\0132\025.QuoteProto.RankFeild\0222\n\023m"
    "idord_money_output\030\022 \003(\0132\025.QuoteProto.Ra"
    "nkFeild\0222\n\023midord_money_netput\030\023 \003(\0132\025.Q"
    "uoteProto.RankFeild\0220\n\021midord_money_rate"
    "\030\024 \003(\0132\025.QuoteProto.RankFeild\0221\n\022minord_"
    "money_input\030\025 \003(\0132\025.QuoteProto.RankFeild"
    "\0222\n\023minord_money_output\030\026 \003(\0132\025.QuotePro"
    "to.RankFeild\0222\n\023minord_money_netput\030\027 \003("
    "\0132\025.QuoteProto.RankFeild\0220\n\021minord_money"
    "_rate\030\030 \003(\0132\025.QuoteProto.RankFeild\0228\n\031th"
    "ree_leader_money_netput\030\031 \003(\0132\025.QuotePro"
    "to.RankFeild\0227\n\030five_leader_money_netput"
    "\030\032 \003(\0132\025.QuoteProto.RankFeild\022/\n\020auction"
    "_turnover\030\033 \003(\0132\025.QuoteProto.RankFeild\022,"
    "\n\rsecurity_name\030\034 \003(\0132\025.QuoteProto.RankF"
    "eild\022,\n\rup_down_price\030\035 \003(\0132\025.QuoteProto"
    ".RankFeild\"\335\001\n\007BidInfo\022#\n\007bid_msg\030\001 \003(\0132"
    "\022.QuoteProto.BidMsg\022#\n\004fund\030\002 \003(\0132\025.Quot"
    "eProto.RankFeild\022,\n\rquantity_than\030\003 \003(\0132"
    "\025.QuoteProto.RankFeild\022+\n\014bidding_rise\030\004"
    " \003(\0132\025.QuoteProto.RankFeild\022-\n\016yesterday"
    "_rate\030\005 \003(\0132\025.QuoteProto.RankFeild\"c\n\014Bi"
    "dBlockInfo\022.\n\rbid_block_msg\030\001 \003(\0132\027.Quot"
    "eProto.BidBlockMsg\022#\n\004rate\030\002 \003(\0132\025.Quote"
    "Proto.RankFeild\"\213\006\n\020FundAbnormalInfo\0221\n\014"
    "abnormal_msg\030\001 \003(\0132\033.QuoteProto.FundAbno"
    "rmalMsg\022#\n\004rate\030\002 \003(\0132\025.QuoteProto.RankF"
    "eild\022*\n\013thirty_rate\030\003 \003(\0132\025.QuoteProto.R"
    "ankFeild\022,\n\ractive_netput\030\004 \003(\0132\025.QuoteP"
    "roto.RankFeild\0223\n\024thirty_active_netput\030\005"
    " \003(\0132\025.QuoteProto.RankFeild\022,\n\rleader_ne"
    "tput\030\006 \003(\0132\025.QuoteProto.RankFeild\022*\n\013avt"
    "ive_rate\030\007 \003(\0132\025.QuoteProto.RankFeild\022*\n"
    "\013leader_rate\030\010 \003(\0132\025.QuoteProto.RankFeil"
    "d\022,\n\rturnover_rate\030\t \003(\0132\025.QuoteProto.Ra"
    "nkFeild\022$\n\005ratio\030\n \003(\0132\025.QuoteProto.Rank"
    "Feild\022(\n\tcir_value\030\013 \003(\0132\025.QuoteProto.Ra"
    "nkFeild\022\"\n\003ped\030\014 \003(\0132\025.QuoteProto.RankFe"
    "ild\0222\n\023three_avtive_netput\030\r \003(\0132\025.Quote"
    "Proto.RankFeild\022)\n\nthree_rate\030\016 \003(\0132\025.Qu"
    "oteProto.RankFeild\0221\n\022five_avtive_netput"
    "\030\017 \003(\0132\025.QuoteProto.RankFeild\022(\n\tfive_ra"
    "te\030\020 \003(\0132\025.QuoteProto.RankFeild\022,\n\rsecur"
    "ity_name\030\021 \003(\0132\025.QuoteProto.RankFeild\"\262\004"
    "\n\010RateInfo\022%\n\010rate_msg\030\001 \003(\0132\023.QuoteProt"
    "o.RateMsg\022#\n\004rise\030\002 \003(\0132\025.QuoteProto.Ran"
    "kFeild\0221\n\022up_limit_rate_time\030\003 \003(\0132\025.Quo"
    "teProto.RankFeild\022.\n\017up_limit_volume\030\004 \003"
    "(\0132\025.QuoteProto.RankFeild\0221\n\022lower_limit"
    "_volume\030\005 \003(\0132\025.QuoteProto.RankFeild\0224\n\025"
    "lower_limit_rate_time\030\006 \003(\0132\025.QuoteProto"
    ".RankFeild\022)\n\nfried_time\030\007 \003(\0132\025.QuotePr"
    "oto.RankFeild\022(\n\tfried_num\030\010 \003(\0132\025.Quote"
    "Proto.RankFeild\022)\n\nmain_funds\030\t \003(\0132\025.Qu"
    "oteProto.RankFeild\022/\n\020to_up_limit_time\030\n"
    " \003(\0132\025.QuoteProto.RankFeild\0222\n\023to_lower_"
    "limit_time\030\013 \003(\0132\025.QuoteProto.RankFeild\022"
    ")\n\nlast_price\030\014 \003(\0132\025.QuoteProto.RankFei"
    "ld", 5722);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rank.proto", &protobuf_RegisterTypes);
  RankFeild::default_instance_ = new RankFeild();
  BlockFeild::default_instance_ = new BlockFeild();
  StockInfo::default_instance_ = new StockInfo();
  BlockInfo::default_instance_ = new BlockInfo();
  FundInfo::default_instance_ = new FundInfo();
  BidInfo::default_instance_ = new BidInfo();
  BidBlockInfo::default_instance_ = new BidBlockInfo();
  FundAbnormalInfo::default_instance_ = new FundAbnormalInfo();
  RateInfo::default_instance_ = new RateInfo();
  RankFeild::default_instance_->InitAsDefaultInstance();
  BlockFeild::default_instance_->InitAsDefaultInstance();
  StockInfo::default_instance_->InitAsDefaultInstance();
  BlockInfo::default_instance_->InitAsDefaultInstance();
  FundInfo::default_instance_->InitAsDefaultInstance();
  BidInfo::default_instance_->InitAsDefaultInstance();
  BidBlockInfo::default_instance_->InitAsDefaultInstance();
  FundAbnormalInfo::default_instance_->InitAsDefaultInstance();
  RateInfo::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_rank_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_rank_2eproto {
  StaticDescriptorInitializer_rank_2eproto() {
    protobuf_AddDesc_rank_2eproto();
  }
} static_descriptor_initializer_rank_2eproto_;


// ===================================================================

#ifndef _MSC_VER
const int RankFeild::kSecurityCodeFieldNumber;
const int RankFeild::kNumberFieldNumber;
#endif  // !_MSC_VER

RankFeild::RankFeild()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RankFeild::InitAsDefaultInstance() {
}

RankFeild::RankFeild(const RankFeild& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RankFeild::SharedCtor() {
  _cached_size_ = 0;
  security_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  number_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RankFeild::~RankFeild() {
  SharedDtor();
}

void RankFeild::SharedDtor() {
  if (security_code_ != &::google::protobuf::internal::kEmptyString) {
    delete security_code_;
  }
  if (this != default_instance_) {
  }
}

void RankFeild::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RankFeild::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RankFeild_descriptor_;
}

const RankFeild& RankFeild::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

RankFeild* RankFeild::default_instance_ = NULL;

RankFeild* RankFeild::New() const {
  return new RankFeild;
}

void RankFeild::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_security_code()) {
      if (security_code_ != &::google::protobuf::internal::kEmptyString) {
        security_code_->clear();
      }
    }
    number_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RankFeild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string security_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_security_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->security_code().data(), this->security_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_number;
        break;
      }
      
      // required int64 number = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RankFeild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string security_code = 1;
  if (has_security_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->security_code().data(), this->security_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->security_code(), output);
  }
  
  // required int64 number = 2;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RankFeild::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string security_code = 1;
  if (has_security_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->security_code().data(), this->security_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->security_code(), target);
  }
  
  // required int64 number = 2;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RankFeild::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string security_code = 1;
    if (has_security_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->security_code());
    }
    
    // required int64 number = 2;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RankFeild::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RankFeild* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RankFeild*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RankFeild::MergeFrom(const RankFeild& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_security_code()) {
      set_security_code(from.security_code());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RankFeild::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RankFeild::CopyFrom(const RankFeild& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RankFeild::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void RankFeild::Swap(RankFeild* other) {
  if (other != this) {
    std::swap(security_code_, other->security_code_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RankFeild::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RankFeild_descriptor_;
  metadata.reflection = RankFeild_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BlockFeild::kBlockCodeFieldNumber;
const int BlockFeild::kNumberFieldNumber;
#endif  // !_MSC_VER

BlockFeild::BlockFeild()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BlockFeild::InitAsDefaultInstance() {
}

BlockFeild::BlockFeild(const BlockFeild& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BlockFeild::SharedCtor() {
  _cached_size_ = 0;
  block_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  number_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockFeild::~BlockFeild() {
  SharedDtor();
}

void BlockFeild::SharedDtor() {
  if (block_code_ != &::google::protobuf::internal::kEmptyString) {
    delete block_code_;
  }
  if (this != default_instance_) {
  }
}

void BlockFeild::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockFeild::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockFeild_descriptor_;
}

const BlockFeild& BlockFeild::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

BlockFeild* BlockFeild::default_instance_ = NULL;

BlockFeild* BlockFeild::New() const {
  return new BlockFeild;
}

void BlockFeild::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_block_code()) {
      if (block_code_ != &::google::protobuf::internal::kEmptyString) {
        block_code_->clear();
      }
    }
    number_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BlockFeild::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string block_code = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_block_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->block_code().data(), this->block_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_number;
        break;
      }
      
      // required int64 number = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_number:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &number_)));
          set_has_number();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BlockFeild::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string block_code = 1;
  if (has_block_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->block_code().data(), this->block_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->block_code(), output);
  }
  
  // required int64 number = 3;
  if (has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->number(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BlockFeild::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string block_code = 1;
  if (has_block_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->block_code().data(), this->block_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->block_code(), target);
  }
  
  // required int64 number = 3;
  if (has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->number(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BlockFeild::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string block_code = 1;
    if (has_block_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->block_code());
    }
    
    // required int64 number = 3;
    if (has_number()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->number());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockFeild::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BlockFeild* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BlockFeild*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BlockFeild::MergeFrom(const BlockFeild& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_block_code()) {
      set_block_code(from.block_code());
    }
    if (from.has_number()) {
      set_number(from.number());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BlockFeild::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockFeild::CopyFrom(const BlockFeild& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockFeild::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void BlockFeild::Swap(BlockFeild* other) {
  if (other != this) {
    std::swap(block_code_, other->block_code_);
    std::swap(number_, other->number_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BlockFeild::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockFeild_descriptor_;
  metadata.reflection = BlockFeild_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StockInfo::kQuoteInfoFieldNumber;
const int StockInfo::kHighestPriceFieldNumber;
const int StockInfo::kLowestPriceFieldNumber;
const int StockInfo::kLastPriceFieldNumber;
const int StockInfo::kAveragPriceFieldNumber;
const int StockInfo::kRiseFallPriceFieldNumber;
const int StockInfo::kRiseFallRateFieldNumber;
const int StockInfo::kBidPriceFieldNumber;
const int StockInfo::kAskPriceFieldNumber;
const int StockInfo::kVolumeFieldNumber;
const int StockInfo::kTurnoverFieldNumber;
const int StockInfo::kCurVolumeFieldNumber;
const int StockInfo::kTurnoverRateFieldNumber;
const int StockInfo::kPreClosePriceFieldNumber;
const int StockInfo::kOpenPriceFieldNumber;
const int StockInfo::kPesFieldNumber;
const int StockInfo::kNpVolumeFieldNumber;
const int StockInfo::kWpVolumeFieldNumber;
const int StockInfo::kRatioFieldNumber;
const int StockInfo::kCommitteeFieldNumber;
const int StockInfo::kBuySellBuyFieldNumber;
const int StockInfo::kPbvFieldNumber;
const int StockInfo::kTotStockFieldNumber;
const int StockInfo::kCirStockFieldNumber;
const int StockInfo::kTotValueFieldNumber;
const int StockInfo::kCirValueFieldNumber;
const int StockInfo::kNwpRateFieldNumber;
const int StockInfo::kSaFieldNumber;
const int StockInfo::kSpeedRateFieldNumber;
const int StockInfo::kThreeRateFieldNumber;
const int StockInfo::kFiveRateFieldNumber;
const int StockInfo::kThreeTuvRateFieldNumber;
const int StockInfo::kFiveTuvRateFieldNumber;
const int StockInfo::kPedFieldNumber;
const int StockInfo::kRiseFallInfoFieldNumber;
const int StockInfo::kSecurityNameFieldNumber;
const int StockInfo::kYearRateFieldNumber;
#endif  // !_MSC_VER

StockInfo::StockInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StockInfo::InitAsDefaultInstance() {
}

StockInfo::StockInfo(const StockInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StockInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StockInfo::~StockInfo() {
  SharedDtor();
}

void StockInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StockInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StockInfo_descriptor_;
}

const StockInfo& StockInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

StockInfo* StockInfo::default_instance_ = NULL;

StockInfo* StockInfo::New() const {
  return new StockInfo;
}

void StockInfo::Clear() {
  quote_info_.Clear();
  highest_price_.Clear();
  lowest_price_.Clear();
  last_price_.Clear();
  averag_price_.Clear();
  rise_fall_price_.Clear();
  rise_fall_rate_.Clear();
  bid_price_.Clear();
  ask_price_.Clear();
  volume_.Clear();
  turnover_.Clear();
  cur_volume_.Clear();
  turnover_rate_.Clear();
  pre_close_price_.Clear();
  open_price_.Clear();
  pes_.Clear();
  np_volume_.Clear();
  wp_volume_.Clear();
  ratio_.Clear();
  committee_.Clear();
  buy_sell_buy_.Clear();
  pbv_.Clear();
  tot_stock_.Clear();
  cir_stock_.Clear();
  tot_value_.Clear();
  cir_value_.Clear();
  nwp_rate_.Clear();
  sa_.Clear();
  speed_rate_.Clear();
  three_rate_.Clear();
  five_rate_.Clear();
  three_tuv_rate_.Clear();
  five_tuv_rate_.Clear();
  ped_.Clear();
  rise_fall_info_.Clear();
  security_name_.Clear();
  year_rate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.StockMsg quote_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_quote_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quote_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_quote_info;
        if (input->ExpectTag(18)) goto parse_highest_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild highest_price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_highest_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_highest_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_highest_price;
        if (input->ExpectTag(26)) goto parse_lowest_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild lowest_price = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lowest_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lowest_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_lowest_price;
        if (input->ExpectTag(34)) goto parse_last_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild last_price = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_last_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_last_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_last_price;
        if (input->ExpectTag(42)) goto parse_averag_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild averag_price = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_averag_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_averag_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_averag_price;
        if (input->ExpectTag(50)) goto parse_rise_fall_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rise_fall_price = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise_fall_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise_fall_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_rise_fall_price;
        if (input->ExpectTag(58)) goto parse_rise_fall_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rise_fall_rate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise_fall_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise_fall_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_rise_fall_rate;
        if (input->ExpectTag(66)) goto parse_bid_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bid_price = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bid_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bid_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_bid_price;
        if (input->ExpectTag(74)) goto parse_ask_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild ask_price = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ask_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ask_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_ask_price;
        if (input->ExpectTag(82)) goto parse_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild volume = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_volume;
        if (input->ExpectTag(90)) goto parse_turnover;
        break;
      }
      
      // repeated .QuoteProto.RankFeild turnover = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_turnover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_turnover()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_turnover;
        if (input->ExpectTag(98)) goto parse_cur_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild cur_volume = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cur_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cur_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_cur_volume;
        if (input->ExpectTag(106)) goto parse_turnover_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild turnover_rate = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_turnover_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_turnover_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_turnover_rate;
        if (input->ExpectTag(114)) goto parse_pre_close_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild pre_close_price = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pre_close_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pre_close_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_pre_close_price;
        if (input->ExpectTag(122)) goto parse_open_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild open_price = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_open_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_open_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_open_price;
        if (input->ExpectTag(130)) goto parse_pes;
        break;
      }
      
      // repeated .QuoteProto.RankFeild pes = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_pes;
        if (input->ExpectTag(138)) goto parse_np_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild np_volume = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_np_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_np_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_np_volume;
        if (input->ExpectTag(146)) goto parse_wp_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild wp_volume = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_wp_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_wp_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_wp_volume;
        if (input->ExpectTag(154)) goto parse_ratio;
        break;
      }
      
      // repeated .QuoteProto.RankFeild ratio = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ratio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ratio()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_ratio;
        if (input->ExpectTag(162)) goto parse_committee;
        break;
      }
      
      // repeated .QuoteProto.RankFeild committee = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_committee:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_committee()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_committee;
        if (input->ExpectTag(170)) goto parse_buy_sell_buy;
        break;
      }
      
      // repeated .QuoteProto.RankFeild buy_sell_buy = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_buy_sell_buy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_buy_sell_buy()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_buy_sell_buy;
        if (input->ExpectTag(178)) goto parse_pbv;
        break;
      }
      
      // repeated .QuoteProto.RankFeild pbv = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_pbv:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_pbv()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_pbv;
        if (input->ExpectTag(186)) goto parse_tot_stock;
        break;
      }
      
      // repeated .QuoteProto.RankFeild tot_stock = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tot_stock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tot_stock()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_tot_stock;
        if (input->ExpectTag(194)) goto parse_cir_stock;
        break;
      }
      
      // repeated .QuoteProto.RankFeild cir_stock = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cir_stock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cir_stock()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_cir_stock;
        if (input->ExpectTag(202)) goto parse_tot_value;
        break;
      }
      
      // repeated .QuoteProto.RankFeild tot_value = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tot_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tot_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_tot_value;
        if (input->ExpectTag(210)) goto parse_cir_value;
        break;
      }
      
      // repeated .QuoteProto.RankFeild cir_value = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cir_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cir_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_cir_value;
        if (input->ExpectTag(218)) goto parse_nwp_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild nwp_rate = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_nwp_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_nwp_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_nwp_rate;
        if (input->ExpectTag(226)) goto parse_sa;
        break;
      }
      
      // repeated .QuoteProto.RankFeild sa = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_sa:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_sa()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_sa;
        if (input->ExpectTag(234)) goto parse_speed_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild speed_rate = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_speed_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_speed_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_speed_rate;
        if (input->ExpectTag(242)) goto parse_three_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild three_rate = 30;
      case 30: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(242)) goto parse_three_rate;
        if (input->ExpectTag(250)) goto parse_five_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild five_rate = 31;
      case 31: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(250)) goto parse_five_rate;
        if (input->ExpectTag(258)) goto parse_three_tuv_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild three_tuv_rate = 32;
      case 32: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_tuv_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_tuv_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(258)) goto parse_three_tuv_rate;
        if (input->ExpectTag(266)) goto parse_five_tuv_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild five_tuv_rate = 33;
      case 33: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_tuv_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_tuv_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(266)) goto parse_five_tuv_rate;
        if (input->ExpectTag(274)) goto parse_ped;
        break;
      }
      
      // repeated .QuoteProto.RankFeild ped = 34;
      case 34: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ped:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ped()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(274)) goto parse_ped;
        if (input->ExpectTag(282)) goto parse_rise_fall_info;
        break;
      }
      
      // repeated .QuoteProto.StockRiseFallInfo rise_fall_info = 35;
      case 35: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise_fall_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise_fall_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(282)) goto parse_rise_fall_info;
        if (input->ExpectTag(290)) goto parse_security_name;
        break;
      }
      
      // repeated .QuoteProto.RankFeild security_name = 36;
      case 36: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_security_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_security_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(290)) goto parse_security_name;
        if (input->ExpectTag(298)) goto parse_year_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild year_rate = 37;
      case 37: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_year_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_year_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(298)) goto parse_year_rate;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.StockMsg quote_info = 1;
  for (int i = 0; i < this->quote_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->quote_info(i), output);
  }
  
  // repeated .QuoteProto.RankFeild highest_price = 2;
  for (int i = 0; i < this->highest_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->highest_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild lowest_price = 3;
  for (int i = 0; i < this->lowest_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->lowest_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 4;
  for (int i = 0; i < this->last_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->last_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild averag_price = 5;
  for (int i = 0; i < this->averag_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->averag_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_price = 6;
  for (int i = 0; i < this->rise_fall_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->rise_fall_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_rate = 7;
  for (int i = 0; i < this->rise_fall_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->rise_fall_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bid_price = 8;
  for (int i = 0; i < this->bid_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->bid_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild ask_price = 9;
  for (int i = 0; i < this->ask_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->ask_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild volume = 10;
  for (int i = 0; i < this->volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild turnover = 11;
  for (int i = 0; i < this->turnover_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->turnover(i), output);
  }
  
  // repeated .QuoteProto.RankFeild cur_volume = 12;
  for (int i = 0; i < this->cur_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->cur_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 13;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->turnover_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild pre_close_price = 14;
  for (int i = 0; i < this->pre_close_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->pre_close_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild open_price = 15;
  for (int i = 0; i < this->open_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->open_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild pes = 16;
  for (int i = 0; i < this->pes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->pes(i), output);
  }
  
  // repeated .QuoteProto.RankFeild np_volume = 17;
  for (int i = 0; i < this->np_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->np_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild wp_volume = 18;
  for (int i = 0; i < this->wp_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->wp_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild ratio = 19;
  for (int i = 0; i < this->ratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->ratio(i), output);
  }
  
  // repeated .QuoteProto.RankFeild committee = 20;
  for (int i = 0; i < this->committee_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->committee(i), output);
  }
  
  // repeated .QuoteProto.RankFeild buy_sell_buy = 21;
  for (int i = 0; i < this->buy_sell_buy_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->buy_sell_buy(i), output);
  }
  
  // repeated .QuoteProto.RankFeild pbv = 22;
  for (int i = 0; i < this->pbv_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->pbv(i), output);
  }
  
  // repeated .QuoteProto.RankFeild tot_stock = 23;
  for (int i = 0; i < this->tot_stock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->tot_stock(i), output);
  }
  
  // repeated .QuoteProto.RankFeild cir_stock = 24;
  for (int i = 0; i < this->cir_stock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->cir_stock(i), output);
  }
  
  // repeated .QuoteProto.RankFeild tot_value = 25;
  for (int i = 0; i < this->tot_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->tot_value(i), output);
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 26;
  for (int i = 0; i < this->cir_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->cir_value(i), output);
  }
  
  // repeated .QuoteProto.RankFeild nwp_rate = 27;
  for (int i = 0; i < this->nwp_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->nwp_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild sa = 28;
  for (int i = 0; i < this->sa_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->sa(i), output);
  }
  
  // repeated .QuoteProto.RankFeild speed_rate = 29;
  for (int i = 0; i < this->speed_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->speed_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 30;
  for (int i = 0; i < this->three_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      30, this->three_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 31;
  for (int i = 0; i < this->five_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      31, this->five_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild three_tuv_rate = 32;
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32, this->three_tuv_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild five_tuv_rate = 33;
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33, this->five_tuv_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild ped = 34;
  for (int i = 0; i < this->ped_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34, this->ped(i), output);
  }
  
  // repeated .QuoteProto.StockRiseFallInfo rise_fall_info = 35;
  for (int i = 0; i < this->rise_fall_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35, this->rise_fall_info(i), output);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 36;
  for (int i = 0; i < this->security_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      36, this->security_name(i), output);
  }
  
  // repeated .QuoteProto.RankFeild year_rate = 37;
  for (int i = 0; i < this->year_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37, this->year_rate(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StockInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.StockMsg quote_info = 1;
  for (int i = 0; i < this->quote_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->quote_info(i), target);
  }
  
  // repeated .QuoteProto.RankFeild highest_price = 2;
  for (int i = 0; i < this->highest_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->highest_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild lowest_price = 3;
  for (int i = 0; i < this->lowest_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->lowest_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 4;
  for (int i = 0; i < this->last_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->last_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild averag_price = 5;
  for (int i = 0; i < this->averag_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->averag_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_price = 6;
  for (int i = 0; i < this->rise_fall_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->rise_fall_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_rate = 7;
  for (int i = 0; i < this->rise_fall_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->rise_fall_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bid_price = 8;
  for (int i = 0; i < this->bid_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->bid_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild ask_price = 9;
  for (int i = 0; i < this->ask_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->ask_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild volume = 10;
  for (int i = 0; i < this->volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild turnover = 11;
  for (int i = 0; i < this->turnover_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->turnover(i), target);
  }
  
  // repeated .QuoteProto.RankFeild cur_volume = 12;
  for (int i = 0; i < this->cur_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->cur_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 13;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->turnover_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild pre_close_price = 14;
  for (int i = 0; i < this->pre_close_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->pre_close_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild open_price = 15;
  for (int i = 0; i < this->open_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->open_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild pes = 16;
  for (int i = 0; i < this->pes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->pes(i), target);
  }
  
  // repeated .QuoteProto.RankFeild np_volume = 17;
  for (int i = 0; i < this->np_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->np_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild wp_volume = 18;
  for (int i = 0; i < this->wp_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->wp_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild ratio = 19;
  for (int i = 0; i < this->ratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->ratio(i), target);
  }
  
  // repeated .QuoteProto.RankFeild committee = 20;
  for (int i = 0; i < this->committee_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->committee(i), target);
  }
  
  // repeated .QuoteProto.RankFeild buy_sell_buy = 21;
  for (int i = 0; i < this->buy_sell_buy_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->buy_sell_buy(i), target);
  }
  
  // repeated .QuoteProto.RankFeild pbv = 22;
  for (int i = 0; i < this->pbv_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->pbv(i), target);
  }
  
  // repeated .QuoteProto.RankFeild tot_stock = 23;
  for (int i = 0; i < this->tot_stock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->tot_stock(i), target);
  }
  
  // repeated .QuoteProto.RankFeild cir_stock = 24;
  for (int i = 0; i < this->cir_stock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->cir_stock(i), target);
  }
  
  // repeated .QuoteProto.RankFeild tot_value = 25;
  for (int i = 0; i < this->tot_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->tot_value(i), target);
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 26;
  for (int i = 0; i < this->cir_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->cir_value(i), target);
  }
  
  // repeated .QuoteProto.RankFeild nwp_rate = 27;
  for (int i = 0; i < this->nwp_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->nwp_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild sa = 28;
  for (int i = 0; i < this->sa_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->sa(i), target);
  }
  
  // repeated .QuoteProto.RankFeild speed_rate = 29;
  for (int i = 0; i < this->speed_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->speed_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 30;
  for (int i = 0; i < this->three_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        30, this->three_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 31;
  for (int i = 0; i < this->five_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        31, this->five_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild three_tuv_rate = 32;
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        32, this->three_tuv_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild five_tuv_rate = 33;
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        33, this->five_tuv_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild ped = 34;
  for (int i = 0; i < this->ped_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        34, this->ped(i), target);
  }
  
  // repeated .QuoteProto.StockRiseFallInfo rise_fall_info = 35;
  for (int i = 0; i < this->rise_fall_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        35, this->rise_fall_info(i), target);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 36;
  for (int i = 0; i < this->security_name_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        36, this->security_name(i), target);
  }
  
  // repeated .QuoteProto.RankFeild year_rate = 37;
  for (int i = 0; i < this->year_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        37, this->year_rate(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StockInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.StockMsg quote_info = 1;
  total_size += 1 * this->quote_info_size();
  for (int i = 0; i < this->quote_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quote_info(i));
  }
  
  // repeated .QuoteProto.RankFeild highest_price = 2;
  total_size += 1 * this->highest_price_size();
  for (int i = 0; i < this->highest_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->highest_price(i));
  }
  
  // repeated .QuoteProto.RankFeild lowest_price = 3;
  total_size += 1 * this->lowest_price_size();
  for (int i = 0; i < this->lowest_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lowest_price(i));
  }
  
  // repeated .QuoteProto.RankFeild last_price = 4;
  total_size += 1 * this->last_price_size();
  for (int i = 0; i < this->last_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->last_price(i));
  }
  
  // repeated .QuoteProto.RankFeild averag_price = 5;
  total_size += 1 * this->averag_price_size();
  for (int i = 0; i < this->averag_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->averag_price(i));
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_price = 6;
  total_size += 1 * this->rise_fall_price_size();
  for (int i = 0; i < this->rise_fall_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise_fall_price(i));
  }
  
  // repeated .QuoteProto.RankFeild rise_fall_rate = 7;
  total_size += 1 * this->rise_fall_rate_size();
  for (int i = 0; i < this->rise_fall_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise_fall_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild bid_price = 8;
  total_size += 1 * this->bid_price_size();
  for (int i = 0; i < this->bid_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bid_price(i));
  }
  
  // repeated .QuoteProto.RankFeild ask_price = 9;
  total_size += 1 * this->ask_price_size();
  for (int i = 0; i < this->ask_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ask_price(i));
  }
  
  // repeated .QuoteProto.RankFeild volume = 10;
  total_size += 1 * this->volume_size();
  for (int i = 0; i < this->volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->volume(i));
  }
  
  // repeated .QuoteProto.RankFeild turnover = 11;
  total_size += 1 * this->turnover_size();
  for (int i = 0; i < this->turnover_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->turnover(i));
  }
  
  // repeated .QuoteProto.RankFeild cur_volume = 12;
  total_size += 1 * this->cur_volume_size();
  for (int i = 0; i < this->cur_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cur_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 13;
  total_size += 1 * this->turnover_rate_size();
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->turnover_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild pre_close_price = 14;
  total_size += 1 * this->pre_close_price_size();
  for (int i = 0; i < this->pre_close_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pre_close_price(i));
  }
  
  // repeated .QuoteProto.RankFeild open_price = 15;
  total_size += 1 * this->open_price_size();
  for (int i = 0; i < this->open_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->open_price(i));
  }
  
  // repeated .QuoteProto.RankFeild pes = 16;
  total_size += 2 * this->pes_size();
  for (int i = 0; i < this->pes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pes(i));
  }
  
  // repeated .QuoteProto.RankFeild np_volume = 17;
  total_size += 2 * this->np_volume_size();
  for (int i = 0; i < this->np_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->np_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild wp_volume = 18;
  total_size += 2 * this->wp_volume_size();
  for (int i = 0; i < this->wp_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->wp_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild ratio = 19;
  total_size += 2 * this->ratio_size();
  for (int i = 0; i < this->ratio_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ratio(i));
  }
  
  // repeated .QuoteProto.RankFeild committee = 20;
  total_size += 2 * this->committee_size();
  for (int i = 0; i < this->committee_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->committee(i));
  }
  
  // repeated .QuoteProto.RankFeild buy_sell_buy = 21;
  total_size += 2 * this->buy_sell_buy_size();
  for (int i = 0; i < this->buy_sell_buy_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->buy_sell_buy(i));
  }
  
  // repeated .QuoteProto.RankFeild pbv = 22;
  total_size += 2 * this->pbv_size();
  for (int i = 0; i < this->pbv_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->pbv(i));
  }
  
  // repeated .QuoteProto.RankFeild tot_stock = 23;
  total_size += 2 * this->tot_stock_size();
  for (int i = 0; i < this->tot_stock_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tot_stock(i));
  }
  
  // repeated .QuoteProto.RankFeild cir_stock = 24;
  total_size += 2 * this->cir_stock_size();
  for (int i = 0; i < this->cir_stock_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cir_stock(i));
  }
  
  // repeated .QuoteProto.RankFeild tot_value = 25;
  total_size += 2 * this->tot_value_size();
  for (int i = 0; i < this->tot_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tot_value(i));
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 26;
  total_size += 2 * this->cir_value_size();
  for (int i = 0; i < this->cir_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cir_value(i));
  }
  
  // repeated .QuoteProto.RankFeild nwp_rate = 27;
  total_size += 2 * this->nwp_rate_size();
  for (int i = 0; i < this->nwp_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nwp_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild sa = 28;
  total_size += 2 * this->sa_size();
  for (int i = 0; i < this->sa_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sa(i));
  }
  
  // repeated .QuoteProto.RankFeild speed_rate = 29;
  total_size += 2 * this->speed_rate_size();
  for (int i = 0; i < this->speed_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->speed_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 30;
  total_size += 2 * this->three_rate_size();
  for (int i = 0; i < this->three_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 31;
  total_size += 2 * this->five_rate_size();
  for (int i = 0; i < this->five_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild three_tuv_rate = 32;
  total_size += 2 * this->three_tuv_rate_size();
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_tuv_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild five_tuv_rate = 33;
  total_size += 2 * this->five_tuv_rate_size();
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_tuv_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild ped = 34;
  total_size += 2 * this->ped_size();
  for (int i = 0; i < this->ped_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ped(i));
  }
  
  // repeated .QuoteProto.StockRiseFallInfo rise_fall_info = 35;
  total_size += 2 * this->rise_fall_info_size();
  for (int i = 0; i < this->rise_fall_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise_fall_info(i));
  }
  
  // repeated .QuoteProto.RankFeild security_name = 36;
  total_size += 2 * this->security_name_size();
  for (int i = 0; i < this->security_name_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->security_name(i));
  }
  
  // repeated .QuoteProto.RankFeild year_rate = 37;
  total_size += 2 * this->year_rate_size();
  for (int i = 0; i < this->year_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->year_rate(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StockInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StockInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StockInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StockInfo::MergeFrom(const StockInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  quote_info_.MergeFrom(from.quote_info_);
  highest_price_.MergeFrom(from.highest_price_);
  lowest_price_.MergeFrom(from.lowest_price_);
  last_price_.MergeFrom(from.last_price_);
  averag_price_.MergeFrom(from.averag_price_);
  rise_fall_price_.MergeFrom(from.rise_fall_price_);
  rise_fall_rate_.MergeFrom(from.rise_fall_rate_);
  bid_price_.MergeFrom(from.bid_price_);
  ask_price_.MergeFrom(from.ask_price_);
  volume_.MergeFrom(from.volume_);
  turnover_.MergeFrom(from.turnover_);
  cur_volume_.MergeFrom(from.cur_volume_);
  turnover_rate_.MergeFrom(from.turnover_rate_);
  pre_close_price_.MergeFrom(from.pre_close_price_);
  open_price_.MergeFrom(from.open_price_);
  pes_.MergeFrom(from.pes_);
  np_volume_.MergeFrom(from.np_volume_);
  wp_volume_.MergeFrom(from.wp_volume_);
  ratio_.MergeFrom(from.ratio_);
  committee_.MergeFrom(from.committee_);
  buy_sell_buy_.MergeFrom(from.buy_sell_buy_);
  pbv_.MergeFrom(from.pbv_);
  tot_stock_.MergeFrom(from.tot_stock_);
  cir_stock_.MergeFrom(from.cir_stock_);
  tot_value_.MergeFrom(from.tot_value_);
  cir_value_.MergeFrom(from.cir_value_);
  nwp_rate_.MergeFrom(from.nwp_rate_);
  sa_.MergeFrom(from.sa_);
  speed_rate_.MergeFrom(from.speed_rate_);
  three_rate_.MergeFrom(from.three_rate_);
  five_rate_.MergeFrom(from.five_rate_);
  three_tuv_rate_.MergeFrom(from.three_tuv_rate_);
  five_tuv_rate_.MergeFrom(from.five_tuv_rate_);
  ped_.MergeFrom(from.ped_);
  rise_fall_info_.MergeFrom(from.rise_fall_info_);
  security_name_.MergeFrom(from.security_name_);
  year_rate_.MergeFrom(from.year_rate_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StockInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StockInfo::CopyFrom(const StockInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StockInfo::IsInitialized() const {
  
  for (int i = 0; i < quote_info_size(); i++) {
    if (!this->quote_info(i).IsInitialized()) return false;
  }
  for (int i = 0; i < highest_price_size(); i++) {
    if (!this->highest_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < lowest_price_size(); i++) {
    if (!this->lowest_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < last_price_size(); i++) {
    if (!this->last_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < averag_price_size(); i++) {
    if (!this->averag_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < rise_fall_price_size(); i++) {
    if (!this->rise_fall_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < rise_fall_rate_size(); i++) {
    if (!this->rise_fall_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bid_price_size(); i++) {
    if (!this->bid_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < ask_price_size(); i++) {
    if (!this->ask_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < volume_size(); i++) {
    if (!this->volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < turnover_size(); i++) {
    if (!this->turnover(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cur_volume_size(); i++) {
    if (!this->cur_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < turnover_rate_size(); i++) {
    if (!this->turnover_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < pre_close_price_size(); i++) {
    if (!this->pre_close_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < open_price_size(); i++) {
    if (!this->open_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < pes_size(); i++) {
    if (!this->pes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < np_volume_size(); i++) {
    if (!this->np_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < wp_volume_size(); i++) {
    if (!this->wp_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < ratio_size(); i++) {
    if (!this->ratio(i).IsInitialized()) return false;
  }
  for (int i = 0; i < committee_size(); i++) {
    if (!this->committee(i).IsInitialized()) return false;
  }
  for (int i = 0; i < buy_sell_buy_size(); i++) {
    if (!this->buy_sell_buy(i).IsInitialized()) return false;
  }
  for (int i = 0; i < pbv_size(); i++) {
    if (!this->pbv(i).IsInitialized()) return false;
  }
  for (int i = 0; i < tot_stock_size(); i++) {
    if (!this->tot_stock(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cir_stock_size(); i++) {
    if (!this->cir_stock(i).IsInitialized()) return false;
  }
  for (int i = 0; i < tot_value_size(); i++) {
    if (!this->tot_value(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cir_value_size(); i++) {
    if (!this->cir_value(i).IsInitialized()) return false;
  }
  for (int i = 0; i < nwp_rate_size(); i++) {
    if (!this->nwp_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < sa_size(); i++) {
    if (!this->sa(i).IsInitialized()) return false;
  }
  for (int i = 0; i < speed_rate_size(); i++) {
    if (!this->speed_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_rate_size(); i++) {
    if (!this->three_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_rate_size(); i++) {
    if (!this->five_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_tuv_rate_size(); i++) {
    if (!this->three_tuv_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_tuv_rate_size(); i++) {
    if (!this->five_tuv_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < ped_size(); i++) {
    if (!this->ped(i).IsInitialized()) return false;
  }
  for (int i = 0; i < security_name_size(); i++) {
    if (!this->security_name(i).IsInitialized()) return false;
  }
  for (int i = 0; i < year_rate_size(); i++) {
    if (!this->year_rate(i).IsInitialized()) return false;
  }
  return true;
}

void StockInfo::Swap(StockInfo* other) {
  if (other != this) {
    quote_info_.Swap(&other->quote_info_);
    highest_price_.Swap(&other->highest_price_);
    lowest_price_.Swap(&other->lowest_price_);
    last_price_.Swap(&other->last_price_);
    averag_price_.Swap(&other->averag_price_);
    rise_fall_price_.Swap(&other->rise_fall_price_);
    rise_fall_rate_.Swap(&other->rise_fall_rate_);
    bid_price_.Swap(&other->bid_price_);
    ask_price_.Swap(&other->ask_price_);
    volume_.Swap(&other->volume_);
    turnover_.Swap(&other->turnover_);
    cur_volume_.Swap(&other->cur_volume_);
    turnover_rate_.Swap(&other->turnover_rate_);
    pre_close_price_.Swap(&other->pre_close_price_);
    open_price_.Swap(&other->open_price_);
    pes_.Swap(&other->pes_);
    np_volume_.Swap(&other->np_volume_);
    wp_volume_.Swap(&other->wp_volume_);
    ratio_.Swap(&other->ratio_);
    committee_.Swap(&other->committee_);
    buy_sell_buy_.Swap(&other->buy_sell_buy_);
    pbv_.Swap(&other->pbv_);
    tot_stock_.Swap(&other->tot_stock_);
    cir_stock_.Swap(&other->cir_stock_);
    tot_value_.Swap(&other->tot_value_);
    cir_value_.Swap(&other->cir_value_);
    nwp_rate_.Swap(&other->nwp_rate_);
    sa_.Swap(&other->sa_);
    speed_rate_.Swap(&other->speed_rate_);
    three_rate_.Swap(&other->three_rate_);
    five_rate_.Swap(&other->five_rate_);
    three_tuv_rate_.Swap(&other->three_tuv_rate_);
    five_tuv_rate_.Swap(&other->five_tuv_rate_);
    ped_.Swap(&other->ped_);
    rise_fall_info_.Swap(&other->rise_fall_info_);
    security_name_.Swap(&other->security_name_);
    year_rate_.Swap(&other->year_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    std::swap(_has_bits_[1], other->_has_bits_[1]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StockInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StockInfo_descriptor_;
  metadata.reflection = StockInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BlockInfo::kQuoteInfoFieldNumber;
const int BlockInfo::kBlockRateFieldNumber;
const int BlockInfo::kUpDownRatioFieldNumber;
const int BlockInfo::kTurnoverRateFieldNumber;
const int BlockInfo::kTurnoverFieldNumber;
const int BlockInfo::kTotValueFieldNumber;
const int BlockInfo::kCirValueFieldNumber;
const int BlockInfo::kAvgStockFieldNumber;
const int BlockInfo::kVolumeFieldNumber;
const int BlockInfo::kRiseFieldNumber;
const int BlockInfo::kFallFieldNumber;
const int BlockInfo::kSpeedRateFieldNumber;
const int BlockInfo::kThreeRateFieldNumber;
const int BlockInfo::kFiveRateFieldNumber;
const int BlockInfo::kThreeTuvRateFieldNumber;
const int BlockInfo::kFiveTuvRateFieldNumber;
const int BlockInfo::kRiseDayNumFieldNumber;
const int BlockInfo::kBlockNameFieldNumber;
const int BlockInfo::kYearRateFieldNumber;
#endif  // !_MSC_VER

BlockInfo::BlockInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BlockInfo::InitAsDefaultInstance() {
}

BlockInfo::BlockInfo(const BlockInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BlockInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BlockInfo::~BlockInfo() {
  SharedDtor();
}

void BlockInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BlockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BlockInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BlockInfo_descriptor_;
}

const BlockInfo& BlockInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

BlockInfo* BlockInfo::default_instance_ = NULL;

BlockInfo* BlockInfo::New() const {
  return new BlockInfo;
}

void BlockInfo::Clear() {
  quote_info_.Clear();
  block_rate_.Clear();
  up_down_ratio_.Clear();
  turnover_rate_.Clear();
  turnover_.Clear();
  tot_value_.Clear();
  cir_value_.Clear();
  avg_stock_.Clear();
  volume_.Clear();
  rise_.Clear();
  fall_.Clear();
  speed_rate_.Clear();
  three_rate_.Clear();
  five_rate_.Clear();
  three_tuv_rate_.Clear();
  five_tuv_rate_.Clear();
  rise_day_num_.Clear();
  block_name_.Clear();
  year_rate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.BlockMsg quote_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_quote_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quote_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_quote_info;
        if (input->ExpectTag(18)) goto parse_block_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild block_rate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_block_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_block_rate;
        if (input->ExpectTag(26)) goto parse_up_down_ratio;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild up_down_ratio = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_up_down_ratio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_up_down_ratio()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_up_down_ratio;
        if (input->ExpectTag(34)) goto parse_turnover_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild turnover_rate = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_turnover_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_turnover_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_turnover_rate;
        if (input->ExpectTag(42)) goto parse_turnover;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild turnover = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_turnover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_turnover()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_turnover;
        if (input->ExpectTag(50)) goto parse_tot_value;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild tot_value = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_tot_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tot_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_tot_value;
        if (input->ExpectTag(58)) goto parse_cir_value;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild cir_value = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cir_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cir_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_cir_value;
        if (input->ExpectTag(66)) goto parse_avg_stock;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild avg_stock = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_avg_stock:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avg_stock()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_avg_stock;
        if (input->ExpectTag(74)) goto parse_volume;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild volume = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_volume;
        if (input->ExpectTag(82)) goto parse_rise;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild rise = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_rise;
        if (input->ExpectTag(90)) goto parse_fall;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild fall = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fall:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fall()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_fall;
        if (input->ExpectTag(98)) goto parse_speed_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild speed_rate = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_speed_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_speed_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_speed_rate;
        if (input->ExpectTag(106)) goto parse_three_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild three_rate = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_three_rate;
        if (input->ExpectTag(114)) goto parse_five_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild five_rate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_five_rate;
        if (input->ExpectTag(122)) goto parse_three_tuv_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild three_tuv_rate = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_tuv_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_tuv_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_three_tuv_rate;
        if (input->ExpectTag(130)) goto parse_five_tuv_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild five_tuv_rate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_tuv_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_tuv_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_five_tuv_rate;
        if (input->ExpectTag(138)) goto parse_rise_day_num;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild rise_day_num = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise_day_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise_day_num()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_rise_day_num;
        if (input->ExpectTag(146)) goto parse_block_name;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild block_name = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_block_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_block_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_block_name;
        if (input->ExpectTag(154)) goto parse_year_rate;
        break;
      }
      
      // repeated .QuoteProto.BlockFeild year_rate = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_year_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_year_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_year_rate;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.BlockMsg quote_info = 1;
  for (int i = 0; i < this->quote_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->quote_info(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild block_rate = 2;
  for (int i = 0; i < this->block_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->block_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild up_down_ratio = 3;
  for (int i = 0; i < this->up_down_ratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->up_down_ratio(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild turnover_rate = 4;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->turnover_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild turnover = 5;
  for (int i = 0; i < this->turnover_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->turnover(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild tot_value = 6;
  for (int i = 0; i < this->tot_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->tot_value(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild cir_value = 7;
  for (int i = 0; i < this->cir_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->cir_value(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild avg_stock = 8;
  for (int i = 0; i < this->avg_stock_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->avg_stock(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild volume = 9;
  for (int i = 0; i < this->volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->volume(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild rise = 10;
  for (int i = 0; i < this->rise_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->rise(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild fall = 11;
  for (int i = 0; i < this->fall_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->fall(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild speed_rate = 12;
  for (int i = 0; i < this->speed_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->speed_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild three_rate = 13;
  for (int i = 0; i < this->three_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->three_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild five_rate = 14;
  for (int i = 0; i < this->five_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->five_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild three_tuv_rate = 15;
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->three_tuv_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild five_tuv_rate = 16;
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->five_tuv_rate(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild rise_day_num = 17;
  for (int i = 0; i < this->rise_day_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->rise_day_num(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild block_name = 18;
  for (int i = 0; i < this->block_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->block_name(i), output);
  }
  
  // repeated .QuoteProto.BlockFeild year_rate = 19;
  for (int i = 0; i < this->year_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->year_rate(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BlockInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.BlockMsg quote_info = 1;
  for (int i = 0; i < this->quote_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->quote_info(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild block_rate = 2;
  for (int i = 0; i < this->block_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->block_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild up_down_ratio = 3;
  for (int i = 0; i < this->up_down_ratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->up_down_ratio(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild turnover_rate = 4;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->turnover_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild turnover = 5;
  for (int i = 0; i < this->turnover_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->turnover(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild tot_value = 6;
  for (int i = 0; i < this->tot_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->tot_value(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild cir_value = 7;
  for (int i = 0; i < this->cir_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->cir_value(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild avg_stock = 8;
  for (int i = 0; i < this->avg_stock_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->avg_stock(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild volume = 9;
  for (int i = 0; i < this->volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->volume(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild rise = 10;
  for (int i = 0; i < this->rise_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->rise(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild fall = 11;
  for (int i = 0; i < this->fall_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->fall(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild speed_rate = 12;
  for (int i = 0; i < this->speed_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->speed_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild three_rate = 13;
  for (int i = 0; i < this->three_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->three_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild five_rate = 14;
  for (int i = 0; i < this->five_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->five_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild three_tuv_rate = 15;
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->three_tuv_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild five_tuv_rate = 16;
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->five_tuv_rate(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild rise_day_num = 17;
  for (int i = 0; i < this->rise_day_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->rise_day_num(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild block_name = 18;
  for (int i = 0; i < this->block_name_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->block_name(i), target);
  }
  
  // repeated .QuoteProto.BlockFeild year_rate = 19;
  for (int i = 0; i < this->year_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->year_rate(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BlockInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.BlockMsg quote_info = 1;
  total_size += 1 * this->quote_info_size();
  for (int i = 0; i < this->quote_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quote_info(i));
  }
  
  // repeated .QuoteProto.BlockFeild block_rate = 2;
  total_size += 1 * this->block_rate_size();
  for (int i = 0; i < this->block_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->block_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild up_down_ratio = 3;
  total_size += 1 * this->up_down_ratio_size();
  for (int i = 0; i < this->up_down_ratio_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->up_down_ratio(i));
  }
  
  // repeated .QuoteProto.BlockFeild turnover_rate = 4;
  total_size += 1 * this->turnover_rate_size();
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->turnover_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild turnover = 5;
  total_size += 1 * this->turnover_size();
  for (int i = 0; i < this->turnover_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->turnover(i));
  }
  
  // repeated .QuoteProto.BlockFeild tot_value = 6;
  total_size += 1 * this->tot_value_size();
  for (int i = 0; i < this->tot_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->tot_value(i));
  }
  
  // repeated .QuoteProto.BlockFeild cir_value = 7;
  total_size += 1 * this->cir_value_size();
  for (int i = 0; i < this->cir_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cir_value(i));
  }
  
  // repeated .QuoteProto.BlockFeild avg_stock = 8;
  total_size += 1 * this->avg_stock_size();
  for (int i = 0; i < this->avg_stock_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->avg_stock(i));
  }
  
  // repeated .QuoteProto.BlockFeild volume = 9;
  total_size += 1 * this->volume_size();
  for (int i = 0; i < this->volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->volume(i));
  }
  
  // repeated .QuoteProto.BlockFeild rise = 10;
  total_size += 1 * this->rise_size();
  for (int i = 0; i < this->rise_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise(i));
  }
  
  // repeated .QuoteProto.BlockFeild fall = 11;
  total_size += 1 * this->fall_size();
  for (int i = 0; i < this->fall_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fall(i));
  }
  
  // repeated .QuoteProto.BlockFeild speed_rate = 12;
  total_size += 1 * this->speed_rate_size();
  for (int i = 0; i < this->speed_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->speed_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild three_rate = 13;
  total_size += 1 * this->three_rate_size();
  for (int i = 0; i < this->three_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild five_rate = 14;
  total_size += 1 * this->five_rate_size();
  for (int i = 0; i < this->five_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild three_tuv_rate = 15;
  total_size += 1 * this->three_tuv_rate_size();
  for (int i = 0; i < this->three_tuv_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_tuv_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild five_tuv_rate = 16;
  total_size += 2 * this->five_tuv_rate_size();
  for (int i = 0; i < this->five_tuv_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_tuv_rate(i));
  }
  
  // repeated .QuoteProto.BlockFeild rise_day_num = 17;
  total_size += 2 * this->rise_day_num_size();
  for (int i = 0; i < this->rise_day_num_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise_day_num(i));
  }
  
  // repeated .QuoteProto.BlockFeild block_name = 18;
  total_size += 2 * this->block_name_size();
  for (int i = 0; i < this->block_name_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->block_name(i));
  }
  
  // repeated .QuoteProto.BlockFeild year_rate = 19;
  total_size += 2 * this->year_rate_size();
  for (int i = 0; i < this->year_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->year_rate(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BlockInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BlockInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BlockInfo::MergeFrom(const BlockInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  quote_info_.MergeFrom(from.quote_info_);
  block_rate_.MergeFrom(from.block_rate_);
  up_down_ratio_.MergeFrom(from.up_down_ratio_);
  turnover_rate_.MergeFrom(from.turnover_rate_);
  turnover_.MergeFrom(from.turnover_);
  tot_value_.MergeFrom(from.tot_value_);
  cir_value_.MergeFrom(from.cir_value_);
  avg_stock_.MergeFrom(from.avg_stock_);
  volume_.MergeFrom(from.volume_);
  rise_.MergeFrom(from.rise_);
  fall_.MergeFrom(from.fall_);
  speed_rate_.MergeFrom(from.speed_rate_);
  three_rate_.MergeFrom(from.three_rate_);
  five_rate_.MergeFrom(from.five_rate_);
  three_tuv_rate_.MergeFrom(from.three_tuv_rate_);
  five_tuv_rate_.MergeFrom(from.five_tuv_rate_);
  rise_day_num_.MergeFrom(from.rise_day_num_);
  block_name_.MergeFrom(from.block_name_);
  year_rate_.MergeFrom(from.year_rate_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockInfo::CopyFrom(const BlockInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockInfo::IsInitialized() const {
  
  for (int i = 0; i < block_rate_size(); i++) {
    if (!this->block_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < up_down_ratio_size(); i++) {
    if (!this->up_down_ratio(i).IsInitialized()) return false;
  }
  for (int i = 0; i < turnover_rate_size(); i++) {
    if (!this->turnover_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < turnover_size(); i++) {
    if (!this->turnover(i).IsInitialized()) return false;
  }
  for (int i = 0; i < tot_value_size(); i++) {
    if (!this->tot_value(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cir_value_size(); i++) {
    if (!this->cir_value(i).IsInitialized()) return false;
  }
  for (int i = 0; i < avg_stock_size(); i++) {
    if (!this->avg_stock(i).IsInitialized()) return false;
  }
  for (int i = 0; i < volume_size(); i++) {
    if (!this->volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < rise_size(); i++) {
    if (!this->rise(i).IsInitialized()) return false;
  }
  for (int i = 0; i < fall_size(); i++) {
    if (!this->fall(i).IsInitialized()) return false;
  }
  for (int i = 0; i < speed_rate_size(); i++) {
    if (!this->speed_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_rate_size(); i++) {
    if (!this->three_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_rate_size(); i++) {
    if (!this->five_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_tuv_rate_size(); i++) {
    if (!this->three_tuv_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_tuv_rate_size(); i++) {
    if (!this->five_tuv_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < rise_day_num_size(); i++) {
    if (!this->rise_day_num(i).IsInitialized()) return false;
  }
  for (int i = 0; i < block_name_size(); i++) {
    if (!this->block_name(i).IsInitialized()) return false;
  }
  for (int i = 0; i < year_rate_size(); i++) {
    if (!this->year_rate(i).IsInitialized()) return false;
  }
  return true;
}

void BlockInfo::Swap(BlockInfo* other) {
  if (other != this) {
    quote_info_.Swap(&other->quote_info_);
    block_rate_.Swap(&other->block_rate_);
    up_down_ratio_.Swap(&other->up_down_ratio_);
    turnover_rate_.Swap(&other->turnover_rate_);
    turnover_.Swap(&other->turnover_);
    tot_value_.Swap(&other->tot_value_);
    cir_value_.Swap(&other->cir_value_);
    avg_stock_.Swap(&other->avg_stock_);
    volume_.Swap(&other->volume_);
    rise_.Swap(&other->rise_);
    fall_.Swap(&other->fall_);
    speed_rate_.Swap(&other->speed_rate_);
    three_rate_.Swap(&other->three_rate_);
    five_rate_.Swap(&other->five_rate_);
    three_tuv_rate_.Swap(&other->three_tuv_rate_);
    five_tuv_rate_.Swap(&other->five_tuv_rate_);
    rise_day_num_.Swap(&other->rise_day_num_);
    block_name_.Swap(&other->block_name_);
    year_rate_.Swap(&other->year_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BlockInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BlockInfo_descriptor_;
  metadata.reflection = BlockInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FundInfo::kMoneyInfoFieldNumber;
const int FundInfo::kLastPriceFieldNumber;
const int FundInfo::kRateFieldNumber;
const int FundInfo::kAuctionVolumeFieldNumber;
const int FundInfo::kLeaderMoneyInputFieldNumber;
const int FundInfo::kLeaderMoneyOutputFieldNumber;
const int FundInfo::kLeaderMoneyNetputFieldNumber;
const int FundInfo::kLeaderMoneyRateFieldNumber;
const int FundInfo::kMaxordMoneyInputFieldNumber;
const int FundInfo::kMaxordMoneyOutputFieldNumber;
const int FundInfo::kMaxordMoneyNetputFieldNumber;
const int FundInfo::kMaxordMoneyRateFieldNumber;
const int FundInfo::kBigordMoneyInputFieldNumber;
const int FundInfo::kBigordMoneyOutputFieldNumber;
const int FundInfo::kBigordMoneyNetputFieldNumber;
const int FundInfo::kBigordMoneyRateFieldNumber;
const int FundInfo::kMidordMoneyInputFieldNumber;
const int FundInfo::kMidordMoneyOutputFieldNumber;
const int FundInfo::kMidordMoneyNetputFieldNumber;
const int FundInfo::kMidordMoneyRateFieldNumber;
const int FundInfo::kMinordMoneyInputFieldNumber;
const int FundInfo::kMinordMoneyOutputFieldNumber;
const int FundInfo::kMinordMoneyNetputFieldNumber;
const int FundInfo::kMinordMoneyRateFieldNumber;
const int FundInfo::kThreeLeaderMoneyNetputFieldNumber;
const int FundInfo::kFiveLeaderMoneyNetputFieldNumber;
const int FundInfo::kAuctionTurnoverFieldNumber;
const int FundInfo::kSecurityNameFieldNumber;
const int FundInfo::kUpDownPriceFieldNumber;
#endif  // !_MSC_VER

FundInfo::FundInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FundInfo::InitAsDefaultInstance() {
}

FundInfo::FundInfo(const FundInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FundInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FundInfo::~FundInfo() {
  SharedDtor();
}

void FundInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FundInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FundInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FundInfo_descriptor_;
}

const FundInfo& FundInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

FundInfo* FundInfo::default_instance_ = NULL;

FundInfo* FundInfo::New() const {
  return new FundInfo;
}

void FundInfo::Clear() {
  money_info_.Clear();
  last_price_.Clear();
  rate_.Clear();
  auction_volume_.Clear();
  leader_money_input_.Clear();
  leader_money_output_.Clear();
  leader_money_netput_.Clear();
  leader_money_rate_.Clear();
  maxord_money_input_.Clear();
  maxord_money_output_.Clear();
  maxord_money_netput_.Clear();
  maxord_money_rate_.Clear();
  bigord_money_input_.Clear();
  bigord_money_output_.Clear();
  bigord_money_netput_.Clear();
  bigord_money_rate_.Clear();
  midord_money_input_.Clear();
  midord_money_output_.Clear();
  midord_money_netput_.Clear();
  midord_money_rate_.Clear();
  minord_money_input_.Clear();
  minord_money_output_.Clear();
  minord_money_netput_.Clear();
  minord_money_rate_.Clear();
  three_leader_money_netput_.Clear();
  five_leader_money_netput_.Clear();
  auction_turnover_.Clear();
  security_name_.Clear();
  up_down_price_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FundInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.MoneyMsg money_info = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_money_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_money_info()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_money_info;
        if (input->ExpectTag(18)) goto parse_last_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild last_price = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_last_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_last_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_last_price;
        if (input->ExpectTag(26)) goto parse_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_rate;
        if (input->ExpectTag(34)) goto parse_auction_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild auction_volume = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_auction_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auction_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_auction_volume;
        if (input->ExpectTag(42)) goto parse_leader_money_input;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_money_input = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_money_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_money_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_leader_money_input;
        if (input->ExpectTag(50)) goto parse_leader_money_output;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_money_output = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_money_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_money_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_leader_money_output;
        if (input->ExpectTag(58)) goto parse_leader_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_money_netput = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_leader_money_netput;
        if (input->ExpectTag(66)) goto parse_leader_money_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_money_rate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_money_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_money_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_leader_money_rate;
        if (input->ExpectTag(74)) goto parse_maxord_money_input;
        break;
      }
      
      // repeated .QuoteProto.RankFeild maxord_money_input = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxord_money_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maxord_money_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_maxord_money_input;
        if (input->ExpectTag(82)) goto parse_maxord_money_output;
        break;
      }
      
      // repeated .QuoteProto.RankFeild maxord_money_output = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxord_money_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maxord_money_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_maxord_money_output;
        if (input->ExpectTag(90)) goto parse_maxord_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild maxord_money_netput = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxord_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maxord_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_maxord_money_netput;
        if (input->ExpectTag(98)) goto parse_maxord_money_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild maxord_money_rate = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_maxord_money_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_maxord_money_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_maxord_money_rate;
        if (input->ExpectTag(106)) goto parse_bigord_money_input;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bigord_money_input = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bigord_money_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bigord_money_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_bigord_money_input;
        if (input->ExpectTag(114)) goto parse_bigord_money_output;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bigord_money_output = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bigord_money_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bigord_money_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_bigord_money_output;
        if (input->ExpectTag(122)) goto parse_bigord_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bigord_money_netput = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bigord_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bigord_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_bigord_money_netput;
        if (input->ExpectTag(130)) goto parse_bigord_money_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bigord_money_rate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bigord_money_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bigord_money_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_bigord_money_rate;
        if (input->ExpectTag(138)) goto parse_midord_money_input;
        break;
      }
      
      // repeated .QuoteProto.RankFeild midord_money_input = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_midord_money_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_midord_money_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_midord_money_input;
        if (input->ExpectTag(146)) goto parse_midord_money_output;
        break;
      }
      
      // repeated .QuoteProto.RankFeild midord_money_output = 18;
      case 18: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_midord_money_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_midord_money_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(146)) goto parse_midord_money_output;
        if (input->ExpectTag(154)) goto parse_midord_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild midord_money_netput = 19;
      case 19: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_midord_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_midord_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(154)) goto parse_midord_money_netput;
        if (input->ExpectTag(162)) goto parse_midord_money_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild midord_money_rate = 20;
      case 20: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_midord_money_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_midord_money_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(162)) goto parse_midord_money_rate;
        if (input->ExpectTag(170)) goto parse_minord_money_input;
        break;
      }
      
      // repeated .QuoteProto.RankFeild minord_money_input = 21;
      case 21: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minord_money_input:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minord_money_input()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(170)) goto parse_minord_money_input;
        if (input->ExpectTag(178)) goto parse_minord_money_output;
        break;
      }
      
      // repeated .QuoteProto.RankFeild minord_money_output = 22;
      case 22: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minord_money_output:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minord_money_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(178)) goto parse_minord_money_output;
        if (input->ExpectTag(186)) goto parse_minord_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild minord_money_netput = 23;
      case 23: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minord_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minord_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(186)) goto parse_minord_money_netput;
        if (input->ExpectTag(194)) goto parse_minord_money_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild minord_money_rate = 24;
      case 24: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_minord_money_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_minord_money_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(194)) goto parse_minord_money_rate;
        if (input->ExpectTag(202)) goto parse_three_leader_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild three_leader_money_netput = 25;
      case 25: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_leader_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_leader_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(202)) goto parse_three_leader_money_netput;
        if (input->ExpectTag(210)) goto parse_five_leader_money_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild five_leader_money_netput = 26;
      case 26: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_leader_money_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_leader_money_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(210)) goto parse_five_leader_money_netput;
        if (input->ExpectTag(218)) goto parse_auction_turnover;
        break;
      }
      
      // repeated .QuoteProto.RankFeild auction_turnover = 27;
      case 27: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_auction_turnover:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_auction_turnover()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(218)) goto parse_auction_turnover;
        if (input->ExpectTag(226)) goto parse_security_name;
        break;
      }
      
      // repeated .QuoteProto.RankFeild security_name = 28;
      case 28: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_security_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_security_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(226)) goto parse_security_name;
        if (input->ExpectTag(234)) goto parse_up_down_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild up_down_price = 29;
      case 29: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_up_down_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_up_down_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(234)) goto parse_up_down_price;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FundInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.MoneyMsg money_info = 1;
  for (int i = 0; i < this->money_info_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->money_info(i), output);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 2;
  for (int i = 0; i < this->last_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->last_price(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rate = 3;
  for (int i = 0; i < this->rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild auction_volume = 4;
  for (int i = 0; i < this->auction_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->auction_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_input = 5;
  for (int i = 0; i < this->leader_money_input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->leader_money_input(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_output = 6;
  for (int i = 0; i < this->leader_money_output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->leader_money_output(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_netput = 7;
  for (int i = 0; i < this->leader_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->leader_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_rate = 8;
  for (int i = 0; i < this->leader_money_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->leader_money_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_input = 9;
  for (int i = 0; i < this->maxord_money_input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->maxord_money_input(i), output);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_output = 10;
  for (int i = 0; i < this->maxord_money_output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->maxord_money_output(i), output);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_netput = 11;
  for (int i = 0; i < this->maxord_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->maxord_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_rate = 12;
  for (int i = 0; i < this->maxord_money_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->maxord_money_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_input = 13;
  for (int i = 0; i < this->bigord_money_input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->bigord_money_input(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_output = 14;
  for (int i = 0; i < this->bigord_money_output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->bigord_money_output(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_netput = 15;
  for (int i = 0; i < this->bigord_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->bigord_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_rate = 16;
  for (int i = 0; i < this->bigord_money_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->bigord_money_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_input = 17;
  for (int i = 0; i < this->midord_money_input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->midord_money_input(i), output);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_output = 18;
  for (int i = 0; i < this->midord_money_output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->midord_money_output(i), output);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_netput = 19;
  for (int i = 0; i < this->midord_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, this->midord_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_rate = 20;
  for (int i = 0; i < this->midord_money_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->midord_money_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_input = 21;
  for (int i = 0; i < this->minord_money_input_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->minord_money_input(i), output);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_output = 22;
  for (int i = 0; i < this->minord_money_output_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, this->minord_money_output(i), output);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_netput = 23;
  for (int i = 0; i < this->minord_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23, this->minord_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_rate = 24;
  for (int i = 0; i < this->minord_money_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->minord_money_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild three_leader_money_netput = 25;
  for (int i = 0; i < this->three_leader_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->three_leader_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild five_leader_money_netput = 26;
  for (int i = 0; i < this->five_leader_money_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26, this->five_leader_money_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild auction_turnover = 27;
  for (int i = 0; i < this->auction_turnover_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27, this->auction_turnover(i), output);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 28;
  for (int i = 0; i < this->security_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28, this->security_name(i), output);
  }
  
  // repeated .QuoteProto.RankFeild up_down_price = 29;
  for (int i = 0; i < this->up_down_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29, this->up_down_price(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FundInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.MoneyMsg money_info = 1;
  for (int i = 0; i < this->money_info_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->money_info(i), target);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 2;
  for (int i = 0; i < this->last_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->last_price(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rate = 3;
  for (int i = 0; i < this->rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild auction_volume = 4;
  for (int i = 0; i < this->auction_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->auction_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_input = 5;
  for (int i = 0; i < this->leader_money_input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->leader_money_input(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_output = 6;
  for (int i = 0; i < this->leader_money_output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->leader_money_output(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_netput = 7;
  for (int i = 0; i < this->leader_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->leader_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_money_rate = 8;
  for (int i = 0; i < this->leader_money_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->leader_money_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_input = 9;
  for (int i = 0; i < this->maxord_money_input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->maxord_money_input(i), target);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_output = 10;
  for (int i = 0; i < this->maxord_money_output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->maxord_money_output(i), target);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_netput = 11;
  for (int i = 0; i < this->maxord_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->maxord_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_rate = 12;
  for (int i = 0; i < this->maxord_money_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->maxord_money_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_input = 13;
  for (int i = 0; i < this->bigord_money_input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->bigord_money_input(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_output = 14;
  for (int i = 0; i < this->bigord_money_output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->bigord_money_output(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_netput = 15;
  for (int i = 0; i < this->bigord_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->bigord_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_rate = 16;
  for (int i = 0; i < this->bigord_money_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->bigord_money_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_input = 17;
  for (int i = 0; i < this->midord_money_input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->midord_money_input(i), target);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_output = 18;
  for (int i = 0; i < this->midord_money_output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        18, this->midord_money_output(i), target);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_netput = 19;
  for (int i = 0; i < this->midord_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        19, this->midord_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild midord_money_rate = 20;
  for (int i = 0; i < this->midord_money_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        20, this->midord_money_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_input = 21;
  for (int i = 0; i < this->minord_money_input_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        21, this->minord_money_input(i), target);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_output = 22;
  for (int i = 0; i < this->minord_money_output_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        22, this->minord_money_output(i), target);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_netput = 23;
  for (int i = 0; i < this->minord_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        23, this->minord_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild minord_money_rate = 24;
  for (int i = 0; i < this->minord_money_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        24, this->minord_money_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild three_leader_money_netput = 25;
  for (int i = 0; i < this->three_leader_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        25, this->three_leader_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild five_leader_money_netput = 26;
  for (int i = 0; i < this->five_leader_money_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        26, this->five_leader_money_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild auction_turnover = 27;
  for (int i = 0; i < this->auction_turnover_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        27, this->auction_turnover(i), target);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 28;
  for (int i = 0; i < this->security_name_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        28, this->security_name(i), target);
  }
  
  // repeated .QuoteProto.RankFeild up_down_price = 29;
  for (int i = 0; i < this->up_down_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        29, this->up_down_price(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FundInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.MoneyMsg money_info = 1;
  total_size += 1 * this->money_info_size();
  for (int i = 0; i < this->money_info_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->money_info(i));
  }
  
  // repeated .QuoteProto.RankFeild last_price = 2;
  total_size += 1 * this->last_price_size();
  for (int i = 0; i < this->last_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->last_price(i));
  }
  
  // repeated .QuoteProto.RankFeild rate = 3;
  total_size += 1 * this->rate_size();
  for (int i = 0; i < this->rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rate(i));
  }
  
  // repeated .QuoteProto.RankFeild auction_volume = 4;
  total_size += 1 * this->auction_volume_size();
  for (int i = 0; i < this->auction_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->auction_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_money_input = 5;
  total_size += 1 * this->leader_money_input_size();
  for (int i = 0; i < this->leader_money_input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_money_input(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_money_output = 6;
  total_size += 1 * this->leader_money_output_size();
  for (int i = 0; i < this->leader_money_output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_money_output(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_money_netput = 7;
  total_size += 1 * this->leader_money_netput_size();
  for (int i = 0; i < this->leader_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_money_rate = 8;
  total_size += 1 * this->leader_money_rate_size();
  for (int i = 0; i < this->leader_money_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_money_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_input = 9;
  total_size += 1 * this->maxord_money_input_size();
  for (int i = 0; i < this->maxord_money_input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maxord_money_input(i));
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_output = 10;
  total_size += 1 * this->maxord_money_output_size();
  for (int i = 0; i < this->maxord_money_output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maxord_money_output(i));
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_netput = 11;
  total_size += 1 * this->maxord_money_netput_size();
  for (int i = 0; i < this->maxord_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maxord_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild maxord_money_rate = 12;
  total_size += 1 * this->maxord_money_rate_size();
  for (int i = 0; i < this->maxord_money_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->maxord_money_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_input = 13;
  total_size += 1 * this->bigord_money_input_size();
  for (int i = 0; i < this->bigord_money_input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bigord_money_input(i));
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_output = 14;
  total_size += 1 * this->bigord_money_output_size();
  for (int i = 0; i < this->bigord_money_output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bigord_money_output(i));
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_netput = 15;
  total_size += 1 * this->bigord_money_netput_size();
  for (int i = 0; i < this->bigord_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bigord_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild bigord_money_rate = 16;
  total_size += 2 * this->bigord_money_rate_size();
  for (int i = 0; i < this->bigord_money_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bigord_money_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild midord_money_input = 17;
  total_size += 2 * this->midord_money_input_size();
  for (int i = 0; i < this->midord_money_input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->midord_money_input(i));
  }
  
  // repeated .QuoteProto.RankFeild midord_money_output = 18;
  total_size += 2 * this->midord_money_output_size();
  for (int i = 0; i < this->midord_money_output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->midord_money_output(i));
  }
  
  // repeated .QuoteProto.RankFeild midord_money_netput = 19;
  total_size += 2 * this->midord_money_netput_size();
  for (int i = 0; i < this->midord_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->midord_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild midord_money_rate = 20;
  total_size += 2 * this->midord_money_rate_size();
  for (int i = 0; i < this->midord_money_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->midord_money_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild minord_money_input = 21;
  total_size += 2 * this->minord_money_input_size();
  for (int i = 0; i < this->minord_money_input_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minord_money_input(i));
  }
  
  // repeated .QuoteProto.RankFeild minord_money_output = 22;
  total_size += 2 * this->minord_money_output_size();
  for (int i = 0; i < this->minord_money_output_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minord_money_output(i));
  }
  
  // repeated .QuoteProto.RankFeild minord_money_netput = 23;
  total_size += 2 * this->minord_money_netput_size();
  for (int i = 0; i < this->minord_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minord_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild minord_money_rate = 24;
  total_size += 2 * this->minord_money_rate_size();
  for (int i = 0; i < this->minord_money_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->minord_money_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild three_leader_money_netput = 25;
  total_size += 2 * this->three_leader_money_netput_size();
  for (int i = 0; i < this->three_leader_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_leader_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild five_leader_money_netput = 26;
  total_size += 2 * this->five_leader_money_netput_size();
  for (int i = 0; i < this->five_leader_money_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_leader_money_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild auction_turnover = 27;
  total_size += 2 * this->auction_turnover_size();
  for (int i = 0; i < this->auction_turnover_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->auction_turnover(i));
  }
  
  // repeated .QuoteProto.RankFeild security_name = 28;
  total_size += 2 * this->security_name_size();
  for (int i = 0; i < this->security_name_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->security_name(i));
  }
  
  // repeated .QuoteProto.RankFeild up_down_price = 29;
  total_size += 2 * this->up_down_price_size();
  for (int i = 0; i < this->up_down_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->up_down_price(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FundInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FundInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FundInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FundInfo::MergeFrom(const FundInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  money_info_.MergeFrom(from.money_info_);
  last_price_.MergeFrom(from.last_price_);
  rate_.MergeFrom(from.rate_);
  auction_volume_.MergeFrom(from.auction_volume_);
  leader_money_input_.MergeFrom(from.leader_money_input_);
  leader_money_output_.MergeFrom(from.leader_money_output_);
  leader_money_netput_.MergeFrom(from.leader_money_netput_);
  leader_money_rate_.MergeFrom(from.leader_money_rate_);
  maxord_money_input_.MergeFrom(from.maxord_money_input_);
  maxord_money_output_.MergeFrom(from.maxord_money_output_);
  maxord_money_netput_.MergeFrom(from.maxord_money_netput_);
  maxord_money_rate_.MergeFrom(from.maxord_money_rate_);
  bigord_money_input_.MergeFrom(from.bigord_money_input_);
  bigord_money_output_.MergeFrom(from.bigord_money_output_);
  bigord_money_netput_.MergeFrom(from.bigord_money_netput_);
  bigord_money_rate_.MergeFrom(from.bigord_money_rate_);
  midord_money_input_.MergeFrom(from.midord_money_input_);
  midord_money_output_.MergeFrom(from.midord_money_output_);
  midord_money_netput_.MergeFrom(from.midord_money_netput_);
  midord_money_rate_.MergeFrom(from.midord_money_rate_);
  minord_money_input_.MergeFrom(from.minord_money_input_);
  minord_money_output_.MergeFrom(from.minord_money_output_);
  minord_money_netput_.MergeFrom(from.minord_money_netput_);
  minord_money_rate_.MergeFrom(from.minord_money_rate_);
  three_leader_money_netput_.MergeFrom(from.three_leader_money_netput_);
  five_leader_money_netput_.MergeFrom(from.five_leader_money_netput_);
  auction_turnover_.MergeFrom(from.auction_turnover_);
  security_name_.MergeFrom(from.security_name_);
  up_down_price_.MergeFrom(from.up_down_price_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FundInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FundInfo::CopyFrom(const FundInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FundInfo::IsInitialized() const {
  
  for (int i = 0; i < last_price_size(); i++) {
    if (!this->last_price(i).IsInitialized()) return false;
  }
  for (int i = 0; i < rate_size(); i++) {
    if (!this->rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < auction_volume_size(); i++) {
    if (!this->auction_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_money_input_size(); i++) {
    if (!this->leader_money_input(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_money_output_size(); i++) {
    if (!this->leader_money_output(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_money_netput_size(); i++) {
    if (!this->leader_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_money_rate_size(); i++) {
    if (!this->leader_money_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < maxord_money_input_size(); i++) {
    if (!this->maxord_money_input(i).IsInitialized()) return false;
  }
  for (int i = 0; i < maxord_money_output_size(); i++) {
    if (!this->maxord_money_output(i).IsInitialized()) return false;
  }
  for (int i = 0; i < maxord_money_netput_size(); i++) {
    if (!this->maxord_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < maxord_money_rate_size(); i++) {
    if (!this->maxord_money_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bigord_money_input_size(); i++) {
    if (!this->bigord_money_input(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bigord_money_output_size(); i++) {
    if (!this->bigord_money_output(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bigord_money_netput_size(); i++) {
    if (!this->bigord_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bigord_money_rate_size(); i++) {
    if (!this->bigord_money_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < midord_money_input_size(); i++) {
    if (!this->midord_money_input(i).IsInitialized()) return false;
  }
  for (int i = 0; i < midord_money_output_size(); i++) {
    if (!this->midord_money_output(i).IsInitialized()) return false;
  }
  for (int i = 0; i < midord_money_netput_size(); i++) {
    if (!this->midord_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < midord_money_rate_size(); i++) {
    if (!this->midord_money_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minord_money_input_size(); i++) {
    if (!this->minord_money_input(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minord_money_output_size(); i++) {
    if (!this->minord_money_output(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minord_money_netput_size(); i++) {
    if (!this->minord_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < minord_money_rate_size(); i++) {
    if (!this->minord_money_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_leader_money_netput_size(); i++) {
    if (!this->three_leader_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_leader_money_netput_size(); i++) {
    if (!this->five_leader_money_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < auction_turnover_size(); i++) {
    if (!this->auction_turnover(i).IsInitialized()) return false;
  }
  for (int i = 0; i < security_name_size(); i++) {
    if (!this->security_name(i).IsInitialized()) return false;
  }
  for (int i = 0; i < up_down_price_size(); i++) {
    if (!this->up_down_price(i).IsInitialized()) return false;
  }
  return true;
}

void FundInfo::Swap(FundInfo* other) {
  if (other != this) {
    money_info_.Swap(&other->money_info_);
    last_price_.Swap(&other->last_price_);
    rate_.Swap(&other->rate_);
    auction_volume_.Swap(&other->auction_volume_);
    leader_money_input_.Swap(&other->leader_money_input_);
    leader_money_output_.Swap(&other->leader_money_output_);
    leader_money_netput_.Swap(&other->leader_money_netput_);
    leader_money_rate_.Swap(&other->leader_money_rate_);
    maxord_money_input_.Swap(&other->maxord_money_input_);
    maxord_money_output_.Swap(&other->maxord_money_output_);
    maxord_money_netput_.Swap(&other->maxord_money_netput_);
    maxord_money_rate_.Swap(&other->maxord_money_rate_);
    bigord_money_input_.Swap(&other->bigord_money_input_);
    bigord_money_output_.Swap(&other->bigord_money_output_);
    bigord_money_netput_.Swap(&other->bigord_money_netput_);
    bigord_money_rate_.Swap(&other->bigord_money_rate_);
    midord_money_input_.Swap(&other->midord_money_input_);
    midord_money_output_.Swap(&other->midord_money_output_);
    midord_money_netput_.Swap(&other->midord_money_netput_);
    midord_money_rate_.Swap(&other->midord_money_rate_);
    minord_money_input_.Swap(&other->minord_money_input_);
    minord_money_output_.Swap(&other->minord_money_output_);
    minord_money_netput_.Swap(&other->minord_money_netput_);
    minord_money_rate_.Swap(&other->minord_money_rate_);
    three_leader_money_netput_.Swap(&other->three_leader_money_netput_);
    five_leader_money_netput_.Swap(&other->five_leader_money_netput_);
    auction_turnover_.Swap(&other->auction_turnover_);
    security_name_.Swap(&other->security_name_);
    up_down_price_.Swap(&other->up_down_price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FundInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FundInfo_descriptor_;
  metadata.reflection = FundInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BidInfo::kBidMsgFieldNumber;
const int BidInfo::kFundFieldNumber;
const int BidInfo::kQuantityThanFieldNumber;
const int BidInfo::kBiddingRiseFieldNumber;
const int BidInfo::kYesterdayRateFieldNumber;
#endif  // !_MSC_VER

BidInfo::BidInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidInfo::InitAsDefaultInstance() {
}

BidInfo::BidInfo(const BidInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidInfo::~BidInfo() {
  SharedDtor();
}

void BidInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidInfo_descriptor_;
}

const BidInfo& BidInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

BidInfo* BidInfo::default_instance_ = NULL;

BidInfo* BidInfo::New() const {
  return new BidInfo;
}

void BidInfo::Clear() {
  bid_msg_.Clear();
  fund_.Clear();
  quantity_than_.Clear();
  bidding_rise_.Clear();
  yesterday_rate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.BidMsg bid_msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bid_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bid_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bid_msg;
        if (input->ExpectTag(18)) goto parse_fund;
        break;
      }
      
      // repeated .QuoteProto.RankFeild fund = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fund:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fund()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_fund;
        if (input->ExpectTag(26)) goto parse_quantity_than;
        break;
      }
      
      // repeated .QuoteProto.RankFeild quantity_than = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_quantity_than:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_quantity_than()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_quantity_than;
        if (input->ExpectTag(34)) goto parse_bidding_rise;
        break;
      }
      
      // repeated .QuoteProto.RankFeild bidding_rise = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bidding_rise:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bidding_rise()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bidding_rise;
        if (input->ExpectTag(42)) goto parse_yesterday_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild yesterday_rate = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_yesterday_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_yesterday_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_yesterday_rate;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.BidMsg bid_msg = 1;
  for (int i = 0; i < this->bid_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bid_msg(i), output);
  }
  
  // repeated .QuoteProto.RankFeild fund = 2;
  for (int i = 0; i < this->fund_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->fund(i), output);
  }
  
  // repeated .QuoteProto.RankFeild quantity_than = 3;
  for (int i = 0; i < this->quantity_than_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->quantity_than(i), output);
  }
  
  // repeated .QuoteProto.RankFeild bidding_rise = 4;
  for (int i = 0; i < this->bidding_rise_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bidding_rise(i), output);
  }
  
  // repeated .QuoteProto.RankFeild yesterday_rate = 5;
  for (int i = 0; i < this->yesterday_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->yesterday_rate(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.BidMsg bid_msg = 1;
  for (int i = 0; i < this->bid_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bid_msg(i), target);
  }
  
  // repeated .QuoteProto.RankFeild fund = 2;
  for (int i = 0; i < this->fund_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->fund(i), target);
  }
  
  // repeated .QuoteProto.RankFeild quantity_than = 3;
  for (int i = 0; i < this->quantity_than_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->quantity_than(i), target);
  }
  
  // repeated .QuoteProto.RankFeild bidding_rise = 4;
  for (int i = 0; i < this->bidding_rise_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bidding_rise(i), target);
  }
  
  // repeated .QuoteProto.RankFeild yesterday_rate = 5;
  for (int i = 0; i < this->yesterday_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->yesterday_rate(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.BidMsg bid_msg = 1;
  total_size += 1 * this->bid_msg_size();
  for (int i = 0; i < this->bid_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bid_msg(i));
  }
  
  // repeated .QuoteProto.RankFeild fund = 2;
  total_size += 1 * this->fund_size();
  for (int i = 0; i < this->fund_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fund(i));
  }
  
  // repeated .QuoteProto.RankFeild quantity_than = 3;
  total_size += 1 * this->quantity_than_size();
  for (int i = 0; i < this->quantity_than_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->quantity_than(i));
  }
  
  // repeated .QuoteProto.RankFeild bidding_rise = 4;
  total_size += 1 * this->bidding_rise_size();
  for (int i = 0; i < this->bidding_rise_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bidding_rise(i));
  }
  
  // repeated .QuoteProto.RankFeild yesterday_rate = 5;
  total_size += 1 * this->yesterday_rate_size();
  for (int i = 0; i < this->yesterday_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->yesterday_rate(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidInfo::MergeFrom(const BidInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  bid_msg_.MergeFrom(from.bid_msg_);
  fund_.MergeFrom(from.fund_);
  quantity_than_.MergeFrom(from.quantity_than_);
  bidding_rise_.MergeFrom(from.bidding_rise_);
  yesterday_rate_.MergeFrom(from.yesterday_rate_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidInfo::CopyFrom(const BidInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidInfo::IsInitialized() const {
  
  for (int i = 0; i < fund_size(); i++) {
    if (!this->fund(i).IsInitialized()) return false;
  }
  for (int i = 0; i < quantity_than_size(); i++) {
    if (!this->quantity_than(i).IsInitialized()) return false;
  }
  for (int i = 0; i < bidding_rise_size(); i++) {
    if (!this->bidding_rise(i).IsInitialized()) return false;
  }
  for (int i = 0; i < yesterday_rate_size(); i++) {
    if (!this->yesterday_rate(i).IsInitialized()) return false;
  }
  return true;
}

void BidInfo::Swap(BidInfo* other) {
  if (other != this) {
    bid_msg_.Swap(&other->bid_msg_);
    fund_.Swap(&other->fund_);
    quantity_than_.Swap(&other->quantity_than_);
    bidding_rise_.Swap(&other->bidding_rise_);
    yesterday_rate_.Swap(&other->yesterday_rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidInfo_descriptor_;
  metadata.reflection = BidInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int BidBlockInfo::kBidBlockMsgFieldNumber;
const int BidBlockInfo::kRateFieldNumber;
#endif  // !_MSC_VER

BidBlockInfo::BidBlockInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void BidBlockInfo::InitAsDefaultInstance() {
}

BidBlockInfo::BidBlockInfo(const BidBlockInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void BidBlockInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

BidBlockInfo::~BidBlockInfo() {
  SharedDtor();
}

void BidBlockInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void BidBlockInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BidBlockInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BidBlockInfo_descriptor_;
}

const BidBlockInfo& BidBlockInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

BidBlockInfo* BidBlockInfo::default_instance_ = NULL;

BidBlockInfo* BidBlockInfo::New() const {
  return new BidBlockInfo;
}

void BidBlockInfo::Clear() {
  bid_block_msg_.Clear();
  rate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool BidBlockInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.BidBlockMsg bid_block_msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bid_block_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bid_block_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_bid_block_msg;
        if (input->ExpectTag(18)) goto parse_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rate;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void BidBlockInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.BidBlockMsg bid_block_msg = 1;
  for (int i = 0; i < this->bid_block_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bid_block_msg(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  for (int i = 0; i < this->rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rate(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* BidBlockInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.BidBlockMsg bid_block_msg = 1;
  for (int i = 0; i < this->bid_block_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bid_block_msg(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  for (int i = 0; i < this->rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rate(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int BidBlockInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.BidBlockMsg bid_block_msg = 1;
  total_size += 1 * this->bid_block_msg_size();
  for (int i = 0; i < this->bid_block_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->bid_block_msg(i));
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  total_size += 1 * this->rate_size();
  for (int i = 0; i < this->rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rate(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BidBlockInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const BidBlockInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const BidBlockInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void BidBlockInfo::MergeFrom(const BidBlockInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  bid_block_msg_.MergeFrom(from.bid_block_msg_);
  rate_.MergeFrom(from.rate_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void BidBlockInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BidBlockInfo::CopyFrom(const BidBlockInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BidBlockInfo::IsInitialized() const {
  
  for (int i = 0; i < rate_size(); i++) {
    if (!this->rate(i).IsInitialized()) return false;
  }
  return true;
}

void BidBlockInfo::Swap(BidBlockInfo* other) {
  if (other != this) {
    bid_block_msg_.Swap(&other->bid_block_msg_);
    rate_.Swap(&other->rate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata BidBlockInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = BidBlockInfo_descriptor_;
  metadata.reflection = BidBlockInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FundAbnormalInfo::kAbnormalMsgFieldNumber;
const int FundAbnormalInfo::kRateFieldNumber;
const int FundAbnormalInfo::kThirtyRateFieldNumber;
const int FundAbnormalInfo::kActiveNetputFieldNumber;
const int FundAbnormalInfo::kThirtyActiveNetputFieldNumber;
const int FundAbnormalInfo::kLeaderNetputFieldNumber;
const int FundAbnormalInfo::kAvtiveRateFieldNumber;
const int FundAbnormalInfo::kLeaderRateFieldNumber;
const int FundAbnormalInfo::kTurnoverRateFieldNumber;
const int FundAbnormalInfo::kRatioFieldNumber;
const int FundAbnormalInfo::kCirValueFieldNumber;
const int FundAbnormalInfo::kPedFieldNumber;
const int FundAbnormalInfo::kThreeAvtiveNetputFieldNumber;
const int FundAbnormalInfo::kThreeRateFieldNumber;
const int FundAbnormalInfo::kFiveAvtiveNetputFieldNumber;
const int FundAbnormalInfo::kFiveRateFieldNumber;
const int FundAbnormalInfo::kSecurityNameFieldNumber;
#endif  // !_MSC_VER

FundAbnormalInfo::FundAbnormalInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FundAbnormalInfo::InitAsDefaultInstance() {
}

FundAbnormalInfo::FundAbnormalInfo(const FundAbnormalInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FundAbnormalInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FundAbnormalInfo::~FundAbnormalInfo() {
  SharedDtor();
}

void FundAbnormalInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FundAbnormalInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FundAbnormalInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FundAbnormalInfo_descriptor_;
}

const FundAbnormalInfo& FundAbnormalInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

FundAbnormalInfo* FundAbnormalInfo::default_instance_ = NULL;

FundAbnormalInfo* FundAbnormalInfo::New() const {
  return new FundAbnormalInfo;
}

void FundAbnormalInfo::Clear() {
  abnormal_msg_.Clear();
  rate_.Clear();
  thirty_rate_.Clear();
  active_netput_.Clear();
  thirty_active_netput_.Clear();
  leader_netput_.Clear();
  avtive_rate_.Clear();
  leader_rate_.Clear();
  turnover_rate_.Clear();
  ratio_.Clear();
  cir_value_.Clear();
  ped_.Clear();
  three_avtive_netput_.Clear();
  three_rate_.Clear();
  five_avtive_netput_.Clear();
  five_rate_.Clear();
  security_name_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FundAbnormalInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.FundAbnormalMsg abnormal_msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_abnormal_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_abnormal_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_abnormal_msg;
        if (input->ExpectTag(18)) goto parse_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rate = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rate;
        if (input->ExpectTag(26)) goto parse_thirty_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild thirty_rate = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirty_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_thirty_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_thirty_rate;
        if (input->ExpectTag(34)) goto parse_active_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild active_netput = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_active_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_active_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_active_netput;
        if (input->ExpectTag(42)) goto parse_thirty_active_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild thirty_active_netput = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_thirty_active_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_thirty_active_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_thirty_active_netput;
        if (input->ExpectTag(50)) goto parse_leader_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_netput = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_leader_netput;
        if (input->ExpectTag(58)) goto parse_avtive_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild avtive_rate = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_avtive_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_avtive_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_avtive_rate;
        if (input->ExpectTag(66)) goto parse_leader_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild leader_rate = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_leader_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_leader_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_leader_rate;
        if (input->ExpectTag(74)) goto parse_turnover_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild turnover_rate = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_turnover_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_turnover_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_turnover_rate;
        if (input->ExpectTag(82)) goto parse_ratio;
        break;
      }
      
      // repeated .QuoteProto.RankFeild ratio = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ratio:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ratio()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_ratio;
        if (input->ExpectTag(90)) goto parse_cir_value;
        break;
      }
      
      // repeated .QuoteProto.RankFeild cir_value = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cir_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cir_value()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_cir_value;
        if (input->ExpectTag(98)) goto parse_ped;
        break;
      }
      
      // repeated .QuoteProto.RankFeild ped = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ped:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ped()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_ped;
        if (input->ExpectTag(106)) goto parse_three_avtive_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild three_avtive_netput = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_avtive_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_avtive_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse_three_avtive_netput;
        if (input->ExpectTag(114)) goto parse_three_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild three_rate = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_three_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_three_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse_three_rate;
        if (input->ExpectTag(122)) goto parse_five_avtive_netput;
        break;
      }
      
      // repeated .QuoteProto.RankFeild five_avtive_netput = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_avtive_netput:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_avtive_netput()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse_five_avtive_netput;
        if (input->ExpectTag(130)) goto parse_five_rate;
        break;
      }
      
      // repeated .QuoteProto.RankFeild five_rate = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_five_rate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_five_rate()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(130)) goto parse_five_rate;
        if (input->ExpectTag(138)) goto parse_security_name;
        break;
      }
      
      // repeated .QuoteProto.RankFeild security_name = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_security_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_security_name()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(138)) goto parse_security_name;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FundAbnormalInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.FundAbnormalMsg abnormal_msg = 1;
  for (int i = 0; i < this->abnormal_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->abnormal_msg(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  for (int i = 0; i < this->rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild thirty_rate = 3;
  for (int i = 0; i < this->thirty_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->thirty_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild active_netput = 4;
  for (int i = 0; i < this->active_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->active_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild thirty_active_netput = 5;
  for (int i = 0; i < this->thirty_active_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->thirty_active_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_netput = 6;
  for (int i = 0; i < this->leader_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->leader_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild avtive_rate = 7;
  for (int i = 0; i < this->avtive_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->avtive_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild leader_rate = 8;
  for (int i = 0; i < this->leader_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->leader_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 9;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->turnover_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild ratio = 10;
  for (int i = 0; i < this->ratio_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->ratio(i), output);
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 11;
  for (int i = 0; i < this->cir_value_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->cir_value(i), output);
  }
  
  // repeated .QuoteProto.RankFeild ped = 12;
  for (int i = 0; i < this->ped_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->ped(i), output);
  }
  
  // repeated .QuoteProto.RankFeild three_avtive_netput = 13;
  for (int i = 0; i < this->three_avtive_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->three_avtive_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 14;
  for (int i = 0; i < this->three_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->three_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild five_avtive_netput = 15;
  for (int i = 0; i < this->five_avtive_netput_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->five_avtive_netput(i), output);
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 16;
  for (int i = 0; i < this->five_rate_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, this->five_rate(i), output);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 17;
  for (int i = 0; i < this->security_name_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->security_name(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FundAbnormalInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.FundAbnormalMsg abnormal_msg = 1;
  for (int i = 0; i < this->abnormal_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->abnormal_msg(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  for (int i = 0; i < this->rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild thirty_rate = 3;
  for (int i = 0; i < this->thirty_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->thirty_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild active_netput = 4;
  for (int i = 0; i < this->active_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->active_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild thirty_active_netput = 5;
  for (int i = 0; i < this->thirty_active_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->thirty_active_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_netput = 6;
  for (int i = 0; i < this->leader_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->leader_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild avtive_rate = 7;
  for (int i = 0; i < this->avtive_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->avtive_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild leader_rate = 8;
  for (int i = 0; i < this->leader_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->leader_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 9;
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->turnover_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild ratio = 10;
  for (int i = 0; i < this->ratio_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->ratio(i), target);
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 11;
  for (int i = 0; i < this->cir_value_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->cir_value(i), target);
  }
  
  // repeated .QuoteProto.RankFeild ped = 12;
  for (int i = 0; i < this->ped_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->ped(i), target);
  }
  
  // repeated .QuoteProto.RankFeild three_avtive_netput = 13;
  for (int i = 0; i < this->three_avtive_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->three_avtive_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 14;
  for (int i = 0; i < this->three_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->three_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild five_avtive_netput = 15;
  for (int i = 0; i < this->five_avtive_netput_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->five_avtive_netput(i), target);
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 16;
  for (int i = 0; i < this->five_rate_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        16, this->five_rate(i), target);
  }
  
  // repeated .QuoteProto.RankFeild security_name = 17;
  for (int i = 0; i < this->security_name_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        17, this->security_name(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FundAbnormalInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.FundAbnormalMsg abnormal_msg = 1;
  total_size += 1 * this->abnormal_msg_size();
  for (int i = 0; i < this->abnormal_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->abnormal_msg(i));
  }
  
  // repeated .QuoteProto.RankFeild rate = 2;
  total_size += 1 * this->rate_size();
  for (int i = 0; i < this->rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rate(i));
  }
  
  // repeated .QuoteProto.RankFeild thirty_rate = 3;
  total_size += 1 * this->thirty_rate_size();
  for (int i = 0; i < this->thirty_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->thirty_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild active_netput = 4;
  total_size += 1 * this->active_netput_size();
  for (int i = 0; i < this->active_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->active_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild thirty_active_netput = 5;
  total_size += 1 * this->thirty_active_netput_size();
  for (int i = 0; i < this->thirty_active_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->thirty_active_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_netput = 6;
  total_size += 1 * this->leader_netput_size();
  for (int i = 0; i < this->leader_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild avtive_rate = 7;
  total_size += 1 * this->avtive_rate_size();
  for (int i = 0; i < this->avtive_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->avtive_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild leader_rate = 8;
  total_size += 1 * this->leader_rate_size();
  for (int i = 0; i < this->leader_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->leader_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild turnover_rate = 9;
  total_size += 1 * this->turnover_rate_size();
  for (int i = 0; i < this->turnover_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->turnover_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild ratio = 10;
  total_size += 1 * this->ratio_size();
  for (int i = 0; i < this->ratio_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ratio(i));
  }
  
  // repeated .QuoteProto.RankFeild cir_value = 11;
  total_size += 1 * this->cir_value_size();
  for (int i = 0; i < this->cir_value_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cir_value(i));
  }
  
  // repeated .QuoteProto.RankFeild ped = 12;
  total_size += 1 * this->ped_size();
  for (int i = 0; i < this->ped_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ped(i));
  }
  
  // repeated .QuoteProto.RankFeild three_avtive_netput = 13;
  total_size += 1 * this->three_avtive_netput_size();
  for (int i = 0; i < this->three_avtive_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_avtive_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild three_rate = 14;
  total_size += 1 * this->three_rate_size();
  for (int i = 0; i < this->three_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->three_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild five_avtive_netput = 15;
  total_size += 1 * this->five_avtive_netput_size();
  for (int i = 0; i < this->five_avtive_netput_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_avtive_netput(i));
  }
  
  // repeated .QuoteProto.RankFeild five_rate = 16;
  total_size += 2 * this->five_rate_size();
  for (int i = 0; i < this->five_rate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->five_rate(i));
  }
  
  // repeated .QuoteProto.RankFeild security_name = 17;
  total_size += 2 * this->security_name_size();
  for (int i = 0; i < this->security_name_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->security_name(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FundAbnormalInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FundAbnormalInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FundAbnormalInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FundAbnormalInfo::MergeFrom(const FundAbnormalInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  abnormal_msg_.MergeFrom(from.abnormal_msg_);
  rate_.MergeFrom(from.rate_);
  thirty_rate_.MergeFrom(from.thirty_rate_);
  active_netput_.MergeFrom(from.active_netput_);
  thirty_active_netput_.MergeFrom(from.thirty_active_netput_);
  leader_netput_.MergeFrom(from.leader_netput_);
  avtive_rate_.MergeFrom(from.avtive_rate_);
  leader_rate_.MergeFrom(from.leader_rate_);
  turnover_rate_.MergeFrom(from.turnover_rate_);
  ratio_.MergeFrom(from.ratio_);
  cir_value_.MergeFrom(from.cir_value_);
  ped_.MergeFrom(from.ped_);
  three_avtive_netput_.MergeFrom(from.three_avtive_netput_);
  three_rate_.MergeFrom(from.three_rate_);
  five_avtive_netput_.MergeFrom(from.five_avtive_netput_);
  five_rate_.MergeFrom(from.five_rate_);
  security_name_.MergeFrom(from.security_name_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FundAbnormalInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FundAbnormalInfo::CopyFrom(const FundAbnormalInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FundAbnormalInfo::IsInitialized() const {
  
  for (int i = 0; i < rate_size(); i++) {
    if (!this->rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < thirty_rate_size(); i++) {
    if (!this->thirty_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < active_netput_size(); i++) {
    if (!this->active_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < thirty_active_netput_size(); i++) {
    if (!this->thirty_active_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_netput_size(); i++) {
    if (!this->leader_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < avtive_rate_size(); i++) {
    if (!this->avtive_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < leader_rate_size(); i++) {
    if (!this->leader_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < turnover_rate_size(); i++) {
    if (!this->turnover_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < ratio_size(); i++) {
    if (!this->ratio(i).IsInitialized()) return false;
  }
  for (int i = 0; i < cir_value_size(); i++) {
    if (!this->cir_value(i).IsInitialized()) return false;
  }
  for (int i = 0; i < ped_size(); i++) {
    if (!this->ped(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_avtive_netput_size(); i++) {
    if (!this->three_avtive_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < three_rate_size(); i++) {
    if (!this->three_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_avtive_netput_size(); i++) {
    if (!this->five_avtive_netput(i).IsInitialized()) return false;
  }
  for (int i = 0; i < five_rate_size(); i++) {
    if (!this->five_rate(i).IsInitialized()) return false;
  }
  for (int i = 0; i < security_name_size(); i++) {
    if (!this->security_name(i).IsInitialized()) return false;
  }
  return true;
}

void FundAbnormalInfo::Swap(FundAbnormalInfo* other) {
  if (other != this) {
    abnormal_msg_.Swap(&other->abnormal_msg_);
    rate_.Swap(&other->rate_);
    thirty_rate_.Swap(&other->thirty_rate_);
    active_netput_.Swap(&other->active_netput_);
    thirty_active_netput_.Swap(&other->thirty_active_netput_);
    leader_netput_.Swap(&other->leader_netput_);
    avtive_rate_.Swap(&other->avtive_rate_);
    leader_rate_.Swap(&other->leader_rate_);
    turnover_rate_.Swap(&other->turnover_rate_);
    ratio_.Swap(&other->ratio_);
    cir_value_.Swap(&other->cir_value_);
    ped_.Swap(&other->ped_);
    three_avtive_netput_.Swap(&other->three_avtive_netput_);
    three_rate_.Swap(&other->three_rate_);
    five_avtive_netput_.Swap(&other->five_avtive_netput_);
    five_rate_.Swap(&other->five_rate_);
    security_name_.Swap(&other->security_name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FundAbnormalInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FundAbnormalInfo_descriptor_;
  metadata.reflection = FundAbnormalInfo_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int RateInfo::kRateMsgFieldNumber;
const int RateInfo::kRiseFieldNumber;
const int RateInfo::kUpLimitRateTimeFieldNumber;
const int RateInfo::kUpLimitVolumeFieldNumber;
const int RateInfo::kLowerLimitVolumeFieldNumber;
const int RateInfo::kLowerLimitRateTimeFieldNumber;
const int RateInfo::kFriedTimeFieldNumber;
const int RateInfo::kFriedNumFieldNumber;
const int RateInfo::kMainFundsFieldNumber;
const int RateInfo::kToUpLimitTimeFieldNumber;
const int RateInfo::kToLowerLimitTimeFieldNumber;
const int RateInfo::kLastPriceFieldNumber;
#endif  // !_MSC_VER

RateInfo::RateInfo()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void RateInfo::InitAsDefaultInstance() {
}

RateInfo::RateInfo(const RateInfo& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void RateInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

RateInfo::~RateInfo() {
  SharedDtor();
}

void RateInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void RateInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RateInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return RateInfo_descriptor_;
}

const RateInfo& RateInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_rank_2eproto();  return *default_instance_;
}

RateInfo* RateInfo::default_instance_ = NULL;

RateInfo* RateInfo::New() const {
  return new RateInfo;
}

void RateInfo::Clear() {
  rate_msg_.Clear();
  rise_.Clear();
  up_limit_rate_time_.Clear();
  up_limit_volume_.Clear();
  lower_limit_volume_.Clear();
  lower_limit_rate_time_.Clear();
  fried_time_.Clear();
  fried_num_.Clear();
  main_funds_.Clear();
  to_up_limit_time_.Clear();
  to_lower_limit_time_.Clear();
  last_price_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool RateInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .QuoteProto.RateMsg rate_msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rate_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rate_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_rate_msg;
        if (input->ExpectTag(18)) goto parse_rise;
        break;
      }
      
      // repeated .QuoteProto.RankFeild rise = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_rise:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rise()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_rise;
        if (input->ExpectTag(26)) goto parse_up_limit_rate_time;
        break;
      }
      
      // repeated .QuoteProto.RankFeild up_limit_rate_time = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_up_limit_rate_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_up_limit_rate_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_up_limit_rate_time;
        if (input->ExpectTag(34)) goto parse_up_limit_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild up_limit_volume = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_up_limit_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_up_limit_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_up_limit_volume;
        if (input->ExpectTag(42)) goto parse_lower_limit_volume;
        break;
      }
      
      // repeated .QuoteProto.RankFeild lower_limit_volume = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lower_limit_volume:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lower_limit_volume()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_lower_limit_volume;
        if (input->ExpectTag(50)) goto parse_lower_limit_rate_time;
        break;
      }
      
      // repeated .QuoteProto.RankFeild lower_limit_rate_time = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_lower_limit_rate_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lower_limit_rate_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_lower_limit_rate_time;
        if (input->ExpectTag(58)) goto parse_fried_time;
        break;
      }
      
      // repeated .QuoteProto.RankFeild fried_time = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fried_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fried_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_fried_time;
        if (input->ExpectTag(66)) goto parse_fried_num;
        break;
      }
      
      // repeated .QuoteProto.RankFeild fried_num = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fried_num:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fried_num()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_fried_num;
        if (input->ExpectTag(74)) goto parse_main_funds;
        break;
      }
      
      // repeated .QuoteProto.RankFeild main_funds = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_main_funds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_main_funds()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_main_funds;
        if (input->ExpectTag(82)) goto parse_to_up_limit_time;
        break;
      }
      
      // repeated .QuoteProto.RankFeild to_up_limit_time = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_to_up_limit_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_to_up_limit_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse_to_up_limit_time;
        if (input->ExpectTag(90)) goto parse_to_lower_limit_time;
        break;
      }
      
      // repeated .QuoteProto.RankFeild to_lower_limit_time = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_to_lower_limit_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_to_lower_limit_time()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_to_lower_limit_time;
        if (input->ExpectTag(98)) goto parse_last_price;
        break;
      }
      
      // repeated .QuoteProto.RankFeild last_price = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_last_price:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_last_price()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse_last_price;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void RateInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .QuoteProto.RateMsg rate_msg = 1;
  for (int i = 0; i < this->rate_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rate_msg(i), output);
  }
  
  // repeated .QuoteProto.RankFeild rise = 2;
  for (int i = 0; i < this->rise_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->rise(i), output);
  }
  
  // repeated .QuoteProto.RankFeild up_limit_rate_time = 3;
  for (int i = 0; i < this->up_limit_rate_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->up_limit_rate_time(i), output);
  }
  
  // repeated .QuoteProto.RankFeild up_limit_volume = 4;
  for (int i = 0; i < this->up_limit_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->up_limit_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_volume = 5;
  for (int i = 0; i < this->lower_limit_volume_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->lower_limit_volume(i), output);
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_rate_time = 6;
  for (int i = 0; i < this->lower_limit_rate_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->lower_limit_rate_time(i), output);
  }
  
  // repeated .QuoteProto.RankFeild fried_time = 7;
  for (int i = 0; i < this->fried_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fried_time(i), output);
  }
  
  // repeated .QuoteProto.RankFeild fried_num = 8;
  for (int i = 0; i < this->fried_num_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->fried_num(i), output);
  }
  
  // repeated .QuoteProto.RankFeild main_funds = 9;
  for (int i = 0; i < this->main_funds_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->main_funds(i), output);
  }
  
  // repeated .QuoteProto.RankFeild to_up_limit_time = 10;
  for (int i = 0; i < this->to_up_limit_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->to_up_limit_time(i), output);
  }
  
  // repeated .QuoteProto.RankFeild to_lower_limit_time = 11;
  for (int i = 0; i < this->to_lower_limit_time_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->to_lower_limit_time(i), output);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 12;
  for (int i = 0; i < this->last_price_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->last_price(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* RateInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .QuoteProto.RateMsg rate_msg = 1;
  for (int i = 0; i < this->rate_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->rate_msg(i), target);
  }
  
  // repeated .QuoteProto.RankFeild rise = 2;
  for (int i = 0; i < this->rise_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->rise(i), target);
  }
  
  // repeated .QuoteProto.RankFeild up_limit_rate_time = 3;
  for (int i = 0; i < this->up_limit_rate_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->up_limit_rate_time(i), target);
  }
  
  // repeated .QuoteProto.RankFeild up_limit_volume = 4;
  for (int i = 0; i < this->up_limit_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->up_limit_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_volume = 5;
  for (int i = 0; i < this->lower_limit_volume_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->lower_limit_volume(i), target);
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_rate_time = 6;
  for (int i = 0; i < this->lower_limit_rate_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->lower_limit_rate_time(i), target);
  }
  
  // repeated .QuoteProto.RankFeild fried_time = 7;
  for (int i = 0; i < this->fried_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fried_time(i), target);
  }
  
  // repeated .QuoteProto.RankFeild fried_num = 8;
  for (int i = 0; i < this->fried_num_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->fried_num(i), target);
  }
  
  // repeated .QuoteProto.RankFeild main_funds = 9;
  for (int i = 0; i < this->main_funds_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->main_funds(i), target);
  }
  
  // repeated .QuoteProto.RankFeild to_up_limit_time = 10;
  for (int i = 0; i < this->to_up_limit_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->to_up_limit_time(i), target);
  }
  
  // repeated .QuoteProto.RankFeild to_lower_limit_time = 11;
  for (int i = 0; i < this->to_lower_limit_time_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->to_lower_limit_time(i), target);
  }
  
  // repeated .QuoteProto.RankFeild last_price = 12;
  for (int i = 0; i < this->last_price_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->last_price(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int RateInfo::ByteSize() const {
  int total_size = 0;
  
  // repeated .QuoteProto.RateMsg rate_msg = 1;
  total_size += 1 * this->rate_msg_size();
  for (int i = 0; i < this->rate_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rate_msg(i));
  }
  
  // repeated .QuoteProto.RankFeild rise = 2;
  total_size += 1 * this->rise_size();
  for (int i = 0; i < this->rise_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->rise(i));
  }
  
  // repeated .QuoteProto.RankFeild up_limit_rate_time = 3;
  total_size += 1 * this->up_limit_rate_time_size();
  for (int i = 0; i < this->up_limit_rate_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->up_limit_rate_time(i));
  }
  
  // repeated .QuoteProto.RankFeild up_limit_volume = 4;
  total_size += 1 * this->up_limit_volume_size();
  for (int i = 0; i < this->up_limit_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->up_limit_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_volume = 5;
  total_size += 1 * this->lower_limit_volume_size();
  for (int i = 0; i < this->lower_limit_volume_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lower_limit_volume(i));
  }
  
  // repeated .QuoteProto.RankFeild lower_limit_rate_time = 6;
  total_size += 1 * this->lower_limit_rate_time_size();
  for (int i = 0; i < this->lower_limit_rate_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->lower_limit_rate_time(i));
  }
  
  // repeated .QuoteProto.RankFeild fried_time = 7;
  total_size += 1 * this->fried_time_size();
  for (int i = 0; i < this->fried_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fried_time(i));
  }
  
  // repeated .QuoteProto.RankFeild fried_num = 8;
  total_size += 1 * this->fried_num_size();
  for (int i = 0; i < this->fried_num_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fried_num(i));
  }
  
  // repeated .QuoteProto.RankFeild main_funds = 9;
  total_size += 1 * this->main_funds_size();
  for (int i = 0; i < this->main_funds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->main_funds(i));
  }
  
  // repeated .QuoteProto.RankFeild to_up_limit_time = 10;
  total_size += 1 * this->to_up_limit_time_size();
  for (int i = 0; i < this->to_up_limit_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->to_up_limit_time(i));
  }
  
  // repeated .QuoteProto.RankFeild to_lower_limit_time = 11;
  total_size += 1 * this->to_lower_limit_time_size();
  for (int i = 0; i < this->to_lower_limit_time_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->to_lower_limit_time(i));
  }
  
  // repeated .QuoteProto.RankFeild last_price = 12;
  total_size += 1 * this->last_price_size();
  for (int i = 0; i < this->last_price_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->last_price(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RateInfo::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const RateInfo* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const RateInfo*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void RateInfo::MergeFrom(const RateInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  rate_msg_.MergeFrom(from.rate_msg_);
  rise_.MergeFrom(from.rise_);
  up_limit_rate_time_.MergeFrom(from.up_limit_rate_time_);
  up_limit_volume_.MergeFrom(from.up_limit_volume_);
  lower_limit_volume_.MergeFrom(from.lower_limit_volume_);
  lower_limit_rate_time_.MergeFrom(from.lower_limit_rate_time_);
  fried_time_.MergeFrom(from.fried_time_);
  fried_num_.MergeFrom(from.fried_num_);
  main_funds_.MergeFrom(from.main_funds_);
  to_up_limit_time_.MergeFrom(from.to_up_limit_time_);
  to_lower_limit_time_.MergeFrom(from.to_lower_limit_time_);
  last_price_.MergeFrom(from.last_price_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void RateInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RateInfo::CopyFrom(const RateInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RateInfo::IsInitialized() const {
  
  for (int i = 0; i < rise_size(); i++) {
    if (!this->rise(i).IsInitialized()) return false;
  }
  for (int i = 0; i < up_limit_rate_time_size(); i++) {
    if (!this->up_limit_rate_time(i).IsInitialized()) return false;
  }
  for (int i = 0; i < up_limit_volume_size(); i++) {
    if (!this->up_limit_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < lower_limit_volume_size(); i++) {
    if (!this->lower_limit_volume(i).IsInitialized()) return false;
  }
  for (int i = 0; i < lower_limit_rate_time_size(); i++) {
    if (!this->lower_limit_rate_time(i).IsInitialized()) return false;
  }
  for (int i = 0; i < fried_time_size(); i++) {
    if (!this->fried_time(i).IsInitialized()) return false;
  }
  for (int i = 0; i < fried_num_size(); i++) {
    if (!this->fried_num(i).IsInitialized()) return false;
  }
  for (int i = 0; i < main_funds_size(); i++) {
    if (!this->main_funds(i).IsInitialized()) return false;
  }
  for (int i = 0; i < to_up_limit_time_size(); i++) {
    if (!this->to_up_limit_time(i).IsInitialized()) return false;
  }
  for (int i = 0; i < to_lower_limit_time_size(); i++) {
    if (!this->to_lower_limit_time(i).IsInitialized()) return false;
  }
  for (int i = 0; i < last_price_size(); i++) {
    if (!this->last_price(i).IsInitialized()) return false;
  }
  return true;
}

void RateInfo::Swap(RateInfo* other) {
  if (other != this) {
    rate_msg_.Swap(&other->rate_msg_);
    rise_.Swap(&other->rise_);
    up_limit_rate_time_.Swap(&other->up_limit_rate_time_);
    up_limit_volume_.Swap(&other->up_limit_volume_);
    lower_limit_volume_.Swap(&other->lower_limit_volume_);
    lower_limit_rate_time_.Swap(&other->lower_limit_rate_time_);
    fried_time_.Swap(&other->fried_time_);
    fried_num_.Swap(&other->fried_num_);
    main_funds_.Swap(&other->main_funds_);
    to_up_limit_time_.Swap(&other->to_up_limit_time_);
    to_lower_limit_time_.Swap(&other->to_lower_limit_time_);
    last_price_.Swap(&other->last_price_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata RateInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = RateInfo_descriptor_;
  metadata.reflection = RateInfo_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

// @@protoc_insertion_point(global_scope)
