// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: publish.proto

#ifndef PROTOBUF_publish_2eproto__INCLUDED
#define PROTOBUF_publish_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "ret_base.pb.h"
#include "public_message.pb.h"
// @@protoc_insertion_point(includes)

namespace QuoteProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_publish_2eproto();
void protobuf_AssignDesc_publish_2eproto();
void protobuf_ShutdownFile_publish_2eproto();

class PublishItem;
class PublishRequest;
class PublishResponse;

enum PublishType {
  PublishType_invalid = 0,
  PublishType_stock_block_quote = 1,
  PublishType_stock_block_kline = 20,
  PublishType_stock_block_zhubi = 30,
  PublishType_money_block_quote = 100
};
bool PublishType_IsValid(int value);
const PublishType PublishType_MIN = PublishType_invalid;
const PublishType PublishType_MAX = PublishType_money_block_quote;
const int PublishType_ARRAYSIZE = PublishType_MAX + 1;

const ::google::protobuf::EnumDescriptor* PublishType_descriptor();
inline const ::std::string& PublishType_Name(PublishType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PublishType_descriptor(), value);
}
inline bool PublishType_Parse(
    const ::std::string& name, PublishType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PublishType>(
    PublishType_descriptor(), name, value);
}
// ===================================================================

class PublishItem : public ::google::protobuf::Message {
 public:
  PublishItem();
  virtual ~PublishItem();
  
  PublishItem(const PublishItem& from);
  
  inline PublishItem& operator=(const PublishItem& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishItem& default_instance();
  
  void Swap(PublishItem* other);
  
  // implements Message ----------------------------------------------
  
  PublishItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PublishItem& from);
  void MergeFrom(const PublishItem& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string stock_code = 1;
  inline bool has_stock_code() const;
  inline void clear_stock_code();
  static const int kStockCodeFieldNumber = 1;
  inline const ::std::string& stock_code() const;
  inline void set_stock_code(const ::std::string& value);
  inline void set_stock_code(const char* value);
  inline void set_stock_code(const char* value, size_t size);
  inline ::std::string* mutable_stock_code();
  inline ::std::string* release_stock_code();
  
  // optional .QuoteProto.PublishType ptype = 2;
  inline bool has_ptype() const;
  inline void clear_ptype();
  static const int kPtypeFieldNumber = 2;
  inline QuoteProto::PublishType ptype() const;
  inline void set_ptype(QuoteProto::PublishType value);
  
  // optional int32 kline_type = 3;
  inline bool has_kline_type() const;
  inline void clear_kline_type();
  static const int kKlineTypeFieldNumber = 3;
  inline ::google::protobuf::int32 kline_type() const;
  inline void set_kline_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:QuoteProto.PublishItem)
 private:
  inline void set_has_stock_code();
  inline void clear_has_stock_code();
  inline void set_has_ptype();
  inline void clear_has_ptype();
  inline void set_has_kline_type();
  inline void clear_has_kline_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* stock_code_;
  int ptype_;
  ::google::protobuf::int32 kline_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_publish_2eproto();
  friend void protobuf_AssignDesc_publish_2eproto();
  friend void protobuf_ShutdownFile_publish_2eproto();
  
  void InitAsDefaultInstance();
  static PublishItem* default_instance_;
};
// -------------------------------------------------------------------

class PublishRequest : public ::google::protobuf::Message {
 public:
  PublishRequest();
  virtual ~PublishRequest();
  
  PublishRequest(const PublishRequest& from);
  
  inline PublishRequest& operator=(const PublishRequest& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishRequest& default_instance();
  
  void Swap(PublishRequest* other);
  
  // implements Message ----------------------------------------------
  
  PublishRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PublishRequest& from);
  void MergeFrom(const PublishRequest& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // repeated .QuoteProto.PublishItem stocks = 2;
  inline int stocks_size() const;
  inline void clear_stocks();
  static const int kStocksFieldNumber = 2;
  inline const ::QuoteProto::PublishItem& stocks(int index) const;
  inline ::QuoteProto::PublishItem* mutable_stocks(int index);
  inline ::QuoteProto::PublishItem* add_stocks();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::PublishItem >&
      stocks() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::PublishItem >*
      mutable_stocks();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.PublishRequest)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::PublishItem > stocks_;
  ::google::protobuf::int32 state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void  protobuf_AddDesc_publish_2eproto();
  friend void protobuf_AssignDesc_publish_2eproto();
  friend void protobuf_ShutdownFile_publish_2eproto();
  
  void InitAsDefaultInstance();
  static PublishRequest* default_instance_;
};
// -------------------------------------------------------------------

class PublishResponse : public ::google::protobuf::Message {
 public:
  PublishResponse();
  virtual ~PublishResponse();
  
  PublishResponse(const PublishResponse& from);
  
  inline PublishResponse& operator=(const PublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PublishResponse& default_instance();
  
  void Swap(PublishResponse* other);
  
  // implements Message ----------------------------------------------
  
  PublishResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PublishResponse& from);
  void MergeFrom(const PublishResponse& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .QuoteProto.Ret ret = 1;
  inline bool has_ret() const;
  inline void clear_ret();
  static const int kRetFieldNumber = 1;
  inline const ::QuoteProto::Ret& ret() const;
  inline ::QuoteProto::Ret* mutable_ret();
  inline ::QuoteProto::Ret* release_ret();
  
  // repeated .QuoteProto.StockMsg quote_arr = 2;
  inline int quote_arr_size() const;
  inline void clear_quote_arr();
  static const int kQuoteArrFieldNumber = 2;
  inline const ::QuoteProto::StockMsg& quote_arr(int index) const;
  inline ::QuoteProto::StockMsg* mutable_quote_arr(int index);
  inline ::QuoteProto::StockMsg* add_quote_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
      quote_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
      mutable_quote_arr();
  
  // repeated .QuoteProto.MoneyMsg money_arr = 3;
  inline int money_arr_size() const;
  inline void clear_money_arr();
  static const int kMoneyArrFieldNumber = 3;
  inline const ::QuoteProto::MoneyMsg& money_arr(int index) const;
  inline ::QuoteProto::MoneyMsg* mutable_money_arr(int index);
  inline ::QuoteProto::MoneyMsg* add_money_arr();
  inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
      money_arr() const;
  inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
      mutable_money_arr();
  
  // @@protoc_insertion_point(class_scope:QuoteProto.PublishResponse)
 private:
  inline void set_has_ret();
  inline void clear_has_ret();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::QuoteProto::Ret* ret_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg > quote_arr_;
  ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg > money_arr_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void  protobuf_AddDesc_publish_2eproto();
  friend void protobuf_AssignDesc_publish_2eproto();
  friend void protobuf_ShutdownFile_publish_2eproto();
  
  void InitAsDefaultInstance();
  static PublishResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// PublishItem

// optional string stock_code = 1;
inline bool PublishItem::has_stock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishItem::set_has_stock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishItem::clear_has_stock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishItem::clear_stock_code() {
  if (stock_code_ != &::google::protobuf::internal::kEmptyString) {
    stock_code_->clear();
  }
  clear_has_stock_code();
}
inline const ::std::string& PublishItem::stock_code() const {
  return *stock_code_;
}
inline void PublishItem::set_stock_code(const ::std::string& value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void PublishItem::set_stock_code(const char* value) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(value);
}
inline void PublishItem::set_stock_code(const char* value, size_t size) {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  stock_code_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PublishItem::mutable_stock_code() {
  set_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    stock_code_ = new ::std::string;
  }
  return stock_code_;
}
inline ::std::string* PublishItem::release_stock_code() {
  clear_has_stock_code();
  if (stock_code_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = stock_code_;
    stock_code_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .QuoteProto.PublishType ptype = 2;
inline bool PublishItem::has_ptype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PublishItem::set_has_ptype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PublishItem::clear_has_ptype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PublishItem::clear_ptype() {
  ptype_ = 0;
  clear_has_ptype();
}
inline QuoteProto::PublishType PublishItem::ptype() const {
  return static_cast< QuoteProto::PublishType >(ptype_);
}
inline void PublishItem::set_ptype(QuoteProto::PublishType value) {
  GOOGLE_DCHECK(QuoteProto::PublishType_IsValid(value));
  set_has_ptype();
  ptype_ = value;
}

// optional int32 kline_type = 3;
inline bool PublishItem::has_kline_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PublishItem::set_has_kline_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PublishItem::clear_has_kline_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PublishItem::clear_kline_type() {
  kline_type_ = 0;
  clear_has_kline_type();
}
inline ::google::protobuf::int32 PublishItem::kline_type() const {
  return kline_type_;
}
inline void PublishItem::set_kline_type(::google::protobuf::int32 value) {
  set_has_kline_type();
  kline_type_ = value;
}

// -------------------------------------------------------------------

// PublishRequest

// optional int32 state = 1;
inline bool PublishRequest::has_state() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishRequest::set_has_state() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishRequest::clear_has_state() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishRequest::clear_state() {
  state_ = 0;
  clear_has_state();
}
inline ::google::protobuf::int32 PublishRequest::state() const {
  return state_;
}
inline void PublishRequest::set_state(::google::protobuf::int32 value) {
  set_has_state();
  state_ = value;
}

// repeated .QuoteProto.PublishItem stocks = 2;
inline int PublishRequest::stocks_size() const {
  return stocks_.size();
}
inline void PublishRequest::clear_stocks() {
  stocks_.Clear();
}
inline const ::QuoteProto::PublishItem& PublishRequest::stocks(int index) const {
  return stocks_.Get(index);
}
inline ::QuoteProto::PublishItem* PublishRequest::mutable_stocks(int index) {
  return stocks_.Mutable(index);
}
inline ::QuoteProto::PublishItem* PublishRequest::add_stocks() {
  return stocks_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::PublishItem >&
PublishRequest::stocks() const {
  return stocks_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::PublishItem >*
PublishRequest::mutable_stocks() {
  return &stocks_;
}

// -------------------------------------------------------------------

// PublishResponse

// required .QuoteProto.Ret ret = 1;
inline bool PublishResponse::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PublishResponse::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PublishResponse::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PublishResponse::clear_ret() {
  if (ret_ != NULL) ret_->::QuoteProto::Ret::Clear();
  clear_has_ret();
}
inline const ::QuoteProto::Ret& PublishResponse::ret() const {
  return ret_ != NULL ? *ret_ : *default_instance_->ret_;
}
inline ::QuoteProto::Ret* PublishResponse::mutable_ret() {
  set_has_ret();
  if (ret_ == NULL) ret_ = new ::QuoteProto::Ret;
  return ret_;
}
inline ::QuoteProto::Ret* PublishResponse::release_ret() {
  clear_has_ret();
  ::QuoteProto::Ret* temp = ret_;
  ret_ = NULL;
  return temp;
}

// repeated .QuoteProto.StockMsg quote_arr = 2;
inline int PublishResponse::quote_arr_size() const {
  return quote_arr_.size();
}
inline void PublishResponse::clear_quote_arr() {
  quote_arr_.Clear();
}
inline const ::QuoteProto::StockMsg& PublishResponse::quote_arr(int index) const {
  return quote_arr_.Get(index);
}
inline ::QuoteProto::StockMsg* PublishResponse::mutable_quote_arr(int index) {
  return quote_arr_.Mutable(index);
}
inline ::QuoteProto::StockMsg* PublishResponse::add_quote_arr() {
  return quote_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >&
PublishResponse::quote_arr() const {
  return quote_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::StockMsg >*
PublishResponse::mutable_quote_arr() {
  return &quote_arr_;
}

// repeated .QuoteProto.MoneyMsg money_arr = 3;
inline int PublishResponse::money_arr_size() const {
  return money_arr_.size();
}
inline void PublishResponse::clear_money_arr() {
  money_arr_.Clear();
}
inline const ::QuoteProto::MoneyMsg& PublishResponse::money_arr(int index) const {
  return money_arr_.Get(index);
}
inline ::QuoteProto::MoneyMsg* PublishResponse::mutable_money_arr(int index) {
  return money_arr_.Mutable(index);
}
inline ::QuoteProto::MoneyMsg* PublishResponse::add_money_arr() {
  return money_arr_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >&
PublishResponse::money_arr() const {
  return money_arr_;
}
inline ::google::protobuf::RepeatedPtrField< ::QuoteProto::MoneyMsg >*
PublishResponse::mutable_money_arr() {
  return &money_arr_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace QuoteProto

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< QuoteProto::PublishType>() {
  return QuoteProto::PublishType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_publish_2eproto__INCLUDED
